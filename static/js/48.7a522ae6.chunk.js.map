{"version":3,"file":"static/js/48.7a522ae6.chunk.js","mappings":"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","sources":["components/FieldCustom/CustomInput/CustomInput.jsx","pages/SignUp/SignUp.jsx","services/Authencation/Authencation.jsx","services/Authencation/PurchaseHistory.jsx","services/Authencation/User.jsx"],"sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './CustomInput.scss'\r\n\r\nconst CustomInput = props => {\r\n    const id = props.id ? props.id : null;\r\n    const name = props.name ? props.name : null;\r\n    const type = props.type ? props.type : null;\r\n    const onChange = props.onChange ? props.onChange : null;\r\n    const value = props.value ? props.value : null;\r\n    const lable = props.lable ? props.lable : null;\r\n    const errormessage = props.errormessage ? props.errormessage : null;\r\n    const onBlur = props.onBlur ? props.onBlur : null;\r\n    const touchedForm = props.touchedForm ? props.touchedForm : null;\r\n    \r\n  return (\r\n    <div className=\"CustomInput\">\r\n          <input \r\n            id = {id}\r\n            name = {name}\r\n            type={type}\r\n            // placeholder = \"Email / Số điện thoại\"\r\n            onChange = {onChange}\r\n            onBlur = {onBlur}\r\n            value={value}\r\n            required\r\n          />\r\n          <label className='border-null'>{lable}</label>\r\n          {touchedForm && errormessage ?  <p className=\"CustomInput-error-message\">{errormessage}</p> : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nCustomInput.propTypes = {}\r\n\r\nexport default CustomInput","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from \"yup\"\r\n\r\nimport './SignUp.scss'\r\nimport { Link,useNavigate } from 'react-router-dom';\r\n\r\nimport { AddUserAuthencation } from '../../services/Authencation/Authencation';\r\nimport { AddUserCollection } from '../../services/Authencation/User';\r\nimport CustomInput from '../../components/FieldCustom/CustomInput/CustomInput';\r\nimport { toast } from 'react-toastify';\r\nconst SignUp = props => {\r\n  const history = useNavigate();\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      firstname: \"\",\r\n      lastname: \"\",\r\n      emailOrPhoneNumber: \"\",\r\n      password: \"\",\r\n      reEnterPassword: \"\",\r\n    },\r\n    validationSchema: Yup.object({\r\n      firstname: Yup.string()\r\n        .max(30, \"Họ đệm bạn nhập không vượt quá 30 ký tự\")\r\n        .required(\"Họ đệm không được bỏ trống\"),\r\n      lastname: Yup.string()\r\n        .max(30, \"Tên bạn nhập không vượt quá 30 ký tự\")\r\n        .required(\"Tên không được bỏ trống\"),\r\n      emailOrPhoneNumber: Yup.string()\r\n        .max(254, \"Email hoặc số điện thoại bạn nhập phải ít hơn 254 kí tự\")\r\n        .required(\"Email / Số điện thoại không được bỏ trống\"),\r\n      password: Yup.string().required(\"Mật khẩu không được bỏ trống\"),\r\n      reEnterPassword: Yup.string().required(\"Mật khẩu không được bỏ trống\")\r\n    }),\r\n    onSubmit: async(values) => {\r\n      try{\r\n        const {emailOrPhoneNumber,firstname,lastname,password} = values;\r\n        const uid =  await AddUserAuthencation({\r\n          email:emailOrPhoneNumber,\r\n          password:password,\r\n        })\r\n        console.log(uid)\r\n        if(uid.success){\r\n          console.log(uid.payload)\r\n          const initUser = await AddUserCollection(uid.payload,{\r\n            Email:emailOrPhoneNumber,\r\n            firstname:firstname,\r\n            lastname:lastname,\r\n          })\r\n          if(initUser.success){\r\n            history(\"/Account/SignIn\")\r\n          }else{\r\n            toast.error('🦄 không tạo được tài khoản vui lòng thử lại', {\r\n              position: \"top-right\",\r\n              autoClose: 5000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: \"light\",\r\n              });\r\n          }\r\n        }\r\n      }catch{\r\n        toast.error('🦄 không tạo được tài khoản vui lòng thử lại', {\r\n          position: \"top-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n          });\r\n      }\r\n      \r\n      \r\n    }\r\n  });\r\n  return (\r\n    \r\n    <div className=\"center\">\r\n      <form className=\"sign-in-form\" onSubmit={formik.handleSubmit}>\r\n        <h1>Đăng Ký</h1>\r\n        <div class=\"tabs\">\r\n          <Link to={\"/Account/SignIn\"} className=\"tab-item\">\r\n            Đăng nhập\r\n          </Link>\r\n          <div class=\"tab-item active\">Đăng ký</div>\r\n        </div>\r\n        <CustomInput\r\n          id={\"firstname\"}\r\n          name={\"firstname\"}\r\n          type={\"text\"}\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.firstname}\r\n          errormessage={formik.errors.firstname}\r\n          touchedForm={formik.touched.firstname}\r\n          lable={\"Họ\"}\r\n        />\r\n        <CustomInput\r\n          id={\"lastname\"}\r\n          name={\"lastname\"}\r\n          type={\"text\"}\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.lastname}\r\n          errormessage={formik.errors.lastname}\r\n          touchedForm={formik.touched.lastname}\r\n          lable={\"Tên\"}\r\n        />\r\n        <CustomInput\r\n          id={\"emailOrPhoneNumber\"}\r\n          name={\"emailOrPhoneNumber\"}\r\n          type={\"text\"}\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.emailOrPhoneNumber}\r\n          errormessage={formik.errors.emailOrPhoneNumber}\r\n          touchedForm={formik.touched.emailOrPhoneNumber}\r\n          lable={\"Email\"}\r\n        />\r\n        <CustomInput\r\n          id={\"password\"}\r\n          name={\"password\"}\r\n          type={\"password\"}\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.password}\r\n          errormessage={formik.errors.password}\r\n          touchedForm={formik.touched.password}\r\n          lable={\"Mật khẩu\"}\r\n        />\r\n        <CustomInput\r\n          id={\"reEnterPassword\"}\r\n          name={\"reEnterPassword\"}\r\n          type={\"password\"}\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.reEnterPassword}\r\n          errormessage={formik.errors.reEnterPassword}\r\n          touchedForm={formik.touched.reEnterPassword}\r\n          lable={\"Nhập lại mật khẩu\"}\r\n        />\r\n        \r\n        <button type=\"submit\">Đăng Ký</button>\r\n        <div className=\"forget-password\">\r\n          <a href=\"#\">Bạn quên mật khẩu?</a>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nSignUp.propTypes = {};\r\n\r\nexport default SignUp;","import {\r\n    createUserWithEmailAndPassword, \r\n    getAuth, \r\n    signInWithEmailAndPassword, \r\n    signOut \r\n   } from \"firebase/auth\";\r\n\r\nimport {auth} from '../../Firebase__config' \r\n\r\n// Sign Up website by email and password\r\nexport const AddUserAuthencation = async(user) =>{\r\n    try{\r\n        const {email, password} = user; // \r\n        const data = await createUserWithEmailAndPassword( auth, email, password) .then((userCredential) => {\r\n            // Signed in \r\n            const user = userCredential.user.uid;\r\n            return {\r\n                success: true,\r\n                payload:user,\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            return {\r\n                success: false,\r\n                payload:error,\r\n            }\r\n          });\r\n          return data;\r\n        \r\n    }catch(errors){\r\n        return {\r\n            success: false,\r\n            payload:errors,\r\n        }\r\n    }\r\n}\r\n// Sign Ip website by email and password\r\n export const SiginUserAuthencation = async(user)=>{\r\n    const {email, password} = user;\r\n    const data = await signInWithEmailAndPassword( auth, email, password) .then((userCredential) => { \r\n        const user = userCredential.user;\r\n        return {\r\n            success: true,\r\n            payload:user,\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        return {\r\n            success: false,\r\n            payload:error,\r\n        }\r\n      });\r\n      return data;\r\n}\r\n\r\nexport const SignOut = async()=>{\r\n    signOut(auth).then(() => {\r\n        return {\r\n            success: true,\r\n            payload:\"Sign-out successful\",\r\n        }\r\n      // Sign-out successful.\r\n    }).catch((error) => {\r\n      // An error happened.\r\n      return {\r\n        success: false,\r\n        payload:error,\r\n    }\r\n    });\r\n}","import {db} from '../../Firebase__config'\r\nimport { addDoc, collection, doc, getDoc, getDocs, setDoc, updateDoc} from \"firebase/firestore\";\r\n\r\n\r\nconst CollectionName = \"PurchaseHistory\"\r\n\r\nexport const AddPurchaseHistory = async(uid,uPid,PurchaseHistory)=>{\r\n    const colRef = collection(db, CollectionName);\r\n    const PurDoc = await setDoc(doc(db,\"PurchaseHistory\",uPid),PurchaseHistory);\r\n    \r\n    await updateDoc(doc(db,\"PurchaseHistory\",uPid),{\r\n        Uid:uid,\r\n    })\r\n    \r\n    \r\n}\r\n\r\n//get PurchaseHistory by user\r\nexport const GetPurchaseHistoryByUser = async(uid)=>{\r\n    const colRef = collection(db, CollectionName);\r\n    const ListPur = [];\r\n    const ListPurUser = [];\r\n    const docsSnap = await getDocs(colRef)\r\n    docsSnap.forEach(doc=>{\r\n        ListPur.push({\r\n            PurID: doc.id,\r\n            Info:doc.data()\r\n        })\r\n    })\r\n    for(let i=0; i<ListPur.length; i++){\r\n        if(ListPur[i].Info.Uid ===uid){\r\n            ListPurUser.push(ListPur[i])\r\n        }\r\n    }\r\n    return{\r\n        success: true,\r\n        payload:ListPurUser,\r\n    }\r\n}","import {db} from '../../Firebase__config'\r\nimport { addDoc, arrayUnion, collection, deleteDoc, doc, getDoc, getDocs, query, serverTimestamp, setDoc, Timestamp, updateDoc } from \"firebase/firestore\";\r\nimport { async } from '@firebase/util';\r\nimport { set } from 'firebase/database';\r\nimport {AddBestSell, GetNameProduct, GetPriceProduct, GetQuantityProduct,} from '../Product/Product'\r\nimport { GetPercentDiscountByID } from './Discount';\r\nimport { AddPurchaseHistory } from './PurchaseHistory';\r\nconst CollectionName = \"User\"\r\n\r\n\r\nexport const AddUserCollection = async(uid,newUser)=>{\r\n    const {Email,firstname,lastname} = newUser;\r\n    const initUser = {\r\n        Email:Email,\r\n        Address:\"\",\r\n        Number:\"\",\r\n        ImgUser:\"https://mir-s3-cdn-cf.behance.net/project_modules/max_1200/36015793570193.5e6c1151cb04b.png\",\r\n        FullName:`${firstname} ${lastname}`,\r\n        Birthdate:\"\",\r\n        Role:\"user\",\r\n    }    \r\n    return await setDoc(doc(db, CollectionName, uid), initUser)\r\n    .then(e=>{\r\n        return {\r\n            success: true,\r\n            payload:null,\r\n        }\r\n    })\r\n    .catch((error) => {\r\n        return {\r\n            success: false,\r\n            payload:error,\r\n        }\r\n    })\r\n\r\n}\r\n\r\nexport const GetUserCollection = async(uid)=>{\r\n    \r\n    const docRef = doc(db, CollectionName, uid);   \r\n    const docSnap = await getDoc(docRef);\r\n    if (docSnap.exists()) {\r\n        return {\r\n            success: true,\r\n            payload:docSnap.data(),\r\n        }\r\n    } else {\r\n        // doc.data() will be undefined in this case\r\n        return {\r\n            success: false,\r\n            payload:\"No such document!\",\r\n        }\r\n    }\r\n}\r\n\r\nexport const UpdateUser = async(uid,updateUser)=>{\r\n    const {\r\n        Email,\r\n        Address,\r\n        Number,\r\n        ImgUser,\r\n        FullName,\r\n        Birthdate, \r\n        \r\n    } = updateUser;\r\n    console.log(Email)\r\n    const docRef = doc(db, CollectionName,uid);\r\n    return await updateDoc(docRef,{\r\n        Email:Email,\r\n        Address:Address,\r\n        Number:Number,\r\n        ImgUser:ImgUser,\r\n        FullName:FullName,\r\n        Birthdate:Timestamp.fromDate(new Date(Birthdate)) ,\r\n        Role: \"User\"\r\n    })\r\n    .then(docRef =>{\r\n        return{\r\n            success: true,\r\n            payload:updateUser\r\n        }\r\n    })\r\n    .catch(e=>{\r\n        return{\r\n            success: false,\r\n            payload:e\r\n        }\r\n    })\r\n\r\n\r\n}\r\n\r\nexport const AddToCart = async(value)=>{\r\n    const {uid,Pid,Number} = value;\r\n    const washingtonRef = doc(db,CollectionName, uid);\r\n    //const docRef = await doc(db, `${CollectionName}/${uid}/Cart/`);\r\n\r\n    // add new user \r\n    await updateDoc(washingtonRef, {\r\n        Cart: arrayUnion({\r\n            Pid:Pid,\r\n            Number:Number,\r\n        })\r\n    });\r\n \r\n}\r\nexport const GetToCart = async(uid)=>{\r\n    // const docRef = doc(db,CollectionName,`${uid}/Cart/`);\r\n    const washingtonRef = doc(db,CollectionName, uid,\"Cart\");\r\n    await getDoc(washingtonRef)\r\n    .then((e)=>{\r\n        return {\r\n            success: true,\r\n            payload:e,\r\n        }\r\n    })\r\n    .catch(e=>{\r\n        return {\r\n            success: false,\r\n            payload:e,\r\n        }\r\n    })\r\n    \r\n}\r\nexport const setNewCart = async(uid,listProduct)=>{\r\n    \r\n    const washingtonRef = doc(db,CollectionName, uid);\r\n    \r\n    // add new user \r\n    await updateDoc(washingtonRef, {\r\n        Cart: listProduct\r\n    })\r\n    .then(()=>{\r\n        return {\r\n            success: true,\r\n            payload:null,\r\n        }\r\n    })\r\n    .catch(e=>{\r\n        return {\r\n            success: false,\r\n            payload:e,\r\n        }\r\n    })\r\n}\r\n\r\n//PurchaseHistory\r\nexport const AddPurchaseHistoryForUser = async(uid,status,Cart,ListProduct=[{pid:\"\",quantity:\"\"}]) =>{ \r\n    const {emailOrPhone,Address,Payments,Total,PriceDiscount,\r\n        FullName\r\n    } = Cart;\r\n        const initPur = {\r\n            Item:ListProduct,\r\n            Discount:PriceDiscount,\r\n            Total:Total,\r\n            DayPurchased:serverTimestamp(),\r\n            Address:Address,\r\n            Payments:Payments,\r\n            FullName:FullName,\r\n            Email:emailOrPhone,\r\n            Status:\"Pending\",\r\n        }\r\n        if(status===true){\r\n            \r\n            const docRef = doc(db, CollectionName, uid);\r\n            const colRef = collection(docRef, \"PurchaseHistoryForUser\");\r\n            const PurDoc = await addDoc(colRef,initPur);\r\n            for(let i=0;i<ListProduct.length;i++){\r\n                const docRefP = doc(db,\"Product\",ListProduct[i].pid);\r\n                const QuantityProduct = await GetQuantityProduct(ListProduct[i].pid);\r\n                await updateDoc(docRefP,{\r\n                    Quantity:(QuantityProduct-ListProduct[i].quantity).toString()})\r\n                await AddBestSell(ListProduct[i].pid,ListProduct[i].quantity);\r\n                \r\n            }\r\n            await AddPurchaseHistory(uid,PurDoc.id,initPur);\r\n        }\r\n        else{\r\n            const colRef = collection(db,\"PurchaseHistory\");\r\n            const PurDoc = await addDoc(colRef,initPur);\r\n            const docPur = await doc(db,\"PurchaseHistory\",PurDoc.id);\r\n            for(let i=0;i<ListProduct.length;i++){\r\n                const docRefP = doc(db,\"Product\",ListProduct[i].pid);\r\n                const QuantityProduct = await GetQuantityProduct(ListProduct[i].pid);\r\n                await updateDoc(docRefP,{\r\n                    Quantity:(QuantityProduct-ListProduct[i].quantity).toString()\r\n                                     })\r\n                await AddBestSell(ListProduct[i].pid,ListProduct[i].quantity);\r\n                \r\n            }\r\n            await updateDoc(docPur,{\r\n                    Uid:uid,\r\n        })\r\n        }\r\n       \r\n    }\r\n    export const GetPurchaseHistoryByUser=async(uid,uPid)=>{\r\n        const docRef = doc(db, CollectionName,uid,\"PurchaseHistoryForUser\",uPid);\r\n        const docSnap = await getDoc(docRef);\r\n        if(docSnap.exists())\r\n            return await docSnap.data();\r\n        return{\r\n            success: false,\r\n            payload:\"No Purchase History\"\r\n        }\r\n    }\r\n    \r\n    //Get quantity product\r\n    export const GetQuantity=async(uid,uPid)=>{\r\n        const docRef = doc(db, CollectionName,uid,\"PurchaseHistoryForUser\",uPid);\r\n        const docSnap = await getDoc(docRef);\r\n        if(docSnap.exists())\r\n            return await docSnap.data().Item;\r\n        return{\r\n            success: false,\r\n            payload:\"No Purchase History\"\r\n        }\r\n    }"],"names":["props","id","name","type","onChange","value","lable","errormessage","onBlur","touchedForm","className","required","history","useNavigate","formik","useFormik","enableReinitialize","initialValues","firstname","lastname","emailOrPhoneNumber","password","reEnterPassword","validationSchema","Yup","max","onSubmit","values","AddUserAuthencation","email","uid","console","log","success","payload","AddUserCollection","Email","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","handleSubmit","class","to","CustomInput","handleChange","handleBlur","errors","touched","href","user","createUserWithEmailAndPassword","auth","then","userCredential","catch","error","data","SiginUserAuthencation","signInWithEmailAndPassword","SignOut","signOut","CollectionName","AddPurchaseHistory","uPid","PurchaseHistory","collection","db","setDoc","doc","updateDoc","Uid","newUser","initUser","Address","Number","ImgUser","FullName","Birthdate","Role","e","GetUserCollection","docRef","getDoc","docSnap","exists","UpdateUser","updateUser","Timestamp","Date","AddPurchaseHistoryForUser","status","Cart","ListProduct","pid","quantity","emailOrPhone","Payments","Total","PriceDiscount","initPur","Item","Discount","DayPurchased","serverTimestamp","Status","colRef","addDoc","PurDoc","i","length","docRefP","GetQuantityProduct","QuantityProduct","Quantity","toString","AddBestSell","docPur"],"sourceRoot":""}