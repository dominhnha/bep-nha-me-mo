{"version":3,"file":"static/js/944.4566cde7.chunk.js","mappings":"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","sources":["pages/SignIn/SignIn.jsx","services/Authencation/Authencation.jsx","services/Authencation/PurchaseHistory.jsx","services/Authencation/User.jsx"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from \"yup\"\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\nimport './SignIn.scss';\r\nimport { SiginUserAuthencation } from '../../services/Authencation/Authencation';\r\nimport { AuthContext } from '../../contexts/AuthContextProvider';\r\nimport { GetUserCollection } from '../../services/Authencation/User';\r\nimport { AUTH__SET } from '../../reducers/type';\r\nconst SignIn = (props) => {\r\n  const history = useNavigate();\r\n  const {Authur,dispatch} = useContext(AuthContext);\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      emailOrPhoneNumber: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: Yup.object({\r\n      emailOrPhoneNumber: Yup.string()\r\n        .max(254, \"Email hoặc số điện thoại bạn nhập phải ít hơn 254 kí tự\")\r\n        .required(\"Email / Số điện thoại không được bỏ trống\"),\r\n      password: Yup.string().required(\"Mật khẩu không được bỏ trống\")\r\n    }),\r\n    onSubmit: async(values) => {\r\n      //code chức năng đăng nhập ở đây\r\n      try{\r\n        const {emailOrPhoneNumber,password} = values;\r\n        const uid = await SiginUserAuthencation({\r\n          email:emailOrPhoneNumber,\r\n          password:password,\r\n        });\r\n        console.log(uid.payload)\r\n        if(uid.success){\r\n          const initUser = await GetUserCollection(uid.payload.uid);\r\n          if(initUser.success){\r\n            dispatch({\r\n              type:AUTH__SET,\r\n              payload:{\r\n              user:{\r\n                  uid:uid.payload.uid,\r\n                  user:initUser.payload,        \r\n              }\r\n            }         \r\n            })\r\n            history(\"/\")\r\n          }else{\r\n            history(\"/404\")\r\n          }\r\n          \r\n        }else{\r\n          history(\"/404\")\r\n        }\r\n      }catch(e){\r\n        history(\"/404\")\r\n      }\r\n      console.log(Authur)\r\n      \r\n    }\r\n  });\r\n  return (\r\n    <div className=\"center\">\r\n      <form className=\"sign-in-form\" onSubmit={formik.handleSubmit}>\r\n        <h1>Đăng Nhập</h1>\r\n        <div class=\"tabs\">\r\n          <div class=\"tab-item active\">Đăng nhập</div>\r\n          <Link to={\"/Account/SignUp\"} className=\"tab-item\">\r\n            Đăng ký\r\n          </Link>\r\n        </div>\r\n        <div className=\"input-container\">\r\n          <input \r\n            id = \"emailOrPhoneNumber\"\r\n            name = \"emailOrPhoneNumber\"\r\n            type=\"text\"\r\n            // placeholder = \"Email / Số điện thoại\"\r\n            onChange = {formik.handleChange}\r\n            onBlur = {formik.handleBlur}\r\n            value={formik.values.emailOrPhoneNumber}\r\n            required\r\n          />\r\n          <label className='border-null'>Email / Số điện thoại</label>\r\n          {formik.touched.emailOrPhoneNumber && formik.errors.emailOrPhoneNumber ?  <p className=\"error-message active\">{formik.errors.emailOrPhoneNumber}</p> : null}\r\n        </div>\r\n        <div className=\"input-container\">\r\n          <input \r\n            id = \"password\"\r\n            name = \"password\"\r\n            type=\"password\"\r\n            // placeholder = \"Mật khẩu\"\r\n            onChange = {formik.handleChange}\r\n            onBlur = {formik.handleBlur}\r\n            value={formik.values.password}\r\n            required\r\n          />\r\n          {formik.touched.password && formik.errors.password ?  <p className=\"error-message  active\">{formik.errors.password}</p> : null}\r\n          <label className='border-null'>Mật Khẩu</label>\r\n        </div>\r\n        <button type=\"submit\">Đăng Nhập</button>\r\n        <div className=\"forget-password\">\r\n          <a href=\"#\">Bạn quên mật khẩu?</a>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nSignIn.propTypes = {};\r\n\r\nexport default SignIn;","import {\r\n    createUserWithEmailAndPassword, \r\n    getAuth, \r\n    signInWithEmailAndPassword, \r\n    signOut \r\n   } from \"firebase/auth\";\r\n\r\nimport {auth} from '../../Firebase__config' \r\n\r\n// Sign Up website by email and password\r\nexport const AddUserAuthencation = async(user) =>{\r\n    try{\r\n        const {email, password} = user; // \r\n        const data = await createUserWithEmailAndPassword( auth, email, password) .then((userCredential) => {\r\n            // Signed in \r\n            const user = userCredential.user.uid;\r\n            return {\r\n                success: true,\r\n                payload:user,\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            return {\r\n                success: false,\r\n                payload:error,\r\n            }\r\n          });\r\n          return data;\r\n        \r\n    }catch(errors){\r\n        return {\r\n            success: false,\r\n            payload:errors,\r\n        }\r\n    }\r\n}\r\n// Sign Ip website by email and password\r\n export const SiginUserAuthencation = async(user)=>{\r\n    const {email, password} = user;\r\n    const data = await signInWithEmailAndPassword( auth, email, password) .then((userCredential) => { \r\n        const user = userCredential.user;\r\n        return {\r\n            success: true,\r\n            payload:user,\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        return {\r\n            success: false,\r\n            payload:error,\r\n        }\r\n      });\r\n      return data;\r\n}\r\n\r\nexport const SignOut = async()=>{\r\n    signOut(auth).then(() => {\r\n        return {\r\n            success: true,\r\n            payload:\"Sign-out successful\",\r\n        }\r\n      // Sign-out successful.\r\n    }).catch((error) => {\r\n      // An error happened.\r\n      return {\r\n        success: false,\r\n        payload:error,\r\n    }\r\n    });\r\n}","import {db} from '../../Firebase__config'\r\nimport { addDoc, collection, doc, getDoc, updateDoc} from \"firebase/firestore\";\r\n\r\n\r\nconst CollectionName = \"PurchaseHistory\"\r\n\r\nexport const AddPurchaseHistory = async(uid,uPid,PurchaseHistory)=>{\r\n    const colRef = collection(db, CollectionName);\r\n    const PurDoc = await addDoc(colRef,PurchaseHistory);\r\n    const docPur = await doc(db,\"PurchaseHistory\",PurDoc.id);\r\n    \r\n    await updateDoc(docPur,{\r\n        Uid:uid,\r\n    })\r\n    \r\n    \r\n}\r\n\r\n//get PurchaseHistory by user\r\nexport const GetPurchaseHistoryByUser = async(uid)=>{\r\n\r\n}","import {db} from '../../Firebase__config'\r\nimport { addDoc, arrayUnion, collection, deleteDoc, doc, getDoc, getDocs, query, serverTimestamp, setDoc, Timestamp, updateDoc } from \"firebase/firestore\";\r\nimport { async } from '@firebase/util';\r\nimport { set } from 'firebase/database';\r\nimport {AddBestSell, GetNameProduct, GetPriceProduct, GetQuantityProduct,} from '../Product/Product'\r\nimport { GetPercentDiscountByID } from './Discount';\r\nimport { AddPurchaseHistory } from './PurchaseHistory';\r\nconst CollectionName = \"User\"\r\n\r\n\r\nexport const AddUserCollection = async(uid,newUser)=>{\r\n    const {Email,firstname,lastname} = newUser;\r\n    const initUser = {\r\n        Email:Email,\r\n        Address:\"\",\r\n        Number:\"\",\r\n        ImgUser:\"https://mir-s3-cdn-cf.behance.net/project_modules/max_1200/36015793570193.5e6c1151cb04b.png\",\r\n        FullName:`${firstname} ${lastname}`,\r\n        Birthdate:\"\",\r\n        Role:\"user\",\r\n    }    \r\n    return await setDoc(doc(db, CollectionName, uid), initUser)\r\n    .then(e=>{\r\n        return {\r\n            success: true,\r\n            payload:null,\r\n        }\r\n    })\r\n    .catch((error) => {\r\n        return {\r\n            success: false,\r\n            payload:error,\r\n        }\r\n    })\r\n\r\n}\r\n\r\nexport const GetUserCollection = async(uid)=>{\r\n    \r\n    const docRef = doc(db, CollectionName, uid);   \r\n    const docSnap = await getDoc(docRef);\r\n    if (docSnap.exists()) {\r\n        return {\r\n            success: true,\r\n            payload:docSnap.data(),\r\n        }\r\n    } else {\r\n        // doc.data() will be undefined in this case\r\n        return {\r\n            success: false,\r\n            payload:\"No such document!\",\r\n        }\r\n    }\r\n}\r\n\r\nexport const UpdateUser = async(uid,updateUser)=>{\r\n    const {\r\n        Email,\r\n        Address,\r\n        Number,\r\n        ImgUser,\r\n        FullName,\r\n        Birthdate, \r\n        \r\n    } = updateUser;\r\n    console.log(Email)\r\n    const docRef = doc(db, CollectionName,uid);\r\n    return await updateDoc(docRef,{\r\n        Email:Email,\r\n        Address:Address,\r\n        Number:Number,\r\n        ImgUser:ImgUser,\r\n        FullName:FullName,\r\n        Birthdate:Timestamp.fromDate(new Date(Birthdate)) ,\r\n        Role: \"User\"\r\n    })\r\n    .then(docRef =>{\r\n        return{\r\n            success: true,\r\n            payload:updateUser\r\n        }\r\n    })\r\n    .catch(e=>{\r\n        return{\r\n            success: false,\r\n            payload:e\r\n        }\r\n    })\r\n\r\n\r\n}\r\n\r\nexport const AddToCart = async(value)=>{\r\n    const {uid,Pid,Number} = value;\r\n    const washingtonRef = doc(db,CollectionName, uid);\r\n    //const docRef = await doc(db, `${CollectionName}/${uid}/Cart/`);\r\n\r\n    // add new user \r\n    await updateDoc(washingtonRef, {\r\n        Cart: arrayUnion({\r\n            Pid:Pid,\r\n            Number:Number,\r\n        })\r\n    });\r\n \r\n}\r\nexport const GetToCart = async(uid)=>{\r\n    // const docRef = doc(db,CollectionName,`${uid}/Cart/`);\r\n    const washingtonRef = doc(db,CollectionName, uid,\"Cart\");\r\n    await getDoc(washingtonRef)\r\n    .then((e)=>{\r\n        return {\r\n            success: true,\r\n            payload:e,\r\n        }\r\n    })\r\n    .catch(e=>{\r\n        return {\r\n            success: false,\r\n            payload:e,\r\n        }\r\n    })\r\n    \r\n}\r\nexport const setNewCart = async(uid,listProduct)=>{\r\n    \r\n    const washingtonRef = doc(db,CollectionName, uid);\r\n    \r\n    // add new user \r\n    await updateDoc(washingtonRef, {\r\n        Cart: listProduct\r\n    })\r\n    .then(()=>{\r\n        return {\r\n            success: true,\r\n            payload:null,\r\n        }\r\n    })\r\n    .catch(e=>{\r\n        return {\r\n            success: false,\r\n            payload:e,\r\n        }\r\n    })\r\n}\r\n\r\n//PurchaseHistory\r\nexport const AddPurchaseHistoryForUser = async(uid,status,Cart,ListProduct=[{pid:\"\",quantity:\"\"}]) =>{ \r\n    const {emailOrPhone,Address,Payments,Total,PriceDiscount,\r\n        FullName\r\n    } = Cart;\r\n        const initPur = {\r\n            Item:ListProduct,\r\n            Discount:PriceDiscount,\r\n            Total:Total,\r\n            DayPurchased:serverTimestamp(),\r\n            Address:Address,\r\n            Payments:Payments,\r\n            FullName:FullName,\r\n            Email:emailOrPhone,\r\n        }\r\n        if(status===true){\r\n            \r\n            const docRef = doc(db, CollectionName, uid);\r\n            const colRef = collection(docRef, \"PurchaseHistoryForUser\");\r\n            const PurDoc = await addDoc(colRef,initPur);\r\n            for(let i=0;i<ListProduct.length;i++){\r\n                const docRefP = doc(db,\"Product\",ListProduct[i].pid);\r\n                const QuantityProduct = await GetQuantityProduct(ListProduct[i].pid);\r\n                await updateDoc(docRefP,{\r\n                    Quantity:(QuantityProduct-ListProduct[i].quantity).toString()})\r\n                await AddBestSell(ListProduct[i].pid,ListProduct[i].quantity);\r\n                \r\n            }\r\n            await AddPurchaseHistory(uid,PurDoc.id,initPur);\r\n        }\r\n        else{\r\n            const colRef = collection(db,\"PurchaseHistory\");\r\n            const PurDoc = await addDoc(colRef,initPur);\r\n            const docPur = await doc(db,\"PurchaseHistory\",PurDoc.id);\r\n            for(let i=0;i<ListProduct.length;i++){\r\n                const docRefP = doc(db,\"Product\",ListProduct[i].pid);\r\n                const QuantityProduct = await GetQuantityProduct(ListProduct[i].pid);\r\n                await updateDoc(docRefP,{\r\n                    Quantity:(QuantityProduct-ListProduct[i].quantity).toString()\r\n                                     })\r\n                await AddBestSell(ListProduct[i].pid,ListProduct[i].quantity);\r\n                \r\n            }\r\n            await updateDoc(docPur,{\r\n                    Uid:uid,\r\n        })\r\n        }\r\n       \r\n    }\r\n    export const GetPurchaseHistoryByUser=async(uid,uPid)=>{\r\n        const docRef = doc(db, CollectionName,uid,\"PurchaseHistoryForUser\",uPid);\r\n        const docSnap = await getDoc(docRef);\r\n        if(docSnap.exists())\r\n            return await docSnap.data();\r\n        return{\r\n            success: false,\r\n            payload:\"No Purchase History\"\r\n        }\r\n    }\r\n    \r\n    //Get quantity product\r\n    export const GetQuantity=async(uid,uPid)=>{\r\n        const docRef = doc(db, CollectionName,uid,\"PurchaseHistoryForUser\",uPid);\r\n        const docSnap = await getDoc(docRef);\r\n        if(docSnap.exists())\r\n            return await docSnap.data().Item;\r\n        return{\r\n            success: false,\r\n            payload:\"No Purchase History\"\r\n        }\r\n    }"],"names":["props","history","useNavigate","useContext","AuthContext","Authur","dispatch","formik","useFormik","initialValues","emailOrPhoneNumber","password","validationSchema","Yup","max","required","onSubmit","values","SiginUserAuthencation","email","uid","console","log","payload","success","GetUserCollection","initUser","type","AUTH__SET","user","className","handleSubmit","class","to","id","name","onChange","handleChange","onBlur","handleBlur","value","touched","errors","href","AddUserAuthencation","createUserWithEmailAndPassword","auth","then","userCredential","catch","error","data","signInWithEmailAndPassword","SignOut","signOut","AddPurchaseHistory","uPid","PurchaseHistory","colRef","collection","db","addDoc","PurDoc","doc","docPur","updateDoc","Uid","CollectionName","AddUserCollection","newUser","Email","firstname","lastname","Address","Number","ImgUser","FullName","Birthdate","Role","setDoc","e","docRef","getDoc","docSnap","exists","UpdateUser","updateUser","Timestamp","Date","AddPurchaseHistoryForUser","status","Cart","ListProduct","pid","quantity","emailOrPhone","Payments","Total","PriceDiscount","initPur","Item","Discount","DayPurchased","serverTimestamp","i","length","docRefP","GetQuantityProduct","QuantityProduct","Quantity","toString","AddBestSell"],"sourceRoot":""}