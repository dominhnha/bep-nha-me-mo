{"version":3,"file":"static/js/944.62281679.chunk.js","mappings":"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","sources":["components/FieldCustom/CustomInput/CustomInput.jsx","pages/SignIn/SignIn.jsx","services/Authencation/Authencation.jsx","services/Authencation/PurchaseHistory.jsx","services/Authencation/User.jsx"],"sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './CustomInput.scss'\r\n\r\nconst CustomInput = props => {\r\n    const id = props.id ? props.id : null;\r\n    const name = props.name ? props.name : null;\r\n    const type = props.type ? props.type : null;\r\n    const onChange = props.onChange ? props.onChange : null;\r\n    const value = props.value ? props.value : null;\r\n    const lable = props.lable ? props.lable : null;\r\n    const errormessage = props.errormessage ? props.errormessage : null;\r\n    const onBlur = props.onBlur ? props.onBlur : null;\r\n    const touchedForm = props.touchedForm ? props.touchedForm : null;\r\n    \r\n  return (\r\n    <div className=\"CustomInput\">\r\n          <input \r\n            id = {id}\r\n            name = {name}\r\n            type={type}\r\n            // placeholder = \"Email / Số điện thoại\"\r\n            onChange = {onChange}\r\n            onBlur = {onBlur}\r\n            value={value}\r\n            required\r\n          />\r\n          <label className='border-null'>{lable}</label>\r\n          {touchedForm && errormessage ?  <p className=\"CustomInput-error-message\">{errormessage}</p> : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nCustomInput.propTypes = {}\r\n\r\nexport default CustomInput","import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from \"yup\"\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\nimport './SignIn.scss';\r\nimport { SiginUserAuthencation } from '../../services/Authencation/Authencation';\r\nimport { AuthContext } from '../../contexts/AuthContextProvider';\r\nimport { GetUserCollection } from '../../services/Authencation/User';\r\nimport { AUTH__SET } from '../../reducers/type';\r\nimport CustomInput from '../../components/FieldCustom/CustomInput/CustomInput';\r\nimport { toast } from 'react-toastify';\r\nconst SignIn = (props) => {\r\n  const history = useNavigate();\r\n  const { Authur, dispatch } = useContext(AuthContext);\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      emailOrPhoneNumber: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: Yup.object({\r\n      emailOrPhoneNumber: Yup.string()\r\n        .max(254, \"Email hoặc số điện thoại bạn nhập phải ít hơn 254 kí tự\")\r\n        .required(\"Email / Số điện thoại không được bỏ trống\"),\r\n      password: Yup.string().required(\"Mật khẩu không được bỏ trống\")\r\n    }),\r\n    onSubmit: async (values) => {\r\n      //code chức năng đăng nhập ở đây\r\n      try {\r\n        const { emailOrPhoneNumber, password } = values;\r\n        const uid = await SiginUserAuthencation({\r\n          email: emailOrPhoneNumber,\r\n          password: password,\r\n        });\r\n        console.log(uid.payload)\r\n        if (uid.success) {\r\n          const initUser = await GetUserCollection(uid.payload.uid);\r\n          if (initUser.success) {\r\n            dispatch({\r\n              type: AUTH__SET,\r\n              payload: {\r\n                user: {\r\n                  uid: uid.payload.uid,\r\n                  user: initUser.payload,\r\n                }\r\n              }\r\n            })\r\n            history(\"/\")\r\n          } else {\r\n            toast.error('🦄 tài khoản hoặc mật khẩu sai vui lòng nhập lại', {\r\n              position: \"top-right\",\r\n              autoClose: 5000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: \"light\",\r\n              });\r\n              \r\n          }\r\n\r\n        } else {\r\n          toast.error('🦄 tài khoản hoặc mật khẩu sai vui lòng nhập lại', {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n            });\r\n            \r\n        }\r\n      } catch (e) {\r\n        toast.error('🦄 tài khoản hoặc mật khẩu sai vui lòng nhập lại', {\r\n          position: \"top-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n          });\r\n          formik.values.emailOrPhoneNumber = \"\"\r\n          formik.values.password = \"\"\r\n      }\r\n      console.log(Authur)\r\n\r\n    }\r\n  });\r\n  return (\r\n    <div className=\"center\">\r\n      <form className=\"sign-in-form\" onSubmit={formik.handleSubmit}>\r\n        <h1>Đăng Nhập</h1>\r\n        <div class=\"tabs\">\r\n          <div class=\"tab-item active\">Đăng nhập</div>\r\n          <Link to={\"/Account/SignUp\"} className=\"tab-item\">\r\n            Đăng ký\r\n          </Link>\r\n        </div>\r\n        <CustomInput\r\n          id={\"emailOrPhoneNumber\"}\r\n          name={\"emailOrPhoneNumber\"}\r\n          type={\"text\"}\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.emailOrPhoneNumber}\r\n          errormessage={formik.errors.emailOrPhoneNumber}\r\n          touchedForm={formik.touched.emailOrPhoneNumber}\r\n          lable={\"Email / Số điện thoại\"}\r\n        /\r\n        >\r\n        <CustomInput\r\n          id={\"password\"}\r\n          name={\"password\"}\r\n          type={\"password\"}\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.password}\r\n          errormessage={formik.errors.password}\r\n          touchedForm={formik.touched.password}\r\n          lable={\"Mật khẩu\"}\r\n        /\r\n        >\r\n        \r\n        <button type=\"submit\">Đăng Nhập</button>\r\n        <div className=\"forget-password\">\r\n          <a href=\"#\">Bạn quên mật khẩu?</a>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nSignIn.propTypes = {};\r\n\r\nexport default SignIn;","import {\r\n    createUserWithEmailAndPassword, \r\n    getAuth, \r\n    signInWithEmailAndPassword, \r\n    signOut \r\n   } from \"firebase/auth\";\r\n\r\nimport {auth} from '../../Firebase__config' \r\n\r\n// Sign Up website by email and password\r\nexport const AddUserAuthencation = async(user) =>{\r\n    try{\r\n        const {email, password} = user; // \r\n        const data = await createUserWithEmailAndPassword( auth, email, password) .then((userCredential) => {\r\n            // Signed in \r\n            const user = userCredential.user.uid;\r\n            return {\r\n                success: true,\r\n                payload:user,\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            return {\r\n                success: false,\r\n                payload:error,\r\n            }\r\n          });\r\n          return data;\r\n        \r\n    }catch(errors){\r\n        return {\r\n            success: false,\r\n            payload:errors,\r\n        }\r\n    }\r\n}\r\n// Sign Ip website by email and password\r\n export const SiginUserAuthencation = async(user)=>{\r\n    const {email, password} = user;\r\n    const data = await signInWithEmailAndPassword( auth, email, password) .then((userCredential) => { \r\n        const user = userCredential.user;\r\n        return {\r\n            success: true,\r\n            payload:user,\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        return {\r\n            success: false,\r\n            payload:error,\r\n        }\r\n      });\r\n      return data;\r\n}\r\n\r\nexport const SignOut = async()=>{\r\n    signOut(auth).then(() => {\r\n        return {\r\n            success: true,\r\n            payload:\"Sign-out successful\",\r\n        }\r\n      // Sign-out successful.\r\n    }).catch((error) => {\r\n      // An error happened.\r\n      return {\r\n        success: false,\r\n        payload:error,\r\n    }\r\n    });\r\n}","import {db} from '../../Firebase__config'\r\nimport { addDoc, collection, doc, getDoc, getDocs, setDoc, updateDoc} from \"firebase/firestore\";\r\n\r\n\r\nconst CollectionName = \"PurchaseHistory\"\r\n\r\nexport const AddPurchaseHistory = async(uid,uPid,PurchaseHistory)=>{\r\n    const colRef = collection(db, CollectionName);\r\n    const PurDoc = await setDoc(doc(db,\"PurchaseHistory\",uPid),PurchaseHistory);\r\n    \r\n    await updateDoc(doc(db,\"PurchaseHistory\",uPid),{\r\n        Uid:uid,\r\n    })\r\n    \r\n    \r\n}\r\n\r\n//get PurchaseHistory by user\r\nexport const GetPurchaseHistoryByUser = async(uid)=>{\r\n    const colRef = collection(db, CollectionName);\r\n    const ListPur = [];\r\n    const ListPurUser = [];\r\n    const docsSnap = await getDocs(colRef)\r\n    docsSnap.forEach(doc=>{\r\n        ListPur.push({\r\n            PurID: doc.id,\r\n            Info:doc.data()\r\n        })\r\n    })\r\n    for(let i=0; i<ListPur.length; i++){\r\n        if(ListPur[i].Info.Uid ===uid){\r\n            ListPurUser.push(ListPur[i])\r\n        }\r\n    }\r\n    return{\r\n        success: true,\r\n        payload:ListPurUser,\r\n    }\r\n}","import {db} from '../../Firebase__config'\r\nimport { addDoc, arrayUnion, collection, deleteDoc, doc, getDoc, getDocs, query, serverTimestamp, setDoc, Timestamp, updateDoc } from \"firebase/firestore\";\r\nimport { async } from '@firebase/util';\r\nimport { set } from 'firebase/database';\r\nimport {AddBestSell, GetNameProduct, GetPriceProduct, GetQuantityProduct,} from '../Product/Product'\r\nimport { GetPercentDiscountByID } from './Discount';\r\nimport { AddPurchaseHistory } from './PurchaseHistory';\r\nconst CollectionName = \"User\"\r\n\r\n\r\nexport const AddUserCollection = async(uid,newUser)=>{\r\n    const {Email,firstname,lastname} = newUser;\r\n    const initUser = {\r\n        Email:Email,\r\n        Address:\"\",\r\n        Number:\"\",\r\n        ImgUser:\"https://mir-s3-cdn-cf.behance.net/project_modules/max_1200/36015793570193.5e6c1151cb04b.png\",\r\n        FullName:`${firstname} ${lastname}`,\r\n        Birthdate:\"\",\r\n        Role:\"user\",\r\n    }    \r\n    return await setDoc(doc(db, CollectionName, uid), initUser)\r\n    .then(e=>{\r\n        return {\r\n            success: true,\r\n            payload:null,\r\n        }\r\n    })\r\n    .catch((error) => {\r\n        return {\r\n            success: false,\r\n            payload:error,\r\n        }\r\n    })\r\n\r\n}\r\n\r\nexport const GetUserCollection = async(uid)=>{\r\n    \r\n    const docRef = doc(db, CollectionName, uid);   \r\n    const docSnap = await getDoc(docRef);\r\n    if (docSnap.exists()) {\r\n        return {\r\n            success: true,\r\n            payload:docSnap.data(),\r\n        }\r\n    } else {\r\n        // doc.data() will be undefined in this case\r\n        return {\r\n            success: false,\r\n            payload:\"No such document!\",\r\n        }\r\n    }\r\n}\r\n\r\nexport const UpdateUser = async(uid,updateUser)=>{\r\n    const {\r\n        Email,\r\n        Address,\r\n        Number,\r\n        ImgUser,\r\n        FullName,\r\n        Birthdate, \r\n        \r\n    } = updateUser;\r\n    console.log(Email)\r\n    const docRef = doc(db, CollectionName,uid);\r\n    return await updateDoc(docRef,{\r\n        Email:Email,\r\n        Address:Address,\r\n        Number:Number,\r\n        ImgUser:ImgUser,\r\n        FullName:FullName,\r\n        Birthdate:Timestamp.fromDate(new Date(Birthdate)) ,\r\n        Role: \"User\"\r\n    })\r\n    .then(docRef =>{\r\n        return{\r\n            success: true,\r\n            payload:updateUser\r\n        }\r\n    })\r\n    .catch(e=>{\r\n        return{\r\n            success: false,\r\n            payload:e\r\n        }\r\n    })\r\n\r\n\r\n}\r\n\r\nexport const AddToCart = async(value)=>{\r\n    const {uid,Pid,Number} = value;\r\n    const washingtonRef = doc(db,CollectionName, uid);\r\n    //const docRef = await doc(db, `${CollectionName}/${uid}/Cart/`);\r\n\r\n    // add new user \r\n    await updateDoc(washingtonRef, {\r\n        Cart: arrayUnion({\r\n            Pid:Pid,\r\n            Number:Number,\r\n        })\r\n    });\r\n \r\n}\r\nexport const GetToCart = async(uid)=>{\r\n    // const docRef = doc(db,CollectionName,`${uid}/Cart/`);\r\n    const washingtonRef = doc(db,CollectionName, uid,\"Cart\");\r\n    await getDoc(washingtonRef)\r\n    .then((e)=>{\r\n        return {\r\n            success: true,\r\n            payload:e,\r\n        }\r\n    })\r\n    .catch(e=>{\r\n        return {\r\n            success: false,\r\n            payload:e,\r\n        }\r\n    })\r\n    \r\n}\r\nexport const setNewCart = async(uid,listProduct)=>{\r\n    \r\n    const washingtonRef = doc(db,CollectionName, uid);\r\n    \r\n    // add new user \r\n    await updateDoc(washingtonRef, {\r\n        Cart: listProduct\r\n    })\r\n    .then(()=>{\r\n        return {\r\n            success: true,\r\n            payload:null,\r\n        }\r\n    })\r\n    .catch(e=>{\r\n        return {\r\n            success: false,\r\n            payload:e,\r\n        }\r\n    })\r\n}\r\n\r\n//PurchaseHistory\r\nexport const AddPurchaseHistoryForUser = async(uid,status,Cart,ListProduct=[{pid:\"\",quantity:\"\"}]) =>{ \r\n    const {emailOrPhone,Address,Payments,Total,PriceDiscount,\r\n        FullName\r\n    } = Cart;\r\n        const initPur = {\r\n            Item:ListProduct,\r\n            Discount:PriceDiscount,\r\n            Total:Total,\r\n            DayPurchased:serverTimestamp(),\r\n            Address:Address,\r\n            Payments:Payments,\r\n            FullName:FullName,\r\n            Email:emailOrPhone,\r\n            Status:\"Pending\",\r\n        }\r\n        if(status===true){\r\n            \r\n            const docRef = doc(db, CollectionName, uid);\r\n            const colRef = collection(docRef, \"PurchaseHistoryForUser\");\r\n            const PurDoc = await addDoc(colRef,initPur);\r\n            for(let i=0;i<ListProduct.length;i++){\r\n                const docRefP = doc(db,\"Product\",ListProduct[i].pid);\r\n                const QuantityProduct = await GetQuantityProduct(ListProduct[i].pid);\r\n                await updateDoc(docRefP,{\r\n                    Quantity:(QuantityProduct-ListProduct[i].quantity).toString()})\r\n                await AddBestSell(ListProduct[i].pid,ListProduct[i].quantity);\r\n                \r\n            }\r\n            await AddPurchaseHistory(uid,PurDoc.id,initPur);\r\n        }\r\n        else{\r\n            const colRef = collection(db,\"PurchaseHistory\");\r\n            const PurDoc = await addDoc(colRef,initPur);\r\n            const docPur = await doc(db,\"PurchaseHistory\",PurDoc.id);\r\n            for(let i=0;i<ListProduct.length;i++){\r\n                const docRefP = doc(db,\"Product\",ListProduct[i].pid);\r\n                const QuantityProduct = await GetQuantityProduct(ListProduct[i].pid);\r\n                await updateDoc(docRefP,{\r\n                    Quantity:(QuantityProduct-ListProduct[i].quantity).toString()\r\n                                     })\r\n                await AddBestSell(ListProduct[i].pid,ListProduct[i].quantity);\r\n                \r\n            }\r\n            await updateDoc(docPur,{\r\n                    Uid:uid,\r\n        })\r\n        }\r\n       \r\n    }\r\n    export const GetPurchaseHistoryByUser=async(uid,uPid)=>{\r\n        const docRef = doc(db, CollectionName,uid,\"PurchaseHistoryForUser\",uPid);\r\n        const docSnap = await getDoc(docRef);\r\n        if(docSnap.exists())\r\n            return await docSnap.data();\r\n        return{\r\n            success: false,\r\n            payload:\"No Purchase History\"\r\n        }\r\n    }\r\n    \r\n    //Get quantity product\r\n    export const GetQuantity=async(uid,uPid)=>{\r\n        const docRef = doc(db, CollectionName,uid,\"PurchaseHistoryForUser\",uPid);\r\n        const docSnap = await getDoc(docRef);\r\n        if(docSnap.exists())\r\n            return await docSnap.data().Item;\r\n        return{\r\n            success: false,\r\n            payload:\"No Purchase History\"\r\n        }\r\n    }"],"names":["props","id","name","type","onChange","value","lable","errormessage","onBlur","touchedForm","className","required","history","useNavigate","useContext","AuthContext","Authur","dispatch","formik","useFormik","enableReinitialize","initialValues","emailOrPhoneNumber","password","validationSchema","Yup","max","onSubmit","values","SiginUserAuthencation","email","uid","console","log","payload","success","GetUserCollection","initUser","AUTH__SET","user","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","handleSubmit","class","to","CustomInput","handleChange","handleBlur","errors","touched","href","AddUserAuthencation","createUserWithEmailAndPassword","auth","then","userCredential","catch","error","data","signInWithEmailAndPassword","SignOut","signOut","CollectionName","AddPurchaseHistory","uPid","PurchaseHistory","collection","db","setDoc","doc","updateDoc","Uid","AddUserCollection","newUser","Email","firstname","lastname","Address","Number","ImgUser","FullName","Birthdate","Role","e","docRef","getDoc","docSnap","exists","UpdateUser","updateUser","Timestamp","Date","AddPurchaseHistoryForUser","status","Cart","ListProduct","pid","quantity","emailOrPhone","Payments","Total","PriceDiscount","initPur","Item","Discount","DayPurchased","serverTimestamp","Status","colRef","addDoc","PurDoc","i","length","docRefP","GetQuantityProduct","QuantityProduct","Quantity","toString","AddBestSell","docPur"],"sourceRoot":""}