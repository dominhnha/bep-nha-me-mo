{"version":3,"file":"static/js/194.e8c862a4.chunk.js","mappings":";gmCAUO,SAASA,IAEf,CAKM,IAAMC,EAAO,WAClB,IAAIC,EAAK,EACT,OAAO,kBAAMA,GAAN,CACR,CAHmB,GAUb,SAASC,EAAcC,GAC5B,OAAiB,OAAVA,GAAmC,qBAAVA,CACjC,CAOM,SAASC,EAAqBD,GACnC,GAAIE,MAAMD,SAAWC,MAAMD,QAAQD,GACjC,OAAO,EAET,IAAMG,EAAOC,OAAOC,UAAUC,SAASC,KAAKP,GAC5C,MAAyB,YAArBG,EAAKK,MAAM,EAAG,IAAuC,WAAnBL,EAAKK,OAAO,EAInD,CAOM,SAASC,EAAST,GACvB,OAAiB,OAAVA,GAA4D,oBAA1CI,OAAOC,UAAUC,SAASC,KAAKP,EACzD,CAMD,SAASU,EAAeV,GACtB,OAAyB,kBAAVA,GAAsBA,aAAiBW,SAAWC,UAAUZ,EAC5E,CAUM,SAASa,EAAgBb,EAAgBc,GAC9C,OAAOJ,EAAeV,GAASA,EAAQc,CACxC,CAOM,SAASC,EAAkBf,EAAsBc,GACtD,MAAwB,qBAAVd,EAAwBc,EAAed,CACtD,CAEYgB,IAKAC,EAAc,SAACjB,EAAwBkB,GAAzB,MACR,kBAAVlB,GAAsBA,EAAMmB,SAAS,KAC1CC,WAAWpB,GAAS,IAAMkB,GACvBlB,CAHoB,EAYpB,SAASqB,EACdC,EACAC,EACAC,GAEA,GAAIF,GAAyB,oBAAZA,EAAGf,KAClB,OAAOe,EAAGG,MAAMD,EAASD,EAE5B,CAuBM,SAASG,EACdC,EACAL,EACAE,EACAI,GAEA,IAAIC,EAAWC,EAAaC,EAC5B,GAAI9B,EAAQ0B,GAEV,GADAG,EAAMH,EAASK,OACXJ,EACF,IAAKC,EAAIC,EAAM,EAAGD,GAAK,EAAGA,IACxBP,EAAGf,KAAKiB,EAASG,EAASE,GAAIA,QAGhC,IAAKA,EAAI,EAAGA,EAAIC,EAAKD,IACnBP,EAAGf,KAAKiB,EAASG,EAASE,GAAIA,QAG7B,GAAIpB,EAASkB,GAGlB,IADAG,GADAC,EAAO3B,OAAO2B,KAAKJ,IACRK,OACNH,EAAI,EAAGA,EAAIC,EAAKD,IACnBP,EAAGf,KAAKiB,EAASG,EAASI,EAAKF,IAAKE,EAAKF,GAG9C,CAQM,SAASI,EAAeC,EAAuBC,GACpD,IAAIN,EAAWO,EAAcC,EAAqBC,EAElD,IAAKJ,IAAOC,GAAMD,EAAGF,SAAWG,EAAGH,OACjC,OAAO,EAGT,IAAKH,EAAI,EAAGO,EAAOF,EAAGF,OAAQH,EAAIO,IAAQP,EAIxC,GAHAQ,EAAKH,EAAGL,GACRS,EAAKH,EAAGN,GAEJQ,EAAGE,eAAiBD,EAAGC,cAAgBF,EAAGG,QAAUF,EAAGE,MACzD,OAAO,EAIX,OAAO,CACR,CAMM,SAASC,EAASC,GACvB,GAAIzC,EAAQyC,GACV,OAAOA,EAAOC,IAAIF,GAGpB,GAAIhC,EAASiC,GAAS,CAMpB,IALA,IAAME,EAASxC,OAAOyC,OAAO,MACvBd,EAAO3B,OAAO2B,KAAKW,GACnBI,EAAOf,EAAKC,OACde,EAAI,EAEDA,EAAID,IAAQC,EACjBH,EAAOb,EAAKgB,IAAMN,EAAMC,EAAOX,EAAKgB,KAGtC,OAAOH,CACR,CAED,OAAOF,CACR,CAED,SAASM,EAAWC,GAClB,OAAmE,IAA5D,CAAC,YAAa,YAAa,eAAeC,QAAQD,EAC1D,CAOM,SAASE,EAAQF,EAAaL,EAAmBF,EAAmBU,GACzE,GAAKJ,EAAWC,GAAhB,CAIA,IAAMI,EAAOT,EAAOK,GACdK,EAAOZ,EAAOO,GAEhBxC,EAAS4C,IAAS5C,EAAS6C,GAE7BC,EAAMF,EAAMC,EAAMF,GAElBR,EAAOK,GAAOR,EAAMa,EATrB,CAWF,CA0BM,SAASC,EAASX,EAAWF,EAAqBU,GACvD,IAAMI,EAAUvD,EAAQyC,GAAUA,EAAS,CAACA,GACtCN,EAAOoB,EAAQxB,OAErB,IAAKvB,EAASmC,GACZ,OAAOA,EAOT,IAHA,IACIa,EADEC,GADNN,EAAUA,GAAW,CAAC,GACCM,QAAUP,EAGxBtB,EAAI,EAAGA,EAAIO,IAAQP,EAE1B,GAAKpB,EADLgD,EAAUD,EAAQ3B,IAMlB,IADA,IAAME,EAAO3B,OAAO2B,KAAK0B,GAChBV,EAAI,EAAGD,EAAOf,EAAKC,OAAQe,EAAID,IAAQC,EAC9CW,EAAO3B,EAAKgB,GAAIH,EAAQa,EAASL,GAIrC,OAAOR,CACR,CAgBM,SAASe,EAAWf,EAAWF,GAEpC,OAAOa,EAASX,EAAQF,EAAQ,CAACgB,OAAQE,GAC1C,CAMM,SAASA,EAAUX,EAAaL,EAAmBF,GACxD,GAAKM,EAAWC,GAAhB,CAIA,IAAMI,EAAOT,EAAOK,GACdK,EAAOZ,EAAOO,GAEhBxC,EAAS4C,IAAS5C,EAAS6C,GAC7BK,EAAQN,EAAMC,GACJlD,OAAOC,UAAUwD,eAAetD,KAAKqC,EAAQK,KACvDL,EAAOK,GAAOR,EAAMa,GARrB,CAUF,CAaD,IAAMQ,EAAe,CAEnB,GAAIC,SAAAA,GAAAA,OAAKA,CAALA,EAEJC,EAAGC,SAAAA,GAAAA,OAAKA,EAAED,CAAPC,EACHC,EAAGD,SAAAA,GAAAA,OAAKA,EAAEC,CAAPD,GAsBL,SAASE,EAAgBlB,GACvB,IAAMlB,EAjBD,SAAmBkB,GACxB,IADqC,EAC/BmB,EAAQnB,EAAIoB,MAAM,KAClBtC,EAAiB,GACnBuC,EAAM,GAH2B,UAIlBF,GAJkB,IAIrC,IAAK,EAAL,sBACEE,GADwB,SAEhBnD,SAAS,MACfmD,EAAMA,EAAI9D,MAAM,GAAI,GAAK,KAEzBuB,EAAKwC,KAAKD,GACVA,EAAM,GAV2B,+BAarC,OAAOvC,CACR,CAGcyC,CAAUvB,GACvB,OAAOwB,SAAAA,GAAO,gBACI1C,GADJ,IACZ,IAAK,EAAL,qBAAsB,KAAXgB,EAAW,QACpB,GAAU,KAANA,EAGF,MAEF0B,EAAMA,GAAOA,EAAI1B,EAClB,CARW,+BASZ,OAAO0B,CACR,CACF,CAEM,SAASC,EAAiBD,EAAgBxB,GAE/C,OADiBa,EAAab,KAASa,EAAab,GAAOkB,EAAgBlB,KAC3DwB,EACjB,CAKM,SAASE,EAAYC,GAC1B,OAAOA,EAAIC,OAAO,GAAGC,cAAgBF,EAAIpE,MAAM,EAChD,CAGM,IAAMuE,EAAU,SAAC/E,GAAD,MAAqC,qBAAVA,CAA3B,EAEVgF,EAAa,SAAChF,GAAD,MAAuE,oBAAVA,CAA7D,EAGbiF,EAAY,SAAIC,EAAWC,GACtC,GAAID,EAAEE,OAASD,EAAEC,KACf,OAAO,EAF2C,gBAKjCF,GALiC,IAKpD,IAAK,EAAL,qBAAsB,KAAXG,EAAW,QACpB,IAAKF,EAAEG,IAAID,GACT,OAAO,CAEV,CATmD,+BAWpD,OAAO,GC9YIE,IAAAA,EAAKC,KAAKD,GACVE,EAAM,EAAIF,EACVG,EAAQD,EAAMF,EACdI,EAAWhF,OAAOiF,kBAClBC,EAAcN,EAAK,IACnBO,EAAUP,EAAK,EACfQ,EAAaR,EAAK,EAClBS,EAAqB,EAALT,EAAS,EAEzBU,EAAQT,KAAKS,MACbC,EAAOV,KAAKU,KAElB,SAASC,EAAanC,EAAWE,EAAWkC,GACjD,OAAOZ,KAAKa,IAAIrC,EAAIE,GAAKkC,CAC1B,CAKM,SAASE,EAAQC,GACtB,IAAMC,EAAehB,KAAKiB,MAAMF,GAChCA,EAAQJ,EAAaI,EAAOC,EAAcD,EAAQ,KAAQC,EAAeD,EACzE,IAAMG,EAAYlB,KAAKmB,IAAI,GAAInB,KAAKoB,MAAMX,EAAMM,KAC1CM,EAAWN,EAAQG,EAEzB,OADqBG,GAAY,EAAI,EAAIA,GAAY,EAAI,EAAIA,GAAY,EAAI,EAAI,IAC3DH,CACvB,CAyBM,SAASI,EAASC,GACvB,OAAQC,MAAM5F,WAAW2F,KAAiBnG,SAASmG,EACpD,CAUM,SAASE,EACdC,EACAtE,EACAuE,GAEA,IAAItF,EAAWO,EAAcpC,EAE7B,IAAK6B,EAAI,EAAGO,EAAO8E,EAAMlF,OAAQH,EAAIO,EAAMP,IACzC7B,EAAQkH,EAAMrF,GAAGsF,GACZH,MAAMhH,KACT4C,EAAOwE,IAAM5B,KAAK4B,IAAIxE,EAAOwE,IAAKpH,GAClC4C,EAAOyE,IAAM7B,KAAK6B,IAAIzE,EAAOyE,IAAKrH,GAGvC,CAEM,SAASsH,GAAUC,GACxB,OAAOA,GAAWhC,EAAK,IACxB,CAEM,SAASiC,GAAUC,GACxB,OAAOA,GAAW,IAAMlC,EACzB,CASM,SAASmC,GAAe1D,GAC7B,GAAK2D,EAAe3D,GAApB,CAKA,IAFA,IAAI4D,EAAI,EACJC,EAAI,EACDrC,KAAKiB,MAAMzC,EAAI4D,GAAKA,IAAM5D,GAC/B4D,GAAK,GACLC,IAEF,OAAOA,CAPN,CAQF,CAGM,SAASC,GACdC,EACAC,GAEA,IAAMC,EAAsBD,EAAWhE,EAAI+D,EAAY/D,EACjDkE,EAAsBF,EAAW9D,EAAI6D,EAAY7D,EACjDiE,EAA2B3C,KAAK4C,KAAKH,EAAsBA,EAAsBC,EAAsBA,GAEzGG,EAAQ7C,KAAK8C,MAAMJ,EAAqBD,GAM5C,OAJII,GAAU,GAAM9C,IAClB8C,GAAS5C,GAGJ,CACL4C,MAAAA,EACAE,SAAUJ,EAEb,CAEM,SAASK,GAAsBC,EAAYC,GAChD,OAAOlD,KAAK4C,KAAK5C,KAAKmB,IAAI+B,EAAI1E,EAAIyE,EAAIzE,EAAG,GAAKwB,KAAKmB,IAAI+B,EAAIxE,EAAIuE,EAAIvE,EAAG,GACvE,CAMM,SAASyE,GAAWzD,EAAWC,GACpC,OAAQD,EAAIC,EAAIO,GAASD,EAAMF,CAChC,CAMM,SAASqD,GAAgB1D,GAC9B,OAAQA,EAAIO,EAAMA,GAAOA,CAC1B,CAKM,SAASoD,GAAcR,EAAeS,EAAeC,EAAaC,GACvE,IAAM9D,EAAI0D,GAAgBP,GACpBY,EAAIL,GAAgBE,GACpBlB,EAAIgB,GAAgBG,GACpBG,EAAeN,GAAgBK,EAAI/D,GACnCiE,EAAaP,GAAgBhB,EAAI1C,GACjCkE,EAAeR,GAAgB1D,EAAI+D,GACnCI,EAAaT,GAAgB1D,EAAI0C,GACvC,OAAO1C,IAAM+D,GAAK/D,IAAM0C,GAAMoB,GAAyBC,IAAMrB,GACvDsB,EAAeC,GAAcC,EAAeC,CACnD,CASM,SAASC,GAAYtJ,EAAeoH,EAAaC,GACtD,OAAO7B,KAAK6B,IAAID,EAAK5B,KAAK4B,IAAIC,EAAKrH,GACpC,CAiBM,SAASuJ,GAAWvJ,EAAe8I,EAAeC,GAA6B,IAAhB3C,EAAgB,uDAAN,KAC9E,OAAOpG,GAASwF,KAAK4B,IAAI0B,EAAOC,GAAO3C,GAAWpG,GAASwF,KAAK6B,IAAIyB,EAAOC,GAAO3C,CACnF,CCpLM,SAASoD,GACdC,EACAzJ,EACA0J,GAEAA,EAAMA,GAAQ,SAAClH,GAAD,OAAWiH,EAAMjH,GAASxC,CAA1B,EAKd,IAJA,IAEI2J,EAFAC,EAAKH,EAAMzH,OAAS,EACpB6H,EAAK,EAGFD,EAAKC,EAAK,GAEXH,EADJC,EAAME,EAAMD,GAAO,GAEjBC,EAAKF,EAELC,EAAKD,EAIT,MAAO,CAACE,GAAAA,EAAID,GAAAA,EACb,KAUYE,GAAe,SAC1BL,EACAxG,EACAjD,EACA+J,GAJ0B,OAM1BP,GAAQC,EAAOzJ,EAAO+J,EAClBvH,SAAAA,GACA,IAAMwH,EAAKP,EAAMjH,GAAOS,GACxB,OAAO+G,EAAKhK,GAASgK,IAAOhK,GAASyJ,EAAMjH,EAAQ,GAAGS,KAASjD,CAChE,EACCwC,SAAAA,GAAAA,OAASiH,EAAMjH,GAAOS,GAAOjD,CAA7BwC,EAXsB,EAoBfyH,GAAgB,SAC3BR,EACAxG,EACAjD,GAH2B,OAK3BwJ,GAAQC,EAAOzJ,GAAOwC,SAAAA,GAAAA,OAASiH,EAAMjH,GAAOS,IAAQjD,CAA9BwC,GALK,EA8B7B,IAAM0H,GAAc,CAAC,OAAQ,MAAO,QAAS,SAAU,WA0DhD,SAASC,GAAoBjD,EAAOkD,GACzC,IAAMC,EAAOnD,EAAMoD,SACnB,GAAKD,EAAL,CAIA,IAAME,EAAYF,EAAKE,UACjB/H,EAAQ+H,EAAUrH,QAAQkH,IACjB,IAAX5H,GACF+H,EAAUC,OAAOhI,EAAO,GAGtB+H,EAAUvI,OAAS,IAIvBkI,GAAYO,SAAQ,SAACxH,UACZiE,EAAMjE,EACd,WAEMiE,EAAMoD,SAhBZ,CAiBF,CAKM,SAASI,GAAgBC,GAC9B,IACI9I,EAAWO,EADTwI,EAAM,IAAIC,IAGhB,IAAKhJ,EAAI,EAAGO,EAAOuI,EAAM3I,OAAQH,EAAIO,IAAQP,EAC3C+I,EAAIE,IAAIH,EAAM9I,IAGhB,OAAI+I,EAAIxF,OAAShD,EACRuI,EAGFzK,MAAM6K,KAAKH,EACnB,CCxLM,IAAMI,GACW,qBAAXC,OACF,SAAS5J,GACd,OAAOA,GACR,EAEI4J,OAAOC,sBAOT,SAASC,GACd7J,EACAE,GAEA,IAAI4J,GAAU,EAEd,OAAO,WAAyB,2BAAb7J,EAAa,yBAAbA,EAAa,gBACzB6J,IACHA,GAAU,EACVJ,GAAiBzK,KAAK0K,QAAQ,WAC5BG,GAAU,EACV9J,EAAGG,MAAMD,EAASD,EACnB,IAEJ,CACF,KAsBY8J,GAAqB,SAACC,GAAD,MAAiD,UAAVA,EAAoB,OAAmB,QAAVA,EAAkB,QAAU,QAAhG,EAMrBC,GAAiB,SAACD,EAAmCxC,EAAeC,GAAnD,MAA6E,UAAVuC,EAAoBxC,EAAkB,QAAVwC,EAAkBvC,GAAOD,EAAQC,GAAO,CAAvI,EAevB,SAASyC,GAAiCC,EAAqCC,EAAwBC,GAC5G,IAAMC,EAAaF,EAAO1J,OAEtB8G,EAAQ,EACR+C,EAAQD,EAEZ,GAAIH,EAAKK,QAAS,CAChB,IAAOC,EAAmBN,EAAnBM,OAAQC,EAAWP,EAAXO,QACTC,EAAOF,EAAOE,KACpB,EAA2CF,EAAOG,gBAA3C9E,EAAP,EAAOA,IAAKC,EAAZ,EAAYA,IAAK8E,EAAjB,EAAiBA,WAAYC,EAA7B,EAA6BA,WAEzBD,IACFrD,EAAQQ,GAAY9D,KAAK4B,IAEvB0C,GAAakC,EAASD,EAAOE,KAAM7E,GAAKyC,GAExC8B,EAAqBC,EAAa9B,GAAa4B,EAAQO,EAAMF,EAAOM,iBAAiBjF,IAAMyC,IAC7F,EAAG+B,EAAa,IAGhBC,EADEO,EACM9C,GAAY9D,KAAK6B,IAEvByC,GAAakC,EAASD,EAAOE,KAAM5E,GAAK,GAAMuC,GAAK,EAEnD+B,EAAqB,EAAI7B,GAAa4B,EAAQO,EAAMF,EAAOM,iBAAiBhF,IAAM,GAAMuC,GAAK,GAC/Fd,EAAO8C,GAAc9C,EAEb8C,EAAa9C,CAExB,CAED,MAAO,CAACA,MAAAA,EAAO+C,MAAAA,EAChB,CAQM,SAASS,GAAoBb,GAClC,IAAOc,EAAgCd,EAAhCc,OAAQC,EAAwBf,EAAxBe,OAAQC,EAAgBhB,EAAhBgB,aACjBC,EAAY,CAChBC,KAAMJ,EAAOnF,IACbwF,KAAML,EAAOlF,IACbwF,KAAML,EAAOpF,IACb0F,KAAMN,EAAOnF,KAEf,IAAKoF,EAEH,OADAhB,EAAKgB,aAAeC,GACb,EAET,IAAMK,EAAUN,EAAaE,OAASJ,EAAOnF,KAC1CqF,EAAaG,OAASL,EAAOlF,KAC7BoF,EAAaI,OAASL,EAAOpF,KAC7BqF,EAAaK,OAASN,EAAOnF,IAGhC,OADAjH,OAAO4M,OAAOP,EAAcC,GACrBK,CACR,CC5ID,IAAME,GAAS,SAACC,GAAD,OAAqB,IAANA,GAAiB,IAANA,CAA1B,EACTC,GAAY,SAACD,EAAWjE,EAAWpB,GAAvB,OAAuCrC,KAAKmB,IAAI,EAAG,IAAMuG,GAAK,IAAM1H,KAAK4H,KAAKF,EAAIjE,GAAKxD,EAAMoC,EAA7F,EACZwF,GAAa,SAACH,EAAWjE,EAAWpB,GAAvB,OAAqCrC,KAAKmB,IAAI,GAAI,GAAKuG,GAAK1H,KAAK4H,KAAKF,EAAIjE,GAAKxD,EAAMoC,GAAK,CAA1F,EAObyF,GAAU,CACdC,OAAQ,SAACL,GAAD,OAAeA,CAAf,EAERM,WAAY,SAACN,GAAD,OAAeA,EAAIA,CAAnB,EAEZO,YAAa,SAACP,GAAD,OAAgBA,GAAKA,EAAI,EAAzB,EAEbQ,cAAe,SAACR,GAAD,OAAiBA,GAAK,IAAO,EACxC,GAAMA,EAAIA,GACT,MAAUA,GAAMA,EAAI,GAAK,EAFf,EAIfS,YAAa,SAACT,GAAD,OAAeA,EAAIA,EAAIA,CAAvB,EAEbU,aAAc,SAACV,GAAD,OAAgBA,GAAK,GAAKA,EAAIA,EAAI,CAAlC,EAEdW,eAAgB,SAACX,GAAD,OAAiBA,GAAK,IAAO,EACzC,GAAMA,EAAIA,EAAIA,EACd,KAAQA,GAAK,GAAKA,EAAIA,EAAI,EAFd,EAIhBY,YAAa,SAACZ,GAAD,OAAeA,EAAIA,EAAIA,EAAIA,CAA3B,EAEba,aAAc,SAACb,GAAD,SAAkBA,GAAK,GAAKA,EAAIA,EAAIA,EAAI,EAAxC,EAEdc,eAAgB,SAACd,GAAD,OAAiBA,GAAK,IAAO,EACzC,GAAMA,EAAIA,EAAIA,EAAIA,GACjB,KAAQA,GAAK,GAAKA,EAAIA,EAAIA,EAAI,EAFnB,EAIhBe,YAAa,SAACf,GAAD,OAAeA,EAAIA,EAAIA,EAAIA,EAAIA,CAA/B,EAEbgB,aAAc,SAAChB,GAAD,OAAgBA,GAAK,GAAKA,EAAIA,EAAIA,EAAIA,EAAI,CAA1C,EAEdiB,eAAgB,SAACjB,GAAD,OAAiBA,GAAK,IAAO,EACzC,GAAMA,EAAIA,EAAIA,EAAIA,EAAIA,EACtB,KAAQA,GAAK,GAAKA,EAAIA,EAAIA,EAAIA,EAAI,EAFtB,EAIhBkB,WAAY,SAAClB,GAAD,OAAwC,EAAxB1H,KAAK6I,IAAInB,EAAIpH,EAA7B,EAEZwI,YAAa,SAACpB,GAAD,OAAe1H,KAAK4H,IAAIF,EAAIpH,EAA5B,EAEbyI,cAAe,SAACrB,GAAD,OAAgB,IAAO1H,KAAK6I,IAAI9I,EAAK2H,GAAK,EAA1C,EAEfsB,WAAY,SAACtB,GAAD,OAAsB,IAANA,EAAW,EAAI1H,KAAKmB,IAAI,EAAG,IAAMuG,EAAI,GAArD,EAEZuB,YAAa,SAACvB,GAAD,OAAsB,IAANA,EAAW,EAA4B,EAAvB1H,KAAKmB,IAAI,GAAI,GAAKuG,EAAlD,EAEbwB,cAAe,SAACxB,GAAD,OAAeD,GAAOC,GAAKA,EAAIA,EAAI,GAC9C,GAAM1H,KAAKmB,IAAI,EAAG,IAAU,EAAJuG,EAAQ,IAChC,IAAyC,EAAjC1H,KAAKmB,IAAI,GAAI,IAAU,EAAJuG,EAAQ,IAFxB,EAIfyB,WAAY,SAACzB,GAAD,OAAgBA,GAAK,EAAKA,IAAM1H,KAAK4C,KAAK,EAAI8E,EAAIA,GAAK,EAAvD,EAEZ0B,YAAa,SAAC1B,GAAD,OAAe1H,KAAK4C,KAAK,GAAK8E,GAAK,GAAKA,EAAxC,EAEb2B,cAAe,SAAC3B,GAAD,OAAiBA,GAAK,IAAO,GACvC,IAAO1H,KAAK4C,KAAK,EAAI8E,EAAIA,GAAK,GAC/B,IAAO1H,KAAK4C,KAAK,GAAK8E,GAAK,GAAKA,GAAK,EAF1B,EAIf4B,cAAe,SAAC5B,GAAD,OAAeD,GAAOC,GAAKA,EAAIC,GAAUD,EAAG,KAAO,GAAnD,EAEf6B,eAAgB,SAAC7B,GAAD,OAAeD,GAAOC,GAAKA,EAAIG,GAAWH,EAAG,KAAO,GAApD,EAEhB8B,iBA7Dc,SA6DG9B,GACf,IAAMjE,EAAI,MAEV,OAAOgE,GAAOC,GAAKA,EACjBA,EAAI,GACA,GAAMC,GAAc,EAAJD,EAAOjE,EAHnB,KAIJ,GAAM,GAAMoE,GAAe,EAAJH,EAAQ,EAAGjE,EAJ9B,IAKX,EAEDgG,WAtEc,SAsEH/B,GACT,IAAMjE,EAAI,QACV,OAAOiE,EAAIA,IAAMjE,EAAI,GAAKiE,EAAIjE,EAC/B,EAEDiG,YA3Ec,SA2EFhC,GACV,IAAMjE,EAAI,QACV,OAAQiE,GAAK,GAAKA,IAAMjE,EAAI,GAAKiE,EAAIjE,GAAK,CAC3C,EAEDkG,cAhFc,SAgFAjC,GACZ,IAAIjE,EAAI,QACR,OAAKiE,GAAK,IAAO,EACDA,EAAIA,IAAuB,GAAhBjE,GAAM,QAAeiE,EAAIjE,GAA3C,GAEF,KAAQiE,GAAK,GAAKA,IAAuB,GAAhBjE,GAAM,QAAeiE,EAAIjE,GAAK,EAC/D,EAEDmG,aAAc,SAAClC,GAAD,OAAe,EAAII,GAAQ+B,cAAc,EAAInC,EAA7C,EAEdmC,cA1Fc,SA0FAnC,GACZ,IAAMoC,EAAI,OACJC,EAAI,KACV,OAAIrC,EAAK,EAAIqC,EACJD,EAAIpC,EAAIA,EAEbA,EAAK,EAAIqC,EACJD,GAAKpC,GAAM,IAAMqC,GAAMrC,EAAI,IAEhCA,EAAK,IAAMqC,EACND,GAAKpC,GAAM,KAAOqC,GAAMrC,EAAI,MAE9BoC,GAAKpC,GAAM,MAAQqC,GAAMrC,EAAI,OACrC,EAEDsC,gBAAiB,SAACtC,GAAD,OAAeA,EAAK,GACH,GAA9BI,GAAQ8B,aAAiB,EAAJlC,GACc,GAAnCI,GAAQ+B,cAAkB,EAAJnC,EAAQ,GAAW,EAF5B,GAOnB,GAAeI,GCrHf,SAAS7G,GAAM1C,GACb,OAAOA,EAAI,GAAM,CAClB,CACD,IAAM0L,GAAM,SAAC1L,EAAG2L,EAAGC,GAAP,OAAanK,KAAK6B,IAAI7B,KAAK4B,IAAIrD,EAAG4L,GAAID,EAAtC,EACZ,SAASE,GAAI7L,GACX,OAAO0L,GAAIhJ,GAAU,KAAJ1C,GAAW,EAAG,IAChC,CAID,SAAS8L,GAAI9L,GACX,OAAO0L,GAAIhJ,GAAU,IAAJ1C,GAAU,EAAG,IAC/B,CACD,SAAS+L,GAAI/L,GACX,OAAO0L,GAAIhJ,GAAM1C,EAAI,MAAQ,IAAK,EAAG,EACtC,CACD,SAASgM,GAAIhM,GACX,OAAO0L,GAAIhJ,GAAU,IAAJ1C,GAAU,EAAG,IAC/B,CAED,IAAMiM,GAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAGC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIpL,EAAG,GAAIC,EAAG,GAAIoL,EAAG,GAAIhB,EAAG,GAAI3H,EAAG,GAAI4I,EAAG,IACrJC,IAAM,OAAI,oBACVC,GAAK,SAAAvL,GAAC,OAAIsL,GAAQ,GAAJtL,EAAR,EACNwL,GAAK,SAAAxL,GAAC,OAAIsL,IAAS,IAAJtL,IAAa,GAAKsL,GAAQ,GAAJtL,EAA/B,EACNyL,GAAK,SAAAzL,GAAC,OAAU,IAAJA,IAAa,KAAY,GAAJA,EAA3B,EAyBZ,SAAS0L,GAAU9M,GACjB,IAAIyM,EAzBU,SAAAzM,GAAC,OAAI6M,GAAG7M,EAAE+M,IAAMF,GAAG7M,EAAEgN,IAAMH,GAAG7M,EAAEoB,IAAMyL,GAAG7M,EAAEmB,EAA1C,CAyBP8L,CAAQjN,GAAK2M,GAAKC,GAC1B,OAAO5M,EACH,IAAMyM,EAAEzM,EAAE+M,GAAKN,EAAEzM,EAAEgN,GAAKP,EAAEzM,EAAEoB,GAJpB,SAACD,EAAGsL,GAAJ,OAAUtL,EAAI,IAAMsL,EAAEtL,GAAK,EAA3B,CAIyB+L,CAAMlN,EAAEmB,EAAGsL,QAC5CU,CACL,CAED,IAAMC,GAAS,+GACf,SAASC,GAASzB,EAAG1G,EAAGyG,GACtB,IAAMxK,EAAI+D,EAAIzD,KAAK4B,IAAIsI,EAAG,EAAIA,GACxBc,EAAI,SAACzJ,GAAD,IAAIhE,EAAJ,wDAASgE,EAAI4I,EAAI,IAAM,GAAvB,OAA8BD,EAAIxK,EAAIM,KAAK6B,IAAI7B,KAAK4B,IAAIrE,EAAI,EAAG,EAAIA,EAAG,IAAK,EAA3E,EACV,MAAO,CAACyN,EAAE,GAAIA,EAAE,GAAIA,EAAE,GACvB,CACD,SAASa,GAAS1B,EAAG1G,EAAGlF,GACtB,IAAMyM,EAAI,SAACzJ,GAAD,IAAIhE,EAAJ,wDAASgE,EAAI4I,EAAI,IAAM,EAAvB,OAA6B5L,EAAIA,EAAIkF,EAAIzD,KAAK6B,IAAI7B,KAAK4B,IAAIrE,EAAG,EAAIA,EAAG,GAAI,EAAzE,EACV,MAAO,CAACyN,EAAE,GAAIA,EAAE,GAAIA,EAAE,GACvB,CACD,SAASc,GAAS3B,EAAG4B,EAAGpM,GACtB,IACItD,EADE2P,EAAMJ,GAASzB,EAAG,EAAG,IAO3B,IALI4B,EAAIpM,EAAI,IAEVoM,GADA1P,EAAI,GAAK0P,EAAIpM,GAEbA,GAAKtD,GAEFA,EAAI,EAAGA,EAAI,EAAGA,IACjB2P,EAAI3P,IAAM,EAAI0P,EAAIpM,EAClBqM,EAAI3P,IAAM0P,EAEZ,OAAOC,CACR,CAUD,SAASC,GAAQ1N,GACf,IAOI4L,EAAG1G,EAAGsG,EANJuB,EAAI/M,EAAE+M,EADE,IAERC,EAAIhN,EAAEgN,EAFE,IAGR5L,EAAIpB,EAAEoB,EAHE,IAIRkC,EAAM7B,KAAK6B,IAAIyJ,EAAGC,EAAG5L,GACrBiC,EAAM5B,KAAK4B,IAAI0J,EAAGC,EAAG5L,GACrBuK,GAAKrI,EAAMD,GAAO,EAQxB,OANIC,IAAQD,IACVmI,EAAIlI,EAAMD,EACV6B,EAAIyG,EAAI,GAAMH,GAAK,EAAIlI,EAAMD,GAAOmI,GAAKlI,EAAMD,GAC/CuI,EArBJ,SAAkBmB,EAAGC,EAAG5L,EAAGoK,EAAGlI,GAC5B,OAAIyJ,IAAMzJ,GACC0J,EAAI5L,GAAKoK,GAAMwB,EAAI5L,EAAI,EAAI,GAElC4L,IAAM1J,GACAlC,EAAI2L,GAAKvB,EAAI,GAEfuB,EAAIC,GAAKxB,EAAI,CACtB,CAaOmC,CAASZ,EAAGC,EAAG5L,EAAGoK,EAAGlI,GACzBsI,EAAQ,GAAJA,EAAS,IAER,CAAK,EAAJA,EAAO1G,GAAK,EAAGyG,EACxB,CACD,SAASiC,GAAMnB,EAAGtL,EAAGC,EAAGoL,GACtB,OACErQ,MAAMD,QAAQiF,GACVsL,EAAEtL,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAChBsL,EAAEtL,EAAGC,EAAGoL,IACZ5N,IAAIkN,GACP,CACD,SAAS+B,GAAQjC,EAAG1G,EAAGyG,GACrB,OAAOiC,GAAMP,GAAUzB,EAAG1G,EAAGyG,EAC9B,CAOD,SAASmC,GAAIlC,GACX,OAAQA,EAAI,IAAM,KAAO,GAC1B,CACD,SAASmC,GAASlN,GAChB,IAEIb,EAFEuL,EAAI6B,GAAOY,KAAKnN,GAClBM,EAAI,IAER,GAAKoK,EAAL,CAGIA,EAAE,KAAOvL,IACXmB,EAAIoK,EAAE,GAAKM,IAAKN,EAAE,IAAMO,IAAKP,EAAE,KAEjC,IAAMK,EAAIkC,IAAKvC,EAAE,IACX0C,GAAM1C,EAAE,GAAK,IACb2C,GAAM3C,EAAE,GAAK,IAQnB,MAAO,CACLwB,GAPA/M,EADW,QAATuL,EAAE,GAtBR,SAAiBK,EAAG4B,EAAGpM,GACrB,OAAOwM,GAAML,GAAU3B,EAAG4B,EAAGpM,EAC9B,CAqBO+M,CAAQvC,EAAGqC,EAAIC,GACD,QAAT3C,EAAE,GArBf,SAAiBK,EAAG1G,EAAGlF,GACrB,OAAO4N,GAAMN,GAAU1B,EAAG1G,EAAGlF,EAC9B,CAoBOoO,CAAQxC,EAAGqC,EAAIC,GAEfL,GAAQjC,EAAGqC,EAAIC,IAGd,GACLlB,EAAGhN,EAAE,GACLoB,EAAGpB,EAAE,GACLmB,EAAGA,EAlBJ,CAoBF,CAsBD,IAoMIkN,GApMEzP,GAAM,CACVqB,EAAG,OACHqO,EAAG,QACHC,EAAG,KACHC,EAAG,MACHC,EAAG,KACHC,EAAG,SACHC,EAAG,QACHzC,EAAG,KACH0C,EAAG,KACHC,EAAG,KACH1C,EAAG,KACHC,EAAG,QACHC,EAAG,QACHyC,EAAG,KACHC,EAAG,WACHzC,EAAG,KACH0C,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,QACH7C,EAAG,KACH8C,EAAG,KACHC,EAAG,OACHC,EAAG,KACHC,EAAG,QACHC,EAAG,MAECC,GAAU,CACdC,OAAQ,SACRC,YAAa,SACbC,KAAM,OACNC,UAAW,SACXC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,MAAO,IACPC,aAAc,SACdC,GAAI,KACJC,QAAS,SACTC,KAAM,SACNC,UAAW,SACXC,OAAQ,SACRC,SAAU,SACVC,QAAS,SACTC,IAAK,SACLC,YAAa,SACbC,QAAS,SACTC,QAAS,SACTC,KAAM,OACNC,IAAK,KACLC,MAAO,OACPC,QAAS,SACTC,KAAM,SACNC,KAAM,OACNC,KAAM,SACNC,OAAQ,SACRC,QAAS,SACTC,SAAU,SACVC,OAAQ,SACRC,MAAO,SACPC,IAAK,SACLC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,IAAK,OACLC,OAAQ,SACRC,OAAQ,SACRC,SAAU,OACVC,OAAQ,SACRC,OAAQ,SACRC,SAAU,SACVC,SAAU,SACVC,SAAU,SACVC,SAAU,SACVC,OAAQ,SACRC,QAAS,SACTC,UAAW,SACXC,IAAK,SACLC,OAAQ,SACRC,IAAK,SACLC,IAAK,OACLC,MAAO,SACPC,IAAK,SACLC,QAAS,SACTC,OAAQ,SACRC,QAAS,SACTC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,UAAW,SACXC,QAAS,SACTC,WAAY,SACZC,IAAK,SACLC,KAAM,SACNC,MAAO,SACPC,UAAW,SACXC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,SACRC,MAAO,SACPC,MAAO,SACPC,QAAS,SACTC,IAAK,SACLC,KAAM,OACNC,QAAS,SACTC,IAAK,SACLC,OAAQ,SACRC,MAAO,SACPC,WAAY,SACZC,IAAK,KACLC,MAAO,SACPC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,UAAW,OACXC,IAAK,SACLC,SAAU,SACVC,WAAY,SACZC,QAAS,SACTC,SAAU,SACVC,QAAS,SACTC,WAAY,SACZC,KAAM,KACNC,OAAQ,SACRC,KAAM,SACNC,QAAS,SACTC,MAAO,SACPC,QAAS,SACTC,KAAM,SACNC,UAAW,SACXC,OAAQ,SACRC,MAAO,SACPC,WAAY,SACZC,UAAW,SACXC,QAAS,SACTC,KAAM,SACNC,IAAK,SACLC,KAAM,SACNC,QAAS,SACTC,MAAO,SACPC,YAAa,SACbC,GAAI,SACJC,SAAU,SACVC,MAAO,SACPC,UAAW,SACXC,MAAO,SACPC,UAAW,SACXC,MAAO,SACPC,QAAS,SACTC,MAAO,SACPC,OAAQ,SACRC,MAAO,SACPC,IAAK,SACLC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,SAAU,OACVC,OAAQ,SACRC,IAAK,SACLC,IAAK,OACLC,MAAO,SACPC,OAAQ,SACRC,GAAI,SACJC,MAAO,SACPC,IAAK,SACLC,KAAM,SACNC,UAAW,SACXC,GAAI,SACJC,MAAO,UAoBT,SAASC,GAAUlY,GACZwN,MACHA,GApBJ,WACE,IAGIvQ,EAAGkb,EAAGha,EAAGia,EAAIC,EAHXC,EAAW,CAAC,EACZnb,EAAO3B,OAAO2B,KAAK0R,IACnB0J,EAAQ/c,OAAO2B,KAAKY,IAE1B,IAAKd,EAAI,EAAGA,EAAIE,EAAKC,OAAQH,IAAK,CAEhC,IADAmb,EAAKC,EAAKlb,EAAKF,GACVkb,EAAI,EAAGA,EAAII,EAAMnb,OAAQ+a,IAC5Bha,EAAIoa,EAAMJ,GACVE,EAAKA,EAAGG,QAAQra,EAAGJ,GAAII,IAEzBA,EAAIsa,SAAS5J,GAAQuJ,GAAK,IAC1BE,EAASD,GAAM,CAACla,GAAK,GAAK,IAAMA,GAAK,EAAI,IAAU,IAAJA,EAChD,CACD,OAAOma,CACR,CAKWI,IACFC,YAAc,CAAC,EAAG,EAAG,EAAG,IAEhC,IAAMrY,EAAIkN,GAAMxN,EAAI4Y,eACpB,OAAOtY,GAAK,CACV4L,EAAG5L,EAAE,GACL6L,EAAG7L,EAAE,GACLC,EAAGD,EAAE,GACLA,EAAgB,IAAbA,EAAElD,OAAekD,EAAE,GAAK,IAE9B,CAED,IAAMuY,GAAS,uGAiCf,IAAMC,GAAK,SAAA3Z,GAAC,OAAIA,GAAK,SAAgB,MAAJA,EAAqC,MAAzByB,KAAKmB,IAAI5C,EAAG,EAAM,KAAe,IAAlE,EACNgH,GAAO,SAAAhH,GAAC,OAAIA,GAAK,OAAUA,EAAI,MAAQyB,KAAKmB,KAAK5C,EAAI,MAAS,MAAO,IAA7D,EAad,SAAS4Z,GAAO5Z,EAAGlC,EAAG+b,GACpB,GAAI7Z,EAAG,CACL,IAAIO,EAAMmN,GAAQ1N,GAClBO,EAAIzC,GAAK2D,KAAK6B,IAAI,EAAG7B,KAAK4B,IAAI9C,EAAIzC,GAAKyC,EAAIzC,GAAK+b,EAAa,IAAN/b,EAAU,IAAM,IACvEyC,EAAMsN,GAAQtN,GACdP,EAAE+M,EAAIxM,EAAI,GACVP,EAAEgN,EAAIzM,EAAI,GACVP,EAAEoB,EAAIb,EAAI,EACX,CACF,CACD,SAAS7B,GAAMsB,EAAG8Z,GAChB,OAAO9Z,EAAI3D,OAAO4M,OAAO6Q,GAAS,CAAC,EAAG9Z,GAAKA,CAC5C,CACD,SAAS+Z,GAAWC,GAClB,IAAIha,EAAI,CAAC+M,EAAG,EAAGC,EAAG,EAAG5L,EAAG,EAAGD,EAAG,KAY9B,OAXIhF,MAAMD,QAAQ8d,GACZA,EAAM/b,QAAU,IAClB+B,EAAI,CAAC+M,EAAGiN,EAAM,GAAIhN,EAAGgN,EAAM,GAAI5Y,EAAG4Y,EAAM,GAAI7Y,EAAG,KAC3C6Y,EAAM/b,OAAS,IACjB+B,EAAEmB,EAAI2K,GAAIkO,EAAM,OAIpBha,EAAItB,GAAMsb,EAAO,CAACjN,EAAG,EAAGC,EAAG,EAAG5L,EAAG,EAAGD,EAAG,KACrCA,EAAI2K,GAAI9L,EAAEmB,GAEPnB,CACR,CACD,SAASia,GAAcpZ,GACrB,MAAsB,MAAlBA,EAAIC,OAAO,GA3EjB,SAAkBD,GAChB,IAEIkM,EAAGC,EAAG5L,EAFJmK,EAAImO,GAAO1L,KAAKnN,GAClBM,EAAI,IAER,GAAKoK,EAAL,CAGA,GAAIA,EAAE,KAAOwB,EAAG,CACd,IAAM/M,GAAKuL,EAAE,GACbpK,EAAIoK,EAAE,GAAKM,GAAI7L,GAAK0L,GAAQ,IAAJ1L,EAAS,EAAG,IACrC,CAOD,OANA+M,GAAKxB,EAAE,GACPyB,GAAKzB,EAAE,GACPnK,GAAKmK,EAAE,GAIA,CACLwB,EAJFA,EAAI,KAAOxB,EAAE,GAAKM,GAAIkB,GAAKrB,GAAIqB,EAAG,EAAG,MAKnCC,EAJFA,EAAI,KAAOzB,EAAE,GAAKM,GAAImB,GAAKtB,GAAIsB,EAAG,EAAG,MAKnC5L,EAJFA,EAAI,KAAOmK,EAAE,GAAKM,GAAIzK,GAAKsK,GAAItK,EAAG,EAAG,MAKnCD,EAAGA,EAfJ,CAiBF,CAqDU+Y,CAASrZ,GAEXkN,GAASlN,EACjB,KACKsZ,GAAAA,WACJ,WAAYH,GACV,IADiB,eACbA,aAAiBG,EACnB,OAAOH,EAET,IACIha,EADE5D,SAAc4d,EAEP,WAAT5d,EACF4D,EAAI+Z,GAAWC,GACG,WAAT5d,IACT4D,EAjcN,SAAkBa,GAChB,IACIuZ,EADArc,EAAM8C,EAAI5C,OAmBd,MAjBe,MAAX4C,EAAI,KACM,IAAR9C,GAAqB,IAARA,EACfqc,EAAM,CACJrN,EAAG,IAAsB,GAAhBd,GAAMpL,EAAI,IACnBmM,EAAG,IAAsB,GAAhBf,GAAMpL,EAAI,IACnBO,EAAG,IAAsB,GAAhB6K,GAAMpL,EAAI,IACnBM,EAAW,IAARpD,EAA4B,GAAhBkO,GAAMpL,EAAI,IAAW,KAErB,IAAR9C,GAAqB,IAARA,IACtBqc,EAAM,CACJrN,EAAGd,GAAMpL,EAAI,KAAO,EAAIoL,GAAMpL,EAAI,IAClCmM,EAAGf,GAAMpL,EAAI,KAAO,EAAIoL,GAAMpL,EAAI,IAClCO,EAAG6K,GAAMpL,EAAI,KAAO,EAAIoL,GAAMpL,EAAI,IAClCM,EAAW,IAARpD,EAAakO,GAAMpL,EAAI,KAAO,EAAIoL,GAAMpL,EAAI,IAAO,OAIrDuZ,CACR,CA4aSC,CAASL,IAAUjB,GAAUiB,IAAUC,GAAcD,IAE3DM,KAAKC,KAAOva,EACZsa,KAAKE,SAAWxa,CACjB,mCACD,WACE,OAAOsa,KAAKE,MACb,kBACD,WACE,IAAIxa,EAAItB,GAAM4b,KAAKC,MAInB,OAHIva,IACFA,EAAEmB,EAAI4K,GAAI/L,EAAEmB,IAEPnB,CACR,MACD,SAAQU,GACN4Z,KAAKC,KAAOR,GAAWrZ,EACxB,0BACD,WACE,OAAO4Z,KAAKE,QArFGxa,EAqFgBsa,KAAKC,QAnFpCva,EAAEmB,EAAI,IAAN,eACYnB,EAAE+M,EADd,aACoB/M,EAAEgN,EADtB,aAC4BhN,EAAEoB,EAD9B,aACoC2K,GAAI/L,EAAEmB,GAD1C,mBAEWnB,EAAE+M,EAFb,aAEmB/M,EAAEgN,EAFrB,aAE2BhN,EAAEoB,EAF7B,WAmF4C+L,EArFhD,IAAmBnN,CAsFhB,0BACD,WACE,OAAOsa,KAAKE,OAAS1N,GAAUwN,KAAKC,WAAQpN,CAC7C,0BACD,WACE,OAAOmN,KAAKE,OApVhB,SAAmBxa,GACjB,GAAKA,EAAL,CAGA,IAAMmB,EAAIuM,GAAQ1N,GACZ4L,EAAIzK,EAAE,GACN+D,EAAI8G,GAAI7K,EAAE,IACVwK,EAAIK,GAAI7K,EAAE,IAChB,OAAOnB,EAAEmB,EAAI,IAAN,eACKyK,EADL,aACW1G,EADX,cACkByG,EADlB,cACyBI,GAAI/L,EAAEmB,GAD/B,mBAEIyK,EAFJ,aAEU1G,EAFV,cAEiByG,EAFjB,KALN,CAQF,CAyUwB8O,CAAUH,KAAKC,WAAQpN,CAC7C,oBACD,SAAIuN,EAAOC,GACT,GAAID,EAAO,CACT,IAEIE,EAFEC,EAAKP,KAAK7M,IACVqN,EAAKJ,EAAMjN,IAEX3J,EAAI6W,IAAWC,EAAK,GAAMD,EAC1BnN,EAAI,EAAI1J,EAAI,EACZ3C,EAAI0Z,EAAG1Z,EAAI2Z,EAAG3Z,EACd4Z,IAAOvN,EAAIrM,KAAO,EAAIqM,GAAKA,EAAIrM,IAAM,EAAIqM,EAAIrM,IAAM,GAAK,EAC9DyZ,EAAK,EAAIG,EACTF,EAAG9N,EAAI,IAAOgO,EAAKF,EAAG9N,EAAI6N,EAAKE,EAAG/N,EAAI,GACtC8N,EAAG7N,EAAI,IAAO+N,EAAKF,EAAG7N,EAAI4N,EAAKE,EAAG9N,EAAI,GACtC6N,EAAGzZ,EAAI,IAAO2Z,EAAKF,EAAGzZ,EAAIwZ,EAAKE,EAAG1Z,EAAI,GACtCyZ,EAAG1Z,EAAI2C,EAAI+W,EAAG1Z,GAAK,EAAI2C,GAAKgX,EAAG3Z,EAC/BmZ,KAAK7M,IAAMoN,CACZ,CACD,OAAOP,IACR,4BACD,SAAYI,EAAOvR,GAIjB,OAHIuR,IACFJ,KAAKC,KAvGX,SAAqBS,EAAMC,EAAM9R,GAC/B,IAAM4D,EAAI/F,GAAK+E,GAAIiP,EAAKjO,IAClBC,EAAIhG,GAAK+E,GAAIiP,EAAKhO,IAClB5L,EAAI4F,GAAK+E,GAAIiP,EAAK5Z,IACxB,MAAO,CACL2L,EAAGjB,GAAI6N,GAAG5M,EAAI5D,GAAKnC,GAAK+E,GAAIkP,EAAKlO,IAAMA,KACvCC,EAAGlB,GAAI6N,GAAG3M,EAAI7D,GAAKnC,GAAK+E,GAAIkP,EAAKjO,IAAMA,KACvC5L,EAAG0K,GAAI6N,GAAGvY,EAAI+H,GAAKnC,GAAK+E,GAAIkP,EAAK7Z,IAAMA,KACvCD,EAAG6Z,EAAK7Z,EAAIgI,GAAK8R,EAAK9Z,EAAI6Z,EAAK7Z,GAElC,CA6FiB+Z,CAAYZ,KAAKC,KAAMG,EAAMH,KAAMpR,IAE1CmR,IACR,sBACD,WACE,OAAO,IAAIH,EAAMG,KAAK7M,IACvB,sBACD,SAAMtM,GAEJ,OADAmZ,KAAKC,KAAKpZ,EAAI2K,GAAI3K,GACXmZ,IACR,wBACD,SAAQT,GAGN,OAFYS,KAAKC,KACbpZ,GAAK,EAAI0Y,EACNS,IACR,0BACD,WACE,IAAM7M,EAAM6M,KAAKC,KACXY,EAAMzY,GAAc,GAAR+K,EAAIV,EAAkB,IAARU,EAAIT,EAAmB,IAARS,EAAIrM,GAEnD,OADAqM,EAAIV,EAAIU,EAAIT,EAAIS,EAAIrM,EAAI+Z,EACjBb,IACR,wBACD,SAAQT,GAGN,OAFYS,KAAKC,KACbpZ,GAAK,EAAI0Y,EACNS,IACR,uBACD,WACE,IAAMta,EAAIsa,KAAKC,KAIf,OAHAva,EAAE+M,EAAI,IAAM/M,EAAE+M,EACd/M,EAAEgN,EAAI,IAAMhN,EAAEgN,EACdhN,EAAEoB,EAAI,IAAMpB,EAAEoB,EACPkZ,IACR,wBACD,SAAQT,GAEN,OADAD,GAAOU,KAAKC,KAAM,EAAGV,GACdS,IACR,uBACD,SAAOT,GAEL,OADAD,GAAOU,KAAKC,KAAM,GAAIV,GACfS,IACR,yBACD,SAAST,GAEP,OADAD,GAAOU,KAAKC,KAAM,EAAGV,GACdS,IACR,2BACD,SAAWT,GAET,OADAD,GAAOU,KAAKC,KAAM,GAAIV,GACfS,IACR,uBACD,SAAOc,GAEL,OAtaJ,SAAgBpb,EAAGob,GACjB,IAAIxP,EAAI8B,GAAQ1N,GAChB4L,EAAE,GAAKkC,GAAIlC,EAAE,GAAKwP,GAClBxP,EAAIiC,GAAQjC,GACZ5L,EAAE+M,EAAInB,EAAE,GACR5L,EAAEgN,EAAIpB,EAAE,GACR5L,EAAEoB,EAAIwK,EAAE,EACT,CA8ZGyP,CAAOf,KAAKC,KAAMa,GACXd,IACR,OA9GGH,GAiHN,SAASmB,GAAUtB,GACjB,OAAO,IAAIG,GAAMH,EACnB,CCxkBO,SAASuB,GAAoBtf,GAClC,GAAIA,GAA0B,kBAAVA,EAAoB,CACtC,IAAMG,EAAOH,EAAMM,WACnB,MAAgB,2BAATH,GAA8C,4BAATA,CAC7C,CAED,OAAO,CACR,CAWM,SAASse,GAAMze,GACpB,OAAOsf,GAAoBtf,GAASA,EAAQuf,GAASvf,EACtD,CAKM,SAASwf,GAAcxf,GAC5B,OAAOsf,GAAoBtf,GACvBA,EACAuf,GAASvf,GAAOyf,SAAS,IAAKC,OAAO,IAAK7O,WAC/C,CC/BD,IAAM8O,GAAU,CAAC,IAAK,IAAK,cAAe,SAAU,WAC9CC,GAAS,CAAC,QAAS,cAAe,mBCAxC,IAAMC,GAAY,IAAIC,IAaf,SAASC,GAAaC,EAAaC,EAAgB7c,GACxD,OAZF,SAAyB6c,EAAgB7c,GACvCA,EAAUA,GAAW,CAAC,EACtB,IAAM8c,EAAWD,EAASE,KAAKC,UAAUhd,GACrCid,EAAYR,GAAUS,IAAIJ,GAK9B,OAJKG,IACHA,EAAY,IAAIE,KAAKC,aAAaP,EAAQ7c,GAC1Cyc,GAAUjV,IAAIsV,EAAUG,IAEnBA,CACR,CAGQI,CAAgBR,EAAQ7c,GAASsd,OAAOV,EAChD,CCRD,IAAMW,GAAa,CAOjBC,OAPiB,SAOV5gB,GACL,OAAOC,EAAQD,GAAkCA,EAAS,GAAKA,CAChE,EAUD6gB,QAnBiB,SAmBTC,EAAWte,EAAOue,GACxB,GAAkB,IAAdD,EACF,MAAO,IAGT,IACIE,EADEf,EAAS5B,KAAK4C,MAAM7d,QAAQ6c,OAE9BiB,EAAQJ,EAEZ,GAAIC,EAAM/e,OAAS,EAAG,CAEpB,IAAMmf,EAAU3b,KAAK6B,IAAI7B,KAAKa,IAAI0a,EAAM,GAAG/gB,OAAQwF,KAAKa,IAAI0a,EAAMA,EAAM/e,OAAS,GAAGhC,SAChFmhB,EAAU,MAAQA,EAAU,QAC9BH,EAAW,cAGbE,EAmCN,SAAwBJ,EAAWC,GAGjC,IAAIG,EAAQH,EAAM/e,OAAS,EAAI+e,EAAM,GAAG/gB,MAAQ+gB,EAAM,GAAG/gB,MAAQ+gB,EAAM,GAAG/gB,MAAQ+gB,EAAM,GAAG/gB,MAGvFwF,KAAKa,IAAI6a,IAAU,GAAKJ,IAActb,KAAKoB,MAAMka,KAEnDI,EAAQJ,EAAYtb,KAAKoB,MAAMka,IAEjC,OAAOI,CACR,CA9CaE,CAAeN,EAAWC,EACnC,CAED,IAAMM,EAAWpb,EAAMT,KAAKa,IAAI6a,IAC1BI,EAAa9b,KAAK6B,IAAI7B,KAAK4B,KAAK,EAAI5B,KAAKoB,MAAMya,GAAW,IAAK,GAE/Dje,EAAU,CAAC4d,SAAAA,EAAUO,sBAAuBD,EAAYE,sBAAuBF,GAGrF,OAFAlhB,OAAO4M,OAAO5J,EAASib,KAAKjb,QAAQ2d,MAAML,QAEnCX,GAAae,EAAWb,EAAQ7c,EACxC,EAWDqe,YAxDiB,SAwDLX,EAAWte,EAAOue,GAC5B,GAAkB,IAAdD,EACF,MAAO,IAET,IAAMY,EAASX,EAAMve,GAAOmf,aAAgBb,EAAatb,KAAKmB,IAAI,GAAInB,KAAKoB,MAAMX,EAAM6a,KACvF,MAAI,CAAE,EAAG,EAAG,EAAG,EAAI,GAAI,IAAEc,SAASF,IAAWlf,EAAQ,GAAMue,EAAM/e,OACxD2e,GAAWE,QAAQtgB,KAAK8d,KAAMyC,EAAWte,EAAOue,GAElD,EACR,GAsBH,OAAe,CAACJ,WAAAA,ICzFT,IAAMkB,GAAYzhB,OAAOyC,OAAO,MAC1Bif,GAAc1hB,OAAOyC,OAAO,MAOzC,SAASkf,GAASC,EAAM/e,GACtB,IAAKA,EACH,OAAO+e,EAGT,IADA,IAAMjgB,EAAOkB,EAAIoB,MAAM,KACdxC,EAAI,EAAGkF,EAAIhF,EAAKC,OAAQH,EAAIkF,IAAKlF,EAAG,CAC3C,IAAMkB,EAAIhB,EAAKF,GACfmgB,EAAOA,EAAKjf,KAAOif,EAAKjf,GAAK3C,OAAOyC,OAAO,MAC5C,CACD,OAAOmf,CACR,CAED,SAASpX,GAAIqX,EAAMC,EAAOtB,GACxB,MAAqB,kBAAVsB,EACF3e,EAAMwe,GAASE,EAAMC,GAAQtB,GAE/Brd,EAAMwe,GAASE,EAAM,IAAKC,EAClC,KAMYC,GAAAA,WACXC,SAAAA,EAAYC,EAAcC,IAAW,eACnCjE,KAAKkE,eAAYrR,EACjBmN,KAAKmE,gBAAkB,kBACvBnE,KAAKoE,YAAc,kBACnBpE,KAAKI,MAAQ,OACbJ,KAAKqE,SAAW,CAAC,EACjBrE,KAAKsE,iBAAmB,SAACC,GAAD,OAAaA,EAAQ3B,MAAM4B,SAASC,qBAApC,EACxBzE,KAAK0E,SAAW,CAAC,EACjB1E,KAAK2E,OAAS,CACZ,YACA,WACA,QACA,aACA,aAEF3E,KAAK4E,KAAO,CACVC,OAAQ,qDACR9d,KAAM,GACN+d,MAAO,SACPC,WAAY,IACZ1E,OAAQ,MAEVL,KAAKgF,MAAQ,CAAC,EACdhF,KAAKiF,qBAAuB,SAACC,EAAKngB,GAAN,OAAkBoc,GAAcpc,EAAQof,gBAAxC,EAC5BnE,KAAKmF,iBAAmB,SAACD,EAAKngB,GAAN,OAAkBoc,GAAcpc,EAAQqf,YAAxC,EACxBpE,KAAKoF,WAAa,SAACF,EAAKngB,GAAN,OAAkBoc,GAAcpc,EAAQqb,MAAxC,EAClBJ,KAAKqF,UAAY,IACjBrF,KAAKsF,YAAc,CACjBC,KAAM,UACNC,WAAW,EACXC,kBAAkB,GAEpBzF,KAAK0F,qBAAsB,EAC3B1F,KAAK2F,QAAU,KACf3F,KAAK4F,QAAU,KACf5F,KAAK6F,SAAU,EACf7F,KAAK8F,QAAU,CAAC,EAChB9F,KAAK+F,YAAa,EAClB/F,KAAKgG,WAAQnT,EACbmN,KAAKiG,OAAS,CAAC,EACfjG,KAAKkG,UAAW,EAChBlG,KAAKmG,yBAA0B,EAE/BnG,KAAKoG,SAASpC,GACdhE,KAAK5c,MAAM6gB,EACZ,mCAMD1X,SAAIsX,EAAOtB,GACT,OAAOhW,GAAIyT,KAAM6D,EAAOtB,EACzB,oBAKDN,SAAI4B,GACF,OAAOH,GAAS1D,KAAM6D,EACvB,yBAMDuC,SAASvC,EAAOtB,GACd,OAAOhW,GAAIkX,GAAaI,EAAOtB,EAChC,yBAED8D,SAASxC,EAAOtB,GACd,OAAOhW,GAAIiX,GAAWK,EAAOtB,EAC9B,sBAmBD+D,SAAMzC,EAAO0C,EAAMC,EAAaC,GAAY,MACpCC,EAAchD,GAAS1D,KAAM6D,GAC7B8C,EAAoBjD,GAAS1D,KAAMwG,GACnCI,EAAc,IAAML,EAE1BxkB,OAAO8kB,iBAAiBH,GAAxB3kB,EAAAA,CAAAA,GAAAA,EAAAA,EAAAA,GAAAA,EAEG6kB,EAAc,CACbjlB,MAAO+kB,EAAYH,GACnBO,UAAU,KAJd/kB,EAAAA,EAAAA,GAAAA,EAOGwkB,EAAO,CACNQ,YAAY,EACZ9E,IAFM,WAGJ,IAAM+E,EAAQhH,KAAK4G,GACbriB,EAASoiB,EAAkBF,GACjC,OAAIrkB,EAAS4kB,GACJjlB,OAAO4M,OAAO,CAAC,EAAGpK,EAAQyiB,GAE5BtkB,EAAeskB,EAAOziB,EAC9B,EACDgI,IAVM,SAUF5K,GACFqe,KAAK4G,GAAejlB,CACrB,IAnBLI,GAsBD,sBAEDqB,SAAM6jB,GAAU,WACdA,EAAS7a,SAAQ,SAAChJ,GAAD,OAAWA,EAAM,EAAjB,GAClB,OA3HU0gB,GA+Hb,GAA+B,IAAIA,GAAS,CAC1CoD,YAAa,SAACX,GAAD,OAAWA,EAAKY,WAAW,KAA3B,EACbC,WAAY,SAACb,GAAD,MAAmB,WAATA,CAAV,EACZvB,MAAO,CACLqC,UAAW,eAEb/B,YAAa,CACX4B,aAAa,EACbE,YAAY,IAEb,CH3KI,SAAiCE,GACtCA,EAAS/a,IAAI,YAAa,CACxBgb,WAAO1U,EACP2U,SAAU,IACVC,OAAQ,eACRxkB,QAAI4P,EACJnG,UAAMmG,EACN6U,UAAM7U,EACNwM,QAAIxM,EACJ/Q,UAAM+Q,IAGRyU,EAASlB,SAAS,YAAa,CAC7BiB,WAAW,EACXD,YAAY,EACZF,YAAa,SAACX,GAAD,MAAmB,eAATA,GAAkC,eAATA,GAAkC,OAATA,CAA5D,IAGfe,EAAS/a,IAAI,aAAc,CACzBgV,OAAQ,CACNzf,KAAM,QACN6lB,WAAYpG,IAEdD,QAAS,CACPxf,KAAM,SACN6lB,WAAYrG,MAIhBgG,EAASlB,SAAS,aAAc,CAC9BiB,UAAW,cAGbC,EAAS/a,IAAI,cAAe,CAC1Bqb,OAAQ,CACN1D,UAAW,CACTsD,SAAU,MAGdK,OAAQ,CACN3D,UAAW,CACTsD,SAAU,IAGdM,KAAM,CACJC,WAAY,CACVxG,OAAQ,CACN7U,KAAM,eAERsb,QAAS,CACPlmB,KAAM,UACN0lB,SAAU,KAIhBS,KAAM,CACJF,WAAY,CACVxG,OAAQ,CACNlC,GAAI,eAEN2I,QAAS,CACPlmB,KAAM,UACN2lB,OAAQ,SACRxkB,GAAIyC,SAAAA,GAAAA,OAAS,EAAJA,CAALA,MAKb,EIvEM,SAA8B4hB,GACnCA,EAAS/a,IAAI,SAAU,CACrB2b,aAAa,EACbC,QAAS,CACPC,IAAK,EACLC,MAAO,EACPC,OAAQ,EACRC,KAAM,IAGX,ECRM,SAA4BjB,GACjCA,EAAS/a,IAAI,QAAS,CACpBic,SAAS,EACTC,QAAQ,EACRllB,SAAS,EACTmlB,aAAa,EASbC,OAAQ,QAMRC,MAAO,EAGPC,KAAM,CACJL,SAAS,EACTM,UAAW,EACXC,iBAAiB,EACjBC,WAAW,EACXC,WAAY,EACZC,UAAW,SAACC,EAAMpkB,GAAP,OAAmBA,EAAQ+jB,SAA3B,EACXM,UAAW,SAACD,EAAMpkB,GAAP,OAAmBA,EAAQqb,KAA3B,EACXqI,QAAQ,GAGVY,OAAQ,CACNb,SAAS,EACTc,KAAM,GACNC,WAAY,EACZC,MAAO,GAITC,MAAO,CAELjB,SAAS,EAGTkB,KAAM,GAGNvB,QAAS,CACPC,IAAK,EACLE,OAAQ,IAKZ5F,MAAO,CACLiH,YAAa,EACbC,YAAa,GACbC,QAAQ,EACRC,gBAAiB,EACjBC,gBAAiB,GACjB5B,QAAS,EACTK,SAAS,EACTwB,UAAU,EACVC,gBAAiB,EACjBC,YAAa,EAEblnB,SAAUmnB,GAAM7H,WAAWC,OAC3B6H,MAAO,CAAC,EACRC,MAAO,CAAC,EACRpd,MAAO,SACPqd,WAAY,OAEZC,mBAAmB,EACnBC,cAAe,4BACfC,gBAAiB,KAIrBnD,EAAShB,MAAM,cAAe,QAAS,GAAI,SAC3CgB,EAAShB,MAAM,aAAc,QAAS,GAAI,eAC1CgB,EAAShB,MAAM,eAAgB,QAAS,GAAI,eAC5CgB,EAAShB,MAAM,cAAe,QAAS,GAAI,SAE3CgB,EAASlB,SAAS,QAAS,CACzBiB,WAAW,EACXH,YAAa,SAACX,GAAD,OAAWA,EAAKY,WAAW,YAAcZ,EAAKY,WAAW,UAAqB,aAATZ,GAAgC,WAATA,CAA5F,EACba,WAAY,SAACb,GAAD,MAAmB,eAATA,GAAkC,mBAATA,GAAsC,SAATA,CAAhE,IAGde,EAASlB,SAAS,SAAU,CAC1BiB,UAAW,UAGbC,EAASlB,SAAS,cAAe,CAC/Bc,YAAa,SAACX,GAAD,MAAmB,oBAATA,GAAuC,aAATA,CAAxC,EACba,WAAY,SAACb,GAAD,MAAmB,oBAATA,CAAV,GAEf,ICnEM,SAASmE,GAAaxF,EAAKyF,EAAMC,EAAIC,EAASC,GACnD,IAAIC,EAAYJ,EAAKG,GAQrB,OAPKC,IACHA,EAAYJ,EAAKG,GAAU5F,EAAI8F,YAAYF,GAAQtB,MACnDoB,EAAG1kB,KAAK4kB,IAENC,EAAYF,IACdA,EAAUE,GAELF,CACR,CAKM,SAASI,GAAa/F,EAAKN,EAAMsG,EAAeC,GAErD,IAAIR,GADJQ,EAAQA,GAAS,CAAC,GACDR,KAAOQ,EAAMR,MAAQ,CAAC,EACnCC,EAAKO,EAAMC,eAAiBD,EAAMC,gBAAkB,GAEpDD,EAAMvG,OAASA,IACjB+F,EAAOQ,EAAMR,KAAO,CAAC,EACrBC,EAAKO,EAAMC,eAAiB,GAC5BD,EAAMvG,KAAOA,GAGfM,EAAImG,OAEJnG,EAAIN,KAAOA,EACX,IAEIphB,EAAGkb,EAAG4M,EAAMC,EAAOC,EAFnBX,EAAU,EACR9mB,EAAOmnB,EAAcvnB,OAE3B,IAAKH,EAAI,EAAGA,EAAIO,EAAMP,IAIpB,QAAcqP,KAHd0Y,EAAQL,EAAc1nB,KAGe,OAAV+nB,IAAqC,IAAnB3pB,EAAQ2pB,GACnDV,EAAUH,GAAaxF,EAAKyF,EAAMC,EAAIC,EAASU,QAC1C,GAAI3pB,EAAQ2pB,GAGjB,IAAK7M,EAAI,EAAG4M,EAAOC,EAAM5nB,OAAQ+a,EAAI4M,EAAM5M,SAGrB7L,KAFpB2Y,EAAcD,EAAM7M,KAE6B,OAAhB8M,GAAyB5pB,EAAQ4pB,KAChEX,EAAUH,GAAaxF,EAAKyF,EAAMC,EAAIC,EAASW,IAMvDtG,EAAIuG,UAEJ,IAAMC,EAAQd,EAAGjnB,OAAS,EAC1B,GAAI+nB,EAAQR,EAAcvnB,OAAQ,CAChC,IAAKH,EAAI,EAAGA,EAAIkoB,EAAOloB,WACdmnB,EAAKC,EAAGpnB,IAEjBonB,EAAGze,OAAO,EAAGuf,EACd,CACD,OAAOb,CACR,CAUM,SAASc,GAAY/I,EAAOgJ,EAAOpC,GACxC,IAAMlF,EAAmB1B,EAAMiJ,wBACzBC,EAAsB,IAAVtC,EAAcriB,KAAK6B,IAAIwgB,EAAQ,EAAG,IAAO,EAC3D,OAAOriB,KAAKiB,OAAOwjB,EAAQE,GAAaxH,GAAoBA,EAAmBwH,CAChF,CAOM,SAASC,GAAYC,EAAQ9G,IAClCA,EAAMA,GAAO8G,EAAOC,WAAW,OAE3BZ,OAGJnG,EAAIgH,iBACJhH,EAAIiH,UAAU,EAAG,EAAGH,EAAOxC,MAAOwC,EAAOI,QACzClH,EAAIuG,SACL,CAEM,SAASY,GAAUnH,EAAKngB,EAASY,EAAGE,GACzCymB,GAAgBpH,EAAKngB,EAASY,EAAGE,EAAG,KACrC,CAEM,SAASymB,GAAgBpH,EAAKngB,EAASY,EAAGE,EAAGqN,GAClD,IAAIpR,EAAMyqB,EAASC,EAASzlB,EAAM0lB,EAAcjD,EAAOkD,EAAUC,EAC3D7H,EAAQ/f,EAAQ6nB,WAChBC,EAAW9nB,EAAQ8nB,SACnBC,EAAS/nB,EAAQ+nB,OACnBC,GAAOF,GAAY,GAAKrlB,EAE5B,GAAIsd,GAA0B,kBAAVA,IAEL,+BADbhjB,EAAOgjB,EAAM7iB,aACwC,+BAATH,GAM1C,OALAojB,EAAImG,OACJnG,EAAI8H,UAAUrnB,EAAGE,GACjBqf,EAAInE,OAAOgM,GACX7H,EAAI+H,UAAUnI,GAAQA,EAAM0E,MAAQ,GAAI1E,EAAMsH,OAAS,EAAGtH,EAAM0E,MAAO1E,EAAMsH,aAC7ElH,EAAIuG,UAKR,KAAI9iB,MAAMmkB,IAAWA,GAAU,GAA/B,CAMA,OAFA5H,EAAIgI,YAEIpI,GAER,QACM5R,EACFgS,EAAIiI,QAAQxnB,EAAGE,EAAGqN,EAAI,EAAG4Z,EAAQ,EAAG,EAAG1lB,GAEvC8d,EAAIkI,IAAIznB,EAAGE,EAAGinB,EAAQ,EAAG1lB,GAE3B8d,EAAImI,YACJ,MACF,IAAK,WACH7D,EAAQtW,EAAIA,EAAI,EAAI4Z,EACpB5H,EAAIoI,OAAO3nB,EAAIwB,KAAK4H,IAAIge,GAAOvD,EAAO3jB,EAAIsB,KAAK6I,IAAI+c,GAAOD,GAC1DC,GAAOplB,EACPud,EAAIqI,OAAO5nB,EAAIwB,KAAK4H,IAAIge,GAAOvD,EAAO3jB,EAAIsB,KAAK6I,IAAI+c,GAAOD,GAC1DC,GAAOplB,EACPud,EAAIqI,OAAO5nB,EAAIwB,KAAK4H,IAAIge,GAAOvD,EAAO3jB,EAAIsB,KAAK6I,IAAI+c,GAAOD,GAC1D5H,EAAImI,YACJ,MACF,IAAK,cASHtmB,EAAO+lB,GADPL,EAAwB,KAATK,GAEfP,EAAUplB,KAAK6I,IAAI+c,EAAMrlB,GAAcX,EACvC2lB,EAAWvlB,KAAK6I,IAAI+c,EAAMrlB,IAAewL,EAAIA,EAAI,EAAIuZ,EAAe1lB,GACpEylB,EAAUrlB,KAAK4H,IAAIge,EAAMrlB,GAAcX,EACvC4lB,EAAWxlB,KAAK4H,IAAIge,EAAMrlB,IAAewL,EAAIA,EAAI,EAAIuZ,EAAe1lB,GACpEme,EAAIkI,IAAIznB,EAAI+mB,EAAU7mB,EAAI2mB,EAASC,EAAcM,EAAM7lB,EAAI6lB,EAAMtlB,GACjEyd,EAAIkI,IAAIznB,EAAIgnB,EAAU9mB,EAAI0mB,EAASE,EAAcM,EAAMtlB,EAASslB,GAChE7H,EAAIkI,IAAIznB,EAAI+mB,EAAU7mB,EAAI2mB,EAASC,EAAcM,EAAKA,EAAMtlB,GAC5Dyd,EAAIkI,IAAIznB,EAAIgnB,EAAU9mB,EAAI0mB,EAASE,EAAcM,EAAMtlB,EAASslB,EAAM7lB,GACtEge,EAAImI,YACJ,MACF,IAAK,OACH,IAAKR,EAAU,CACb9lB,EAAOI,KAAKqmB,QAAUV,EACtBtD,EAAQtW,EAAIA,EAAI,EAAInM,EACpBme,EAAIuI,KAAK9nB,EAAI6jB,EAAO3jB,EAAIkB,EAAM,EAAIyiB,EAAO,EAAIziB,GAC7C,KACD,CACDgmB,GAAOrlB,EAET,IAAK,UACHglB,EAAWvlB,KAAK6I,IAAI+c,IAAQ7Z,EAAIA,EAAI,EAAI4Z,GACxCP,EAAUplB,KAAK6I,IAAI+c,GAAOD,EAC1BN,EAAUrlB,KAAK4H,IAAIge,GAAOD,EAC1BH,EAAWxlB,KAAK4H,IAAIge,IAAQ7Z,EAAIA,EAAI,EAAI4Z,GACxC5H,EAAIoI,OAAO3nB,EAAI+mB,EAAU7mB,EAAI2mB,GAC7BtH,EAAIqI,OAAO5nB,EAAIgnB,EAAU9mB,EAAI0mB,GAC7BrH,EAAIqI,OAAO5nB,EAAI+mB,EAAU7mB,EAAI2mB,GAC7BtH,EAAIqI,OAAO5nB,EAAIgnB,EAAU9mB,EAAI0mB,GAC7BrH,EAAImI,YACJ,MACF,IAAK,WACHN,GAAOrlB,EAET,IAAK,QACHglB,EAAWvlB,KAAK6I,IAAI+c,IAAQ7Z,EAAIA,EAAI,EAAI4Z,GACxCP,EAAUplB,KAAK6I,IAAI+c,GAAOD,EAC1BN,EAAUrlB,KAAK4H,IAAIge,GAAOD,EAC1BH,EAAWxlB,KAAK4H,IAAIge,IAAQ7Z,EAAIA,EAAI,EAAI4Z,GACxC5H,EAAIoI,OAAO3nB,EAAI+mB,EAAU7mB,EAAI2mB,GAC7BtH,EAAIqI,OAAO5nB,EAAI+mB,EAAU7mB,EAAI2mB,GAC7BtH,EAAIoI,OAAO3nB,EAAIgnB,EAAU9mB,EAAI0mB,GAC7BrH,EAAIqI,OAAO5nB,EAAIgnB,EAAU9mB,EAAI0mB,GAC7B,MACF,IAAK,OACHG,EAAWvlB,KAAK6I,IAAI+c,IAAQ7Z,EAAIA,EAAI,EAAI4Z,GACxCP,EAAUplB,KAAK6I,IAAI+c,GAAOD,EAC1BN,EAAUrlB,KAAK4H,IAAIge,GAAOD,EAC1BH,EAAWxlB,KAAK4H,IAAIge,IAAQ7Z,EAAIA,EAAI,EAAI4Z,GACxC5H,EAAIoI,OAAO3nB,EAAI+mB,EAAU7mB,EAAI2mB,GAC7BtH,EAAIqI,OAAO5nB,EAAI+mB,EAAU7mB,EAAI2mB,GAC7BtH,EAAIoI,OAAO3nB,EAAIgnB,EAAU9mB,EAAI0mB,GAC7BrH,EAAIqI,OAAO5nB,EAAIgnB,EAAU9mB,EAAI0mB,GAC7BQ,GAAOrlB,EACPglB,EAAWvlB,KAAK6I,IAAI+c,IAAQ7Z,EAAIA,EAAI,EAAI4Z,GACxCP,EAAUplB,KAAK6I,IAAI+c,GAAOD,EAC1BN,EAAUrlB,KAAK4H,IAAIge,GAAOD,EAC1BH,EAAWxlB,KAAK4H,IAAIge,IAAQ7Z,EAAIA,EAAI,EAAI4Z,GACxC5H,EAAIoI,OAAO3nB,EAAI+mB,EAAU7mB,EAAI2mB,GAC7BtH,EAAIqI,OAAO5nB,EAAI+mB,EAAU7mB,EAAI2mB,GAC7BtH,EAAIoI,OAAO3nB,EAAIgnB,EAAU9mB,EAAI0mB,GAC7BrH,EAAIqI,OAAO5nB,EAAIgnB,EAAU9mB,EAAI0mB,GAC7B,MACF,IAAK,OACHA,EAAUrZ,EAAIA,EAAI,EAAI/L,KAAK6I,IAAI+c,GAAOD,EACtCN,EAAUrlB,KAAK4H,IAAIge,GAAOD,EAC1B5H,EAAIoI,OAAO3nB,EAAI4mB,EAAS1mB,EAAI2mB,GAC5BtH,EAAIqI,OAAO5nB,EAAI4mB,EAAS1mB,EAAI2mB,GAC5B,MACF,IAAK,OACHtH,EAAIoI,OAAO3nB,EAAGE,GACdqf,EAAIqI,OAAO5nB,EAAIwB,KAAK6I,IAAI+c,IAAQ7Z,EAAIA,EAAI,EAAI4Z,GAASjnB,EAAIsB,KAAK4H,IAAIge,GAAOD,GAI3E5H,EAAIwI,OACA3oB,EAAQ4oB,YAAc,GACxBzI,EAAI0I,QA7GL,CA+GF,CAUM,SAASC,GAAeC,EAAOC,EAAMC,GAG1C,OAFAA,EAASA,GAAU,IAEXD,GAASD,GAASA,EAAMnoB,EAAIooB,EAAKxF,KAAOyF,GAAUF,EAAMnoB,EAAIooB,EAAK1F,MAAQ2F,GACjFF,EAAMjoB,EAAIkoB,EAAK3F,IAAM4F,GAAUF,EAAMjoB,EAAIkoB,EAAKzF,OAAS0F,CACxD,CAEM,SAASC,GAAS/I,EAAK6I,GAC5B7I,EAAImG,OACJnG,EAAIgI,YACJhI,EAAIuI,KAAKM,EAAKxF,KAAMwF,EAAK3F,IAAK2F,EAAK1F,MAAQ0F,EAAKxF,KAAMwF,EAAKzF,OAASyF,EAAK3F,KACzElD,EAAIgJ,MACL,CAEM,SAASC,GAAWjJ,GACzBA,EAAIuG,SACL,CAKM,SAAS2C,GAAelJ,EAAKmJ,EAAU9pB,EAAQ+pB,EAAM/I,GAC1D,IAAK8I,EACH,OAAOnJ,EAAIqI,OAAOhpB,EAAOoB,EAAGpB,EAAOsB,GAErC,GAAa,WAAT0f,EAAmB,CACrB,IAAMgJ,GAAYF,EAAS1oB,EAAIpB,EAAOoB,GAAK,EAC3Cuf,EAAIqI,OAAOgB,EAAUF,EAASxoB,GAC9Bqf,EAAIqI,OAAOgB,EAAUhqB,EAAOsB,EAC7B,KAAmB,UAAT0f,MAAuB+I,EAChCpJ,EAAIqI,OAAOc,EAAS1oB,EAAGpB,EAAOsB,GAE9Bqf,EAAIqI,OAAOhpB,EAAOoB,EAAG0oB,EAASxoB,GAEhCqf,EAAIqI,OAAOhpB,EAAOoB,EAAGpB,EAAOsB,EAC7B,CAKM,SAAS2oB,GAAetJ,EAAKmJ,EAAU9pB,EAAQ+pB,GACpD,IAAKD,EACH,OAAOnJ,EAAIqI,OAAOhpB,EAAOoB,EAAGpB,EAAOsB,GAErCqf,EAAIuJ,cACFH,EAAOD,EAASK,KAAOL,EAASM,KAChCL,EAAOD,EAASO,KAAOP,EAASQ,KAChCP,EAAO/pB,EAAOoqB,KAAOpqB,EAAOmqB,KAC5BJ,EAAO/pB,EAAOsqB,KAAOtqB,EAAOqqB,KAC5BrqB,EAAOoB,EACPpB,EAAOsB,EACV,CAKM,SAASipB,GAAW5J,EAAKwE,EAAM/jB,EAAGE,EAAG+e,GAAiB,IAGvDphB,EAAGurB,EAHyCC,EAAW,uDAAJ,CAAC,EAClDC,EAAQrtB,EAAQ8nB,GAAQA,EAAO,CAACA,GAChCkE,EAASoB,EAAKE,YAAc,GAA0B,KAArBF,EAAKG,YAO5C,IAJAjK,EAAImG,OACJnG,EAAIN,KAAOA,EAAKkG,OAChBsE,GAAclK,EAAK8J,GAEdxrB,EAAI,EAAGA,EAAIyrB,EAAMtrB,SAAUH,EAC9BurB,EAAOE,EAAMzrB,GAETwrB,EAAKK,UACPC,GAAapK,EAAK8J,EAAKK,UAGrBzB,IACEoB,EAAKG,cACPjK,EAAIqK,YAAcP,EAAKG,aAGpBztB,EAAcstB,EAAKE,eACtBhK,EAAI4D,UAAYkG,EAAKE,aAGvBhK,EAAIsK,WAAWT,EAAMppB,EAAGE,EAAGmpB,EAAKS,WAGlCvK,EAAIwK,SAASX,EAAMppB,EAAGE,EAAGmpB,EAAKS,UAC9BE,GAAazK,EAAKvf,EAAGE,EAAGkpB,EAAMC,GAE9BnpB,GAAK+e,EAAKG,WAGZG,EAAIuG,SACL,CAED,SAAS2D,GAAclK,EAAK8J,GACtBA,EAAKY,aACP1K,EAAI8H,UAAUgC,EAAKY,YAAY,GAAIZ,EAAKY,YAAY,IAGjDluB,EAAcstB,EAAKnC,WACtB3H,EAAInE,OAAOiO,EAAKnC,UAGdmC,EAAK5O,QACP8E,EAAI2K,UAAYb,EAAK5O,OAGnB4O,EAAKc,YACP5K,EAAI4K,UAAYd,EAAKc,WAGnBd,EAAKe,eACP7K,EAAI6K,aAAef,EAAKe,aAE3B,CAED,SAASJ,GAAazK,EAAKvf,EAAGE,EAAGkpB,EAAMC,GACrC,GAAIA,EAAKgB,eAAiBhB,EAAKiB,UAAW,CAQxC,IAAMC,EAAUhL,EAAI8F,YAAY+D,GAC1BxG,EAAO5iB,EAAIuqB,EAAQC,sBACnB9H,EAAQ1iB,EAAIuqB,EAAQE,uBACpBhI,EAAMviB,EAAIqqB,EAAQG,wBAClB/H,EAASziB,EAAIqqB,EAAQI,yBACrBC,EAAcvB,EAAKgB,eAAiB5H,EAAME,GAAU,EAAIA,EAE9DpD,EAAIqK,YAAcrK,EAAI2K,UACtB3K,EAAIgI,YACJhI,EAAI4D,UAAYkG,EAAKwB,iBAAmB,EACxCtL,EAAIoI,OAAO/E,EAAMgI,GACjBrL,EAAIqI,OAAOlF,EAAOkI,GAClBrL,EAAI0I,QACL,CACF,CAED,SAAS0B,GAAapK,EAAK8J,GACzB,IAAMyB,EAAWvL,EAAI2K,UAErB3K,EAAI2K,UAAYb,EAAK5O,MACrB8E,EAAIwL,SAAS1B,EAAKzG,KAAMyG,EAAK5G,IAAK4G,EAAKxF,MAAOwF,EAAK5C,QACnDlH,EAAI2K,UAAYY,CACjB,CAOM,SAASE,GAAmBzL,EAAKuI,GACtC,IAAO9nB,EAAsB8nB,EAAtB9nB,EAAGE,EAAmB4nB,EAAnB5nB,EAAGqN,EAAgBua,EAAhBva,EAAG5B,EAAamc,EAAbnc,EAAGwb,EAAUW,EAAVX,OAGnB5H,EAAIkI,IAAIznB,EAAImnB,EAAO8D,QAAS/qB,EAAIinB,EAAO8D,QAAS9D,EAAO8D,SAAUnpB,EAASP,GAAI,GAG9Ege,EAAIqI,OAAO5nB,EAAGE,EAAIyL,EAAIwb,EAAO+D,YAG7B3L,EAAIkI,IAAIznB,EAAImnB,EAAO+D,WAAYhrB,EAAIyL,EAAIwb,EAAO+D,WAAY/D,EAAO+D,WAAY3pB,EAAIO,GAAS,GAG1Fyd,EAAIqI,OAAO5nB,EAAIuN,EAAI4Z,EAAOgE,YAAajrB,EAAIyL,GAG3C4T,EAAIkI,IAAIznB,EAAIuN,EAAI4Z,EAAOgE,YAAajrB,EAAIyL,EAAIwb,EAAOgE,YAAahE,EAAOgE,YAAarpB,EAAS,GAAG,GAGhGyd,EAAIqI,OAAO5nB,EAAIuN,EAAGrN,EAAIinB,EAAOiE,UAG7B7L,EAAIkI,IAAIznB,EAAIuN,EAAI4Z,EAAOiE,SAAUlrB,EAAIinB,EAAOiE,SAAUjE,EAAOiE,SAAU,GAAItpB,GAAS,GAGpFyd,EAAIqI,OAAO5nB,EAAImnB,EAAO8D,QAAS/qB,EAChC,CC/bD,IAAMmrB,GAAc,uCACdC,GAAa,wEAcZ,SAASC,GAAavvB,EAAwBoF,GACnD,IAAMoqB,GAAW,GAAKxvB,GAAOyvB,MAAMJ,IACnC,IAAKG,GAA0B,WAAfA,EAAQ,GACtB,OAAc,IAAPpqB,EAKT,OAFApF,GAASwvB,EAAQ,GAETA,EAAQ,IACd,IAAK,KACH,OAAOxvB,EACT,IAAK,IACHA,GAAS,IAMb,OAAOoF,EAAOpF,CACf,CAUM,SAAS0vB,GAAkB1vB,EAAwC2vB,GACxE,IADkH,EAC5GxR,EAAM,CAAC,EACPyR,EAAWnvB,EAASkvB,GACpB5tB,EAAO6tB,EAAWxvB,OAAO2B,KAAK4tB,GAASA,EACvCE,EAAOpvB,EAAST,GAClB4vB,EACEE,SAAAA,GAAAA,OAAQ/uB,EAAef,EAAM8vB,GAAO9vB,EAAM2vB,EAAMG,IAAhDA,EACAA,SAAAA,GAAAA,OAAQ9vB,EAAM8vB,EAAdA,EACF,kBAAM9vB,CAAN,EAR8G,UAU/F+B,GAV+F,IAUlH,IAAK,EAAL,qBAAyB,KAAd+tB,EAAc,QACvB3R,EAAI2R,IAAqBD,EAAKC,IAnBS,CAoBxC,CAZiH,+BAalH,OAAO3R,CACR,CAUM,SAAS4R,GAAO/vB,GACrB,OAAO0vB,GAAkB1vB,EAAO,CAACymB,IAAK,IAAKC,MAAO,IAAKC,OAAQ,IAAKC,KAAM,KAC3E,CASM,SAASoJ,GAAchwB,GAC5B,OAAO0vB,GAAkB1vB,EAAO,CAAC,UAAW,WAAY,aAAc,eACvE,CAUM,SAASiwB,GAAUjwB,GACxB,IAAMyE,EAAMsrB,GAAO/vB,GAKnB,OAHAyE,EAAIojB,MAAQpjB,EAAImiB,KAAOniB,EAAIiiB,MAC3BjiB,EAAIgmB,OAAShmB,EAAIgiB,IAAMhiB,EAAIkiB,OAEpBliB,CACR,CAcM,SAASyrB,GAAO9sB,EAA4B+sB,GACjD/sB,EAAUA,GAAW,CAAC,EACtB+sB,EAAWA,GAAYxK,GAAS1C,KAEhC,IAAI7d,EAAOrE,EAAeqC,EAAQgC,KAAM+qB,EAAS/qB,MAE7B,kBAATA,IACTA,EAAOiY,SAASjY,EAAM,KAExB,IAAI+d,EAAQpiB,EAAeqC,EAAQ+f,MAAOgN,EAAShN,OAC/CA,KAAW,GAAKA,GAAOsM,MAAMH,MAC/Bc,QAAQC,KAAK,kCAAoClN,EAAQ,KACzDA,OAAQjS,GAGV,IAAM+R,EAAO,CACXC,OAAQniB,EAAeqC,EAAQ8f,OAAQiN,EAASjN,QAChDE,WAAYmM,GAAaxuB,EAAeqC,EAAQggB,WAAY+M,EAAS/M,YAAahe,GAClFA,KAAAA,EACA+d,MAAAA,EACAzE,OAAQ3d,EAAeqC,EAAQsb,OAAQyR,EAASzR,QAChDyK,OAAQ,IAIV,OADAlG,EAAKkG,ODzHA,SAAsBlG,GAC3B,OAAKA,GAAQljB,EAAckjB,EAAK7d,OAASrF,EAAckjB,EAAKC,QACnD,MAGDD,EAAKE,MAAQF,EAAKE,MAAQ,IAAM,KACrCF,EAAKvE,OAASuE,EAAKvE,OAAS,IAAM,IACnCuE,EAAK7d,KAAO,MACZ6d,EAAKC,MACR,CCgHeoN,CAAarN,GACpBA,CACR,CAaM,SAASsN,GAAQC,EAAwB5N,EAAkBpgB,EAAgBiuB,GAChF,IACI5uB,EAAWO,EAAcpC,EADzB0wB,GAAY,EAGhB,IAAK7uB,EAAI,EAAGO,EAAOouB,EAAOxuB,OAAQH,EAAIO,IAAQP,EAE5C,QAAcqP,KADdlR,EAAQwwB,EAAO3uB,WAICqP,IAAZ0R,GAA0C,oBAAV5iB,IAClCA,EAAQA,EAAM4iB,GACd8N,GAAY,QAEAxf,IAAV1O,GAAuBvC,EAAQD,KACjCA,EAAQA,EAAMwC,EAAQxC,EAAMgC,QAC5B0uB,GAAY,QAEAxf,IAAVlR,GAIF,OAHIywB,IAASC,IACXD,EAAKC,WAAY,GAEZ1wB,CAGZ,CAwBM,SAAS2wB,GAA6CC,EAAkBhO,GAC7E,OAAOxiB,OAAO4M,OAAO5M,OAAOyC,OAAO+tB,GAAgBhO,EACpD,CCnMM,SAASiO,GAAgBC,GAAqF,MAA7EC,EAA6E,uDAAlE,CAAC,IAAKC,EAA4D,uDAA/CF,EAAQX,EAAuC,uCAA7Bc,EAA6B,uDAAjB,kBAAMH,EAAO,EAAb,EAC7F/rB,EAAQorB,KACXA,EAAWe,GAAS,YAAaJ,IAEnC,IAAMtH,GAAK,eACR2H,OAAOC,YAAc,WADb,uBAEG,IAFH,mBAGAN,IAHA,uBAIIE,IAJJ,qBAKEb,IALF,sBAMGc,IANH,qBAOC,SAAC/O,GAAD,OAAW2O,GAAgB,CAAC3O,GAAF,eAAY4O,IAASC,EAAUC,EAAYb,EAArE,IAPD,GASX,OAAO,IAAIkB,MAAM7H,EAAO,CAItB8H,eAJsB,SAIP1uB,EAAQktB,GAIrB,cAHOltB,EAAOktB,UACPltB,EAAO2uB,aACPT,EAAO,GAAGhB,IACV,CACR,EAKDxP,IAdsB,SAclB1d,EAAQktB,GACV,OAAO0B,GAAQ5uB,EAAQktB,GACrB,kBAAM2B,GAAqB3B,EAAMiB,EAAUD,EAAQluB,EAAnD,GACH,EAMD8uB,yBAvBsB,SAuBG9uB,EAAQktB,GAC/B,OAAO6B,QAAQD,yBAAyB9uB,EAAOgvB,QAAQ,GAAI9B,EAC5D,EAKD+B,eA9BsB,WA+BpB,OAAOF,QAAQE,eAAef,EAAO,GACtC,EAKDxrB,IArCsB,SAqClB1C,EAAQktB,GACV,OAAOgC,GAAqBlvB,GAAQgf,SAASkO,EAC9C,EAKDiC,QA5CsB,SA4CdnvB,GACN,OAAOkvB,GAAqBlvB,EAC7B,EAKDgI,IAnDsB,SAmDlBhI,EAAQktB,EAAM9vB,GAChB,IAAMgyB,EAAUpvB,EAAOqvB,WAAarvB,EAAOqvB,SAAWhB,KAGtD,OAFAruB,EAAOktB,GAAQkC,EAAQlC,GAAQ9vB,SACxB4C,EAAO2uB,OACP,CACR,GAEJ,CAUM,SAASW,GAAeC,EAAOvP,EAASwP,EAAUC,GACvD,IAAM7I,EAAQ,CACZ8I,YAAY,EACZC,OAAQJ,EACRK,SAAU5P,EACV6P,UAAWL,EACXM,OAAQ,IAAI7nB,IACZwX,aAAcA,GAAa8P,EAAOE,GAClCM,WAAY,SAACpP,GAAD,OAAS2O,GAAeC,EAAO5O,EAAK6O,EAAUC,EAA9C,EACZ3N,SAAU,SAACxC,GAAD,OAAWgQ,GAAeC,EAAMzN,SAASxC,GAAQU,EAASwP,EAAUC,EAApE,GAEZ,OAAO,IAAIhB,MAAM7H,EAAO,CAItB8H,eAJsB,SAIP1uB,EAAQktB,GAGrB,cAFOltB,EAAOktB,UACPqC,EAAMrC,IACN,CACR,EAKDxP,IAbsB,SAalB1d,EAAQktB,EAAM8C,GAChB,OAAOpB,GAAQ5uB,EAAQktB,GACrB,kBA0ER,SAA6BltB,EAAQktB,EAAM8C,GACzC,IAAOL,EAA0D3vB,EAA1D2vB,OAAQC,EAAkD5vB,EAAlD4vB,SAAUC,EAAwC7vB,EAAxC6vB,UAAyB3Q,EAAelf,EAA7Byf,aAChCriB,EAAQuyB,EAAOzC,GAGf9qB,EAAWhF,IAAU8hB,EAAY+Q,aAAa/C,KAChD9vB,EAYJ,SAA4B8vB,EAAM9vB,EAAO4C,EAAQgwB,GAC/C,IAAOL,EAAuC3vB,EAAvC2vB,OAAQC,EAA+B5vB,EAA/B4vB,SAAUC,EAAqB7vB,EAArB6vB,UAAWC,EAAU9vB,EAAV8vB,OACpC,GAAIA,EAAOptB,IAAIwqB,GAEb,MAAM,IAAIgD,MAAM,uBAAyB5yB,MAAM6K,KAAK2nB,GAAQK,KAAK,MAAQ,KAAOjD,GAElF4C,EAAO5nB,IAAIglB,GACX9vB,EAAQA,EAAMwyB,EAAUC,GAAaG,GACrCF,EAAOM,OAAOlD,GACVmD,GAAiBnD,EAAM9vB,KAEzBA,EAAQkzB,GAAkBX,EAAOX,QAASW,EAAQzC,EAAM9vB,IAE1D,OAAOA,CACR,CA1BWmzB,CAAmBrD,EAAM9vB,EAAO4C,EAAQgwB,IAE9C3yB,EAAQD,IAAUA,EAAMgC,SAC1BhC,EAyBJ,SAAuB8vB,EAAM9vB,EAAO4C,EAAQwwB,GAC1C,IAAOb,EAA0D3vB,EAA1D2vB,OAAQC,EAAkD5vB,EAAlD4vB,SAAUC,EAAwC7vB,EAAxC6vB,UAAyB3Q,EAAelf,EAA7Byf,aAEpC,GAAItd,EAAQytB,EAAShwB,QAAU4wB,EAAYtD,GACzC9vB,EAAQA,EAAMwyB,EAAShwB,MAAQxC,EAAMgC,aAChC,GAAIvB,EAAST,EAAM,IAAK,CAE7B,IAAMqzB,EAAMrzB,EACN8wB,EAASyB,EAAOX,QAAQ0B,QAAOrqB,SAAAA,GAAAA,OAAKA,IAAMoqB,CAAXpqB,IACrCjJ,EAAQ,GAJqB,gBAKVqzB,GALU,IAK7B,IAAK,EAAL,qBAAwB,KAChBE,EAAWL,GAAkBpC,EAAQyB,EAAQzC,EAD7B,SAEtB9vB,EAAMuE,KAAK2tB,GAAeqB,EAAUf,EAAUC,GAAaA,EAAU3C,GAAOhO,GAC7E,CAR4B,+BAS9B,CACD,OAAO9hB,CACR,CAzCWwzB,CAAc1D,EAAM9vB,EAAO4C,EAAQkf,EAAYsR,cAErDH,GAAiBnD,EAAM9vB,KAEzBA,EAAQkyB,GAAelyB,EAAOwyB,EAAUC,GAAaA,EAAU3C,GAAOhO,IAExE,OAAO9hB,CACR,CA1FayzB,CAAoB7wB,EAAQktB,EAAM8C,EAAxC,GACH,EAMDlB,yBAtBsB,SAsBG9uB,EAAQktB,GAC/B,OAAOltB,EAAOyf,aAAaqR,QACvB/B,QAAQrsB,IAAI6sB,EAAOrC,GAAQ,CAAC1K,YAAY,EAAMuO,cAAc,QAAQziB,EACpEygB,QAAQD,yBAAyBS,EAAOrC,EAC7C,EAKD+B,eA/BsB,WAgCpB,OAAOF,QAAQE,eAAeM,EAC/B,EAKD7sB,IAtCsB,SAsClB1C,EAAQktB,GACV,OAAO6B,QAAQrsB,IAAI6sB,EAAOrC,EAC3B,EAKDiC,QA7CsB,WA8CpB,OAAOJ,QAAQI,QAAQI,EACxB,EAKDvnB,IApDsB,SAoDlBhI,EAAQktB,EAAM9vB,GAGhB,OAFAmyB,EAAMrC,GAAQ9vB,SACP4C,EAAOktB,IACP,CACR,GAEJ,CAKM,SAASzN,GAAa8P,GAAuD,IAAhDxM,EAAgD,uDAArC,CAACiO,YAAY,EAAMC,WAAW,GAC3E,EAA0G1B,EAAnG5M,YAAAA,OAAP,MAAqBI,EAASiO,WAA9B,IAA0GzB,EAAhE1M,WAAAA,OAA1C,MAAuDE,EAASkO,UAAhE,IAA0G1B,EAA/B2B,SAAAA,OAA3E,MAAsFnO,EAAS+N,QAA/F,EACA,MAAO,CACLA,QAASI,EACTF,WAAYrO,EACZsO,UAAWpO,EACXoN,aAAc7tB,EAAWugB,GAAeA,EAAc,kBAAMA,CAAN,EACtD6N,YAAapuB,EAAWygB,GAAcA,EAAa,kBAAMA,CAAN,EAEtD,CAED,IAAMsO,GAAU,SAACC,EAAQpP,GAAT,OAAkBoP,EAASA,EAASrvB,EAAYigB,GAAQA,CAAxD,EACVqO,GAAmB,SAACnD,EAAM9vB,GAAP,OAAiBS,EAAST,IAAmB,aAAT8vB,IACzB,OAAjC1vB,OAAOyxB,eAAe7xB,IAAmBA,EAAMoiB,cAAgBhiB,OADzC,EAGzB,SAASoxB,GAAQ5uB,EAAQktB,EAAMS,GAC7B,GAAInwB,OAAOC,UAAUwD,eAAetD,KAAKqC,EAAQktB,GAC/C,OAAOltB,EAAOktB,GAGhB,IAAM9vB,EAAQuwB,IAGd,OADA3tB,EAAOktB,GAAQ9vB,EACRA,CACR,CAsDD,SAASi0B,GAAgB9D,EAAUL,EAAM9vB,GACvC,OAAOgF,EAAWmrB,GAAYA,EAASL,EAAM9vB,GAASmwB,CACvD,CAED,IAAMpO,GAAW,SAAC9e,EAAKixB,GAAN,OAAyB,IAARjxB,EAAeixB,EAC9B,kBAARjxB,EAAmByB,EAAiBwvB,EAAQjxB,QAAOiO,CAD7C,EAGjB,SAASijB,GAAUvpB,EAAKwpB,EAAcnxB,EAAKoxB,EAAgBr0B,GAAO,gBAC3Co0B,GAD2C,IAChE,IAAK,EAAL,qBAAmC,KAAxBF,EAAwB,QAC3BhS,EAAQH,GAAS9e,EAAKixB,GAC5B,GAAIhS,EAAO,CACTtX,EAAIE,IAAIoX,GACR,IAAMiO,EAAW8D,GAAgB/R,EAAMwD,UAAWziB,EAAKjD,GACvD,GAAI+E,EAAQorB,IAAaA,IAAaltB,GAAOktB,IAAakE,EAGxD,OAAOlE,CAEV,MAAM,IAAc,IAAVjO,GAAmBnd,EAAQsvB,IAAmBpxB,IAAQoxB,EAG/D,OAAO,IAEV,CAhB+D,+BAiBhE,OAAO,CACR,CAED,SAASnB,GAAkBkB,EAAcb,EAAUzD,EAAM9vB,GACvD,IAAMgxB,EAAauC,EAASe,YACtBnE,EAAW8D,GAAgBV,EAAS7N,UAAWoK,EAAM9vB,GACrDu0B,EAAY,GAAH,eAAOH,IAAP,OAAwBpD,IACjCpmB,EAAM,IAAIC,IAChBD,EAAIE,IAAI9K,GACR,IAAIiD,EAAMuxB,GAAiB5pB,EAAK2pB,EAAWzE,EAAMK,GAAYL,EAAM9vB,GACnE,OAAY,OAARiD,MAGA8B,EAAQorB,IAAaA,IAAaL,GAExB,QADZ7sB,EAAMuxB,GAAiB5pB,EAAK2pB,EAAWpE,EAAUltB,EAAKjD,MAKjD6wB,GAAgB3wB,MAAM6K,KAAKH,GAAM,CAAC,IAAKomB,EAAYb,GACxD,kBAUJ,SAAsBoD,EAAUzD,EAAM9vB,GACpC,IAAMk0B,EAASX,EAASkB,aAClB3E,KAAQoE,IACZA,EAAOpE,GAAQ,CAAC,GAElB,IAAMltB,EAASsxB,EAAOpE,GACtB,GAAI7vB,EAAQ2C,IAAWnC,EAAST,GAE9B,OAAOA,EAET,OAAO4C,GAAU,CAAC,CACnB,CArBS8xB,CAAanB,EAAUzD,EAAM9vB,EAAnC,IACH,CAED,SAASw0B,GAAiB5pB,EAAK2pB,EAAWtxB,EAAKktB,EAAU9qB,GACvD,KAAOpC,GACLA,EAAMkxB,GAAUvpB,EAAK2pB,EAAWtxB,EAAKktB,EAAU9qB,GAEjD,OAAOpC,CACR,CAeD,SAASwuB,GAAqB3B,EAAMiB,EAAUD,EAAQqB,GACpD,IAAInyB,EADuD,YAEtC+wB,GAFsC,IAE3D,IAAK,EAAL,qBAA+B,KAApBiD,EAAoB,QAE7B,GADAh0B,EAAQkxB,GAAS6C,GAAQC,EAAQlE,GAAOgB,GACpC/rB,EAAQ/E,GACV,OAAOizB,GAAiBnD,EAAM9vB,GAC1BkzB,GAAkBpC,EAAQqB,EAAOrC,EAAM9vB,GACvCA,CAEP,CAT0D,+BAU5D,CAED,SAASkxB,GAASjuB,EAAK6tB,GAAQ,gBACTA,GADS,IAC7B,IAAK,EAAL,qBAA4B,KAAjB5O,EAAiB,QAC1B,GAAKA,EAAL,CAGA,IAAMliB,EAAQkiB,EAAMjf,GACpB,GAAI8B,EAAQ/E,GACV,OAAOA,CAHR,CAKF,CAT4B,+BAU9B,CAED,SAAS8xB,GAAqBlvB,GAC5B,IAAIb,EAAOa,EAAO2uB,MAIlB,OAHKxvB,IACHA,EAAOa,EAAO2uB,MAKlB,SAAkCT,GAChC,IADwC,EAClClmB,EAAM,IAAIC,IADwB,UAEpBimB,GAFoB,IAExC,IAAK,EAAL,qBAA4B,OAAjB5O,EAAiB,kBACR9hB,OAAO2B,KAAKmgB,GAAOoR,QAAOvwB,SAAAA,GAAAA,OAAMA,EAAEyiB,WAAW,IAAnBziB,KADlB,IAC1B,IAAK,EAAL,qBAAsE,KAA3DE,EAA2D,QACpE2H,EAAIE,IAAI7H,EACT,CAHyB,+BAI3B,CANuC,+BAOxC,OAAO/C,MAAM6K,KAAKH,EACnB,CAbyB+pB,CAAyB/xB,EAAOgvB,UAEjD7vB,CACR,CAYM,SAAS6yB,GAA4BnpB,EAAMud,EAAMlgB,EAAO+C,GAC7D,IAGIhK,EAAGO,EAAMI,EAAO6C,EAHb0G,EAAUN,EAAVM,OACP,EAAoBsS,KAAKwW,SAAlB5xB,IAAAA,OAAP,MAAa,IAAb,EACM6xB,EAAS,IAAI50B,MAAM2L,GAGzB,IAAKhK,EAAI,EAAGO,EAAOyJ,EAAOhK,EAAIO,IAAQP,EAEpCwD,EAAO2jB,EADPxmB,EAAQX,EAAIiH,GAEZgsB,EAAOjzB,GAAK,CACViP,EAAG/E,EAAOgpB,MAAMrwB,EAAiBW,EAAMpC,GAAMT,IAGjD,OAAOsyB,CACR,CC/VD,IAAME,GAAUr0B,OAAOq0B,SAAW,MAG5BC,GAAW,SAACvpB,EAAuB7J,GAAxB,OAA2DA,EAAI6J,EAAO1J,SAAW0J,EAAO7J,GAAGqzB,MAAQxpB,EAAO7J,EAA1G,EACXszB,GAAe,SAACzR,GAAD,MAAwC,MAAdA,EAAoB,IAAM,GAApD,EAEd,SAAS0R,GACdC,EACAC,EACAC,EACAroB,GAUA,IAAMwf,EAAW2I,EAAWH,KAAOI,EAAcD,EAC3C5xB,EAAU6xB,EACVE,EAAOD,EAAWL,KAAOI,EAAcC,EACvCE,EAAMjtB,GAAsB/E,EAASipB,GACrCgJ,EAAMltB,GAAsBgtB,EAAM/xB,GAEpCkyB,EAAMF,GAAOA,EAAMC,GACnBE,EAAMF,GAAOD,EAAMC,GAMjBG,EAAK3oB,GAHXyoB,EAAM3uB,MAAM2uB,GAAO,EAAIA,GAIjBG,EAAK5oB,GAHX0oB,EAAM5uB,MAAM4uB,GAAO,EAAIA,GAKvB,MAAO,CACLlJ,SAAU,CACR1oB,EAAGP,EAAQO,EAAI6xB,GAAML,EAAKxxB,EAAI0oB,EAAS1oB,GACvCE,EAAGT,EAAQS,EAAI2xB,GAAML,EAAKtxB,EAAIwoB,EAASxoB,IAEzCsxB,KAAM,CACJxxB,EAAGP,EAAQO,EAAI8xB,GAAMN,EAAKxxB,EAAI0oB,EAAS1oB,GACvCE,EAAGT,EAAQS,EAAI4xB,GAAMN,EAAKtxB,EAAIwoB,EAASxoB,IAG5C,CAKD,SAAS6xB,GAAerqB,EAAuBsqB,EAAkBC,GAK/D,IAJA,IAEIC,EAAgBC,EAAeC,EAAcC,EAA0BC,EAFrEC,EAAY7qB,EAAO1J,OAGrBw0B,EAAavB,GAASvpB,EAAQ,GACzB7J,EAAI,EAAGA,EAAI00B,EAAY,IAAK10B,EACnCy0B,EAAeE,EACfA,EAAavB,GAASvpB,EAAQ7J,EAAI,GAC7By0B,GAAiBE,IAIlBrwB,EAAa6vB,EAAOn0B,GAAI,EAAGmzB,IAC7BiB,EAAGp0B,GAAKo0B,EAAGp0B,EAAI,GAAK,GAItBq0B,EAASD,EAAGp0B,GAAKm0B,EAAOn0B,GACxBs0B,EAAQF,EAAGp0B,EAAI,GAAKm0B,EAAOn0B,IAC3Bw0B,EAAmB7wB,KAAKmB,IAAIuvB,EAAQ,GAAK1wB,KAAKmB,IAAIwvB,EAAO,KACjC,IAIxBC,EAAO,EAAI5wB,KAAK4C,KAAKiuB,GACrBJ,EAAGp0B,GAAKq0B,EAASE,EAAOJ,EAAOn0B,GAC/Bo0B,EAAGp0B,EAAI,GAAKs0B,EAAQC,EAAOJ,EAAOn0B,KAErC,CAED,SAAS40B,GAAgB/qB,EAAuBuqB,GAM9C,IANwF,IAGpF/U,EAAewV,EAAkCJ,EAHO5S,EAA4B,uDAAL,IAC7EiT,EAAYxB,GAAazR,GACzB6S,EAAY7qB,EAAO1J,OAErBw0B,EAAavB,GAASvpB,EAAQ,GAEzB7J,EAAI,EAAGA,EAAI00B,IAAa10B,EAI/B,GAHA60B,EAAcJ,EACdA,EAAeE,EACfA,EAAavB,GAASvpB,EAAQ7J,EAAI,GAC7By0B,EAAL,CAIA,IAAMM,EAASN,EAAa5S,GACtBmT,EAASP,EAAaK,GACxBD,IACFxV,GAAS0V,EAASF,EAAYhT,IAAc,EAC5C4S,EAAa,MAAD,OAAO5S,IAAekT,EAAS1V,EAC3CoV,EAAa,MAAD,OAAOK,IAAeE,EAAS3V,EAAQ+U,EAAGp0B,IAEpD20B,IACFtV,GAASsV,EAAW9S,GAAakT,GAAU,EAC3CN,EAAa,MAAD,OAAO5S,IAAekT,EAAS1V,EAC3CoV,EAAa,MAAD,OAAOK,IAAeE,EAAS3V,EAAQ+U,EAAGp0B,GAZvD,CAeJ,CA2CD,SAASi1B,GAAgBC,EAAY3vB,EAAaC,GAChD,OAAO7B,KAAK6B,IAAI7B,KAAK4B,IAAI2vB,EAAI1vB,GAAMD,EACpC,CA2BM,SAAS4vB,GACdtrB,EACAtI,EACAgpB,EACArG,EACArC,GAEA,IAAI7hB,EAAWO,EAAc+pB,EAAoB8K,EAOjD,GAJI7zB,EAAQ8zB,WACVxrB,EAASA,EAAO4nB,QAAO,SAACyD,GAAD,OAASA,EAAG7B,IAAZ,KAGc,aAAnC9xB,EAAQ+zB,wBA9EP,SAA6BzrB,GAAmD,IAOjF7J,EAAG60B,EAAkCJ,EAPgB5S,EAA4B,uDAAL,IAC1EiT,EAAYxB,GAAazR,GACzB6S,EAAY7qB,EAAO1J,OACnBg0B,EAAmB91B,MAAMq2B,GAAWxK,KAAK,GACzCkK,EAAe/1B,MAAMq2B,GAIvBC,EAAavB,GAASvpB,EAAQ,GAElC,IAAK7J,EAAI,EAAGA,EAAI00B,IAAa10B,EAI3B,GAHA60B,EAAcJ,EACdA,EAAeE,EACfA,EAAavB,GAASvpB,EAAQ7J,EAAI,GAC7By0B,EAAL,CAIA,GAAIE,EAAY,CACd,IAAMY,EAAaZ,EAAW9S,GAAa4S,EAAa5S,GAGxDsS,EAAOn0B,GAAoB,IAAfu1B,GAAoBZ,EAAWG,GAAaL,EAAaK,IAAcS,EAAa,CACjG,CACDnB,EAAGp0B,GAAM60B,EACJF,EACEtwB,EAAK8vB,EAAOn0B,EAAI,MAAQqE,EAAK8vB,EAAOn0B,IAAO,GACzCm0B,EAAOn0B,EAAI,GAAKm0B,EAAOn0B,IAAM,EAFpBm0B,EAAOn0B,EAAI,GADNm0B,EAAOn0B,EAR7B,CAcHk0B,GAAerqB,EAAQsqB,EAAQC,GAE/BQ,GAAgB/qB,EAAQuqB,EAAIvS,EAC7B,CA8CG2T,CAAoB3rB,EAAQgY,OACvB,CACL,IAAI4T,EAAOvR,EAAOra,EAAOA,EAAO1J,OAAS,GAAK0J,EAAO,GACrD,IAAK7J,EAAI,EAAGO,EAAOsJ,EAAO1J,OAAQH,EAAIO,IAAQP,EAE5Co1B,EAAgB7B,GACdkC,EAFFnL,EAAQzgB,EAAO7J,GAIb6J,EAAOlG,KAAK4B,IAAIvF,EAAI,EAAGO,GAAQ2jB,EAAO,EAAI,IAAM3jB,GAChDgB,EAAQm0B,SAEVpL,EAAMY,KAAOkK,EAAcvK,SAAS1oB,EACpCmoB,EAAMc,KAAOgK,EAAcvK,SAASxoB,EACpCioB,EAAMa,KAAOiK,EAAczB,KAAKxxB,EAChCmoB,EAAMe,KAAO+J,EAAczB,KAAKtxB,EAChCozB,EAAOnL,CAEV,CAEG/oB,EAAQo0B,iBA3Dd,SAAyB9rB,EAAuB0gB,GAC9C,IAAIvqB,EAAGO,EAAM+pB,EAAOsL,EAAQC,EACxBC,EAAazL,GAAexgB,EAAO,GAAI0gB,GAC3C,IAAKvqB,EAAI,EAAGO,EAAOsJ,EAAO1J,OAAQH,EAAIO,IAAQP,EAC5C61B,EAAaD,EACbA,EAASE,EACTA,EAAa91B,EAAIO,EAAO,GAAK8pB,GAAexgB,EAAO7J,EAAI,GAAIuqB,GACtDqL,IAGLtL,EAAQzgB,EAAO7J,GACX61B,IACFvL,EAAMY,KAAO+J,GAAgB3K,EAAMY,KAAMX,EAAKxF,KAAMwF,EAAK1F,OACzDyF,EAAMc,KAAO6J,GAAgB3K,EAAMc,KAAMb,EAAK3F,IAAK2F,EAAKzF,SAEtDgR,IACFxL,EAAMa,KAAO8J,GAAgB3K,EAAMa,KAAMZ,EAAKxF,KAAMwF,EAAK1F,OACzDyF,EAAMe,KAAO4J,GAAgB3K,EAAMe,KAAMd,EAAK3F,IAAK2F,EAAKzF,SAG7D,CAwCG6Q,CAAgB9rB,EAAQ0gB,EAE3B,CC1NM,SAASwL,KACd,MAAyB,qBAAX3sB,QAA8C,qBAAb4sB,QAChD,CAKM,SAASC,GAAeC,GAC7B,IAAI7D,EAAS6D,EAAQC,WAIrB,OAHI9D,GAAgC,wBAAtBA,EAAO5zB,aACnB4zB,EAAUA,EAAsB+D,MAE3B/D,CACR,CAOD,SAASgE,GAAcC,EAA6BnW,EAAmBoW,GACrE,IAAIC,EAYJ,MAX0B,kBAAfF,GACTE,EAAgBhb,SAAS8a,EAAY,KAEJ,IAA7BA,EAAWj1B,QAAQ,OAErBm1B,EAAiBA,EAAgB,IAAOrW,EAAKgW,WAAWI,KAG1DC,EAAgBF,EAGXE,CACR,CAED,IAAMC,GAAmB,SAACC,GAAD,OACvBA,EAAQC,cAAcC,YAAYH,iBAAiBC,EAAS,KADrC,EAOzB,IAAMG,GAAY,CAAC,MAAO,QAAS,SAAU,QAC7C,SAASC,GAAmBC,EAA6BzV,EAAe0V,GACtE,IAAMC,EAAS,CAAC,EAChBD,EAASA,EAAS,IAAMA,EAAS,GACjC,IAAK,IAAIh3B,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAMk3B,EAAML,GAAU72B,GACtBi3B,EAAOC,GAAO33B,WAAWw3B,EAAOzV,EAAQ,IAAM4V,EAAMF,KAAY,CACjE,CAGD,OAFAC,EAAOjR,MAAQiR,EAAOlS,KAAOkS,EAAOpS,MACpCoS,EAAOrO,OAASqO,EAAOrS,IAAMqS,EAAOnS,OAC7BmS,CACR,CA0CM,SAASE,GACdC,EACAhY,GAEA,GAAI,WAAYgY,EACd,OAAOA,EAGT,IAAO5O,EAAmCpJ,EAAnCoJ,OAAQH,EAA2BjJ,EAA3BiJ,wBACT/G,EAAQmV,GAAiBjO,GACzB6O,EAAgC,eAApB/V,EAAMgW,UAClBC,EAAWT,GAAmBxV,EAAO,WACrCkW,EAAUV,GAAmBxV,EAAO,SAAU,SACpD,EA7CF,SACEvb,EACAyiB,GAMA,IAIIrmB,EAAGE,EAJDo1B,EAAW1xB,EAAiB0xB,QAC5B52B,EAAU42B,GAAWA,EAAQt3B,OAASs3B,EAAQ,GAAK1xB,EAClD2xB,EAAoB72B,EAApB62B,QAASC,EAAW92B,EAAX82B,QACZC,GAAM,EAEV,GArBmB,SAACz1B,EAAWE,EAAWtB,GAAvB,OAClBoB,EAAI,GAAKE,EAAI,MAAQtB,IAAWA,EAAwB82B,WADtC,CAqBfC,CAAaJ,EAASC,EAAS5xB,EAAEhF,QACnCoB,EAAIu1B,EACJr1B,EAAIs1B,MACC,CACL,IAAM1N,EAAOzB,EAAOuP,wBACpB51B,EAAItB,EAAOm3B,QAAU/N,EAAKlF,KAC1B1iB,EAAIxB,EAAOo3B,QAAUhO,EAAKrF,IAC1BgT,GAAM,CACP,CACD,MAAO,CAACz1B,EAAAA,EAAGE,EAAAA,EAAGu1B,IAAAA,EACf,CAsBqBM,CAAkBd,EAAO5O,GAAtCrmB,EAAP,EAAOA,EAAGE,EAAV,EAAUA,EAAGu1B,EAAb,EAAaA,IACP7O,EAAUwO,EAASxS,MAAQ6S,GAAOJ,EAAQzS,MAC1CiE,EAAUuO,EAAS3S,KAAOgT,GAAOJ,EAAQ5S,KAE1CoB,EAAiB5G,EAAjB4G,MAAO4C,EAAUxJ,EAAVwJ,OAKZ,OAJIyO,IACFrR,GAASuR,EAASvR,MAAQwR,EAAQxR,MAClC4C,GAAU2O,EAAS3O,OAAS4O,EAAQ5O,QAE/B,CACLzmB,EAAGwB,KAAKiB,OAAOzC,EAAI4mB,GAAW/C,EAAQwC,EAAOxC,MAAQqC,GACrDhmB,EAAGsB,KAAKiB,OAAOvC,EAAI2mB,GAAWJ,EAASJ,EAAOI,OAASP,GAE1D,CA6BD,IAAM8P,GAAS,SAACj2B,GAAD,OAAeyB,KAAKiB,MAAU,GAAJ1C,GAAU,EAApC,EAGR,SAASk2B,GACd5P,EACA6P,EACAC,EACAC,GAEA,IAAMjX,EAAQmV,GAAiBjO,GACzBgQ,EAAU1B,GAAmBxV,EAAO,UACpC2K,EAAWoK,GAAc/U,EAAM2K,SAAUzD,EAAQ,gBAAkB1kB,EACnE20B,EAAYpC,GAAc/U,EAAMmX,UAAWjQ,EAAQ,iBAAmB1kB,EACtE40B,EAxCR,SAA0BlQ,EAA2BxC,EAAe4C,GAClE,IAAIqD,EAAkBwM,EAEtB,QAAcppB,IAAV2W,QAAkC3W,IAAXuZ,EAAsB,CAC/C,IAAM+P,EAAY1C,GAAezN,GACjC,GAAKmQ,EAGE,CACL,IAAM1O,EAAO0O,EAAUZ,wBACjBa,EAAiBnC,GAAiBkC,GAClCE,EAAkB/B,GAAmB8B,EAAgB,SAAU,SAC/DE,EAAmBhC,GAAmB8B,EAAgB,WAC5D5S,EAAQiE,EAAKjE,MAAQ8S,EAAiB9S,MAAQ6S,EAAgB7S,MAC9D4C,EAASqB,EAAKrB,OAASkQ,EAAiBlQ,OAASiQ,EAAgBjQ,OACjEqD,EAAWoK,GAAcuC,EAAe3M,SAAU0M,EAAW,eAC7DF,EAAYpC,GAAcuC,EAAeH,UAAWE,EAAW,eAChE,MAXC3S,EAAQwC,EAAOuQ,YACfnQ,EAASJ,EAAOwQ,YAWnB,CACD,MAAO,CACLhT,MAAAA,EACA4C,OAAAA,EACAqD,SAAUA,GAAYnoB,EACtB20B,UAAWA,GAAa30B,EAE3B,CAeuBm1B,CAAiBzQ,EAAQ6P,EAASC,GACnDtS,EAAiB0S,EAAjB1S,MAAO4C,EAAU8P,EAAV9P,OAEZ,GAAwB,gBAApBtH,EAAMgW,UAA6B,CACrC,IAAME,EAAUV,GAAmBxV,EAAO,SAAU,SAC9CiW,EAAWT,GAAmBxV,EAAO,WAC3C0E,GAASuR,EAASvR,MAAQwR,EAAQxR,MAClC4C,GAAU2O,EAAS3O,OAAS4O,EAAQ5O,MACrC,CAkBD,OAjBA5C,EAAQriB,KAAK6B,IAAI,EAAGwgB,EAAQwS,EAAQxS,OACpC4C,EAASjlB,KAAK6B,IAAI,EAAG+yB,EAAc50B,KAAKoB,MAAMihB,EAAQuS,GAAe3P,EAAS4P,EAAQ5P,QACtF5C,EAAQmS,GAAOx0B,KAAK4B,IAAIygB,EAAOiG,EAAUyM,EAAczM,WACvDrD,EAASuP,GAAOx0B,KAAK4B,IAAIqjB,EAAQ6P,EAAWC,EAAcD,YACtDzS,IAAU4C,IAGZA,EAASuP,GAAOnS,EAAQ,UAGS3W,IAAZgpB,QAAsChpB,IAAbipB,IAE1BC,GAAeG,EAAc9P,QAAUA,EAAS8P,EAAc9P,SAClFA,EAAS8P,EAAc9P,OACvB5C,EAAQmS,GAAOx0B,KAAKoB,MAAM6jB,EAAS2P,KAG9B,CAACvS,MAAAA,EAAO4C,OAAAA,EAChB,CAQM,SAASsQ,GACd9Z,EACA+Z,EACAC,GAEA,IAAMC,EAAaF,GAAc,EAC3BG,EAAe31B,KAAKoB,MAAMqa,EAAMwJ,OAASyQ,GACzCE,EAAc51B,KAAKoB,MAAMqa,EAAM4G,MAAQqT,GAE7Cja,EAAMwJ,OAAS0Q,EAAeD,EAC9Bja,EAAM4G,MAAQuT,EAAcF,EAE5B,IAAM7Q,EAASpJ,EAAMoJ,OAUrB,OALIA,EAAOlH,QAAU8X,IAAgB5Q,EAAOlH,MAAMsH,SAAWJ,EAAOlH,MAAM0E,SACxEwC,EAAOlH,MAAMsH,OAAbJ,GAAAA,OAAyBpJ,EAAMwJ,OAA/BJ,MACAA,EAAOlH,MAAM0E,MAAbwC,GAAAA,OAAwBpJ,EAAM4G,MAA9BwC,QAGEpJ,EAAMiJ,0BAA4BgR,GAC/B7Q,EAAOI,SAAW0Q,GAClB9Q,EAAOxC,QAAUuT,KACtBna,EAAMiJ,wBAA0BgR,EAChC7Q,EAAOI,OAAS0Q,EAChB9Q,EAAOxC,MAAQuT,EACfna,EAAMsC,IAAI8X,aAAaH,EAAY,EAAG,EAAGA,EAAY,EAAG,IACjD,EAGV,CAOM,IAAMI,GAAgC,WAC3C,IAAIC,GAAmB,EACvB,IACE,IAAMn4B,EAAU,CACVo4B,cAEF,OADAD,GAAmB,GACZ,CACR,GAGHtwB,OAAOwwB,iBAAiB,OAAQ,KAAMr4B,GACtC6H,OAAOywB,oBAAoB,OAAQ,KAAMt4B,EAG1C,CAFC,MAAOwE,GAER,CACD,OAAO2zB,CACR,CAhB4C,GA4BtC,SAASI,GACdpD,EACApxB,GAEA,IAAMnH,EAvOD,SAAkB47B,EAAiBz0B,GACxC,OAAOmxB,GAAiBsD,GAAIC,iBAAiB10B,EAC9C,CAqOe20B,CAASvD,EAASpxB,GAC1BqoB,EAAUxvB,GAASA,EAAMyvB,MAAK,qBACpC,OAAOD,GAAWA,EAAQ,QAAKte,CAChC,CC3RM,SAAS6qB,GAAa/pB,EAAWC,EAAW/E,EAAW0W,GAC5D,MAAO,CACL5f,EAAGgO,EAAGhO,EAAIkJ,GAAK+E,EAAGjO,EAAIgO,EAAGhO,GACzBE,EAAG8N,EAAG9N,EAAIgJ,GAAK+E,EAAG/N,EAAI8N,EAAG9N,GAE5B,CAKM,SAAS83B,GACdhqB,EACAC,EACA/E,EAAW0W,GAEX,MAAO,CACL5f,EAAGgO,EAAGhO,EAAIkJ,GAAK+E,EAAGjO,EAAIgO,EAAGhO,GACzBE,EAAY,WAAT0f,EAAoB1W,EAAI,GAAM8E,EAAG9N,EAAI+N,EAAG/N,EAC9B,UAAT0f,EAAmB1W,EAAI,EAAI8E,EAAG9N,EAAI+N,EAAG/N,EACnCgJ,EAAI,EAAI+E,EAAG/N,EAAI8N,EAAG9N,EAE3B,CAKM,SAAS+3B,GAAqBjqB,EAAiBC,EAAiB/E,EAAW0W,GAChF,IAAMsY,EAAM,CAACl4B,EAAGgO,EAAGgb,KAAM9oB,EAAG8N,EAAGkb,MACzBiP,EAAM,CAACn4B,EAAGiO,EAAG8a,KAAM7oB,EAAG+N,EAAGgb,MACzB/nB,EAAI62B,GAAa/pB,EAAIkqB,EAAKhvB,GAC1B/H,EAAI42B,GAAaG,EAAKC,EAAKjvB,GAC3BqD,EAAIwrB,GAAaI,EAAKlqB,EAAI/E,GAC1BqC,EAAIwsB,GAAa72B,EAAGC,EAAG+H,GACvBtF,EAAIm0B,GAAa52B,EAAGoL,EAAGrD,GAC7B,OAAO6uB,GAAaxsB,EAAG3H,EAAGsF,EAC3B,CCSM,SAASkvB,GAAcC,EAAcC,EAAezU,GACzD,OAAOwU,EA3CqB,SAASC,EAAezU,GACpD,MAAO,CACL7jB,EADK,SACHA,GACA,OAAOs4B,EAAQA,EAAQzU,EAAQ7jB,CAChC,EACDu4B,SAJK,SAIIhrB,GACPsW,EAAQtW,CACT,EACD4c,UAPK,SAOK7iB,GACR,MAAc,WAAVA,EACKA,EAEQ,UAAVA,EAAoB,OAAS,OACrC,EACDkxB,MAbK,SAaCx4B,EAAGhE,GACP,OAAOgE,EAAIhE,CACZ,EACDy8B,WAhBK,SAgBMz4B,EAAG04B,GACZ,OAAO14B,EAAI04B,CACZ,EAEJ,CAsBcC,CAAsBL,EAAOzU,GAnBnC,CACL7jB,EADK,SACHA,GACA,OAAOA,CACR,EACDu4B,SAJK,SAIIhrB,GACR,EACD4c,UANK,SAMK7iB,GACR,OAAOA,CACR,EACDkxB,MATK,SASCx4B,EAAGhE,GACP,OAAOgE,EAAIhE,CACZ,EACDy8B,WAZK,SAYMz4B,EAAG44B,GACZ,OAAO54B,CACR,EAMJ,CAEM,SAAS64B,GAAsBtZ,EAA+BuZ,GACnE,IAAI3Z,EAA4B4Z,EACd,QAAdD,GAAqC,QAAdA,IAEzBC,EAAW,EADX5Z,EAAQI,EAAI8G,OAAOlH,OAEX0Y,iBAAiB,aACvB1Y,EAAM6Z,oBAAoB,cAG5B7Z,EAAM8Z,YAAY,YAAaH,EAAW,aACzCvZ,EAAiD2Z,kBAAoBH,EAEzE,CAEM,SAASI,GAAqB5Z,EAA+BwZ,QACjD7rB,IAAb6rB,WACKxZ,EAAkD2Z,kBACzD3Z,EAAI8G,OAAOlH,MAAM8Z,YAAY,YAAaF,EAAS,GAAIA,EAAS,IAEnE,CChED,SAASK,GAAWj2B,GAClB,MAAiB,UAAbA,EACK,CACLk2B,QAASx0B,GACTy0B,QAAS30B,GACT40B,UAAW30B,IAGR,CACLy0B,QAAS9zB,GACT+zB,QAAS,SAACp4B,EAAGC,GAAJ,OAAUD,EAAIC,CAAd,EACTo4B,UAAWv5B,SAAAA,GAAAA,OAAKA,CAALA,EAEd,CAED,SAASw5B,GAAT,GAA4D,IAAjC10B,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,IAAK8C,EAAqB,EAArBA,MACrC,MAAO,CACL/C,MAAOA,EAAQ+C,EACf9C,IAAKA,EAAM8C,EACXka,KAJwD,EAAdA,OAI3Bhd,EAAMD,EAAQ,GAAK+C,IAAU,EAC5CsX,MALwD,EAARA,MAOnD,CA4CM,SAASsa,GAAcC,EAAShyB,EAAQsb,GAC7C,IAAKA,EACH,MAAO,CAAC0W,GAkBV,IAfA,IAQI19B,EAAOmsB,EAAOwR,EARXx2B,EAA8C6f,EAA9C7f,SAAiBy2B,EAA6B5W,EAApCle,MAAwB+0B,EAAY7W,EAAjBje,IAC9B8C,EAAQH,EAAO1J,OACrB,EAAsCo7B,GAAWj2B,GAA1Cm2B,EAAP,EAAOA,QAASD,EAAhB,EAAgBA,QAASE,EAAzB,EAAyBA,UACzB,EAlDF,SAAoBG,EAAShyB,EAAQsb,GACnC,IAKInlB,EAAGO,EALA+E,EAA8C6f,EAA9C7f,SAAiBy2B,EAA6B5W,EAApCle,MAAwB+0B,EAAY7W,EAAjBje,IACpC,EAA6Bq0B,GAAWj2B,GAAjCk2B,EAAP,EAAOA,QAASE,EAAhB,EAAgBA,UACV1xB,EAAQH,EAAO1J,OAEhB8G,EAAoB40B,EAApB50B,MAAOC,EAAa20B,EAAb30B,IAAKgd,EAAQ2X,EAAR3X,KAGjB,GAAIA,EAAM,CAGR,IAFAjd,GAAS+C,EACT9C,GAAO8C,EACFhK,EAAI,EAAGO,EAAOyJ,EAAOhK,EAAIO,GACvBi7B,EAAQE,EAAU7xB,EAAO5C,EAAQ+C,GAAO1E,IAAYy2B,EAAYC,KADjCh8B,EAIpCiH,IACAC,IAEFD,GAAS+C,EACT9C,GAAO8C,CACR,CAKD,OAHI9C,EAAMD,IACRC,GAAO8C,GAEF,CAAC/C,MAAAA,EAAOC,IAAAA,EAAKgd,KAAAA,EAAM5C,MAAOua,EAAQva,MAC1C,CAwBmC2a,CAAWJ,EAAShyB,EAAQsb,GAAvDle,EAAP,EAAOA,MAAOC,EAAd,EAAcA,IAAKgd,EAAnB,EAAmBA,KAAM5C,EAAzB,EAAyBA,MAEnB2V,EAAS,GACXiF,GAAS,EACTC,EAAW,KAKTC,EAAc,kBAAMF,GAFEV,EAAQO,EAAYD,EAAW39B,IAA6C,IAAnCs9B,EAAQM,EAAYD,EAErE,EACdO,EAAa,kBAAOH,GAF6B,IAA7BT,EAAQO,EAAU79B,IAAgBq9B,EAAQQ,EAAUF,EAAW39B,EAEtE,EAEV6B,EAAIiH,EAAOwuB,EAAOxuB,EAAOjH,GAAKkH,IAAOlH,GAC5CsqB,EAAQzgB,EAAO7J,EAAIgK,IAETqpB,OAIVl1B,EAAQu9B,EAAUpR,EAAMhlB,OAEVw2B,IAIdI,EAASV,EAAQr9B,EAAO49B,EAAYC,GAEnB,OAAbG,GAAqBC,MACvBD,EAA0C,IAA/BV,EAAQt9B,EAAO49B,GAAoB/7B,EAAIy1B,GAGnC,OAAb0G,GAAqBE,MACvBpF,EAAOv0B,KAAKi5B,GAAiB,CAAC10B,MAAOk1B,EAAUj1B,IAAKlH,EAAGkkB,KAAAA,EAAMla,MAAAA,EAAOsX,MAAAA,KACpE6a,EAAW,MAEb1G,EAAOz1B,EACP87B,EAAY39B,GAOd,OAJiB,OAAbg+B,GACFlF,EAAOv0B,KAAKi5B,GAAiB,CAAC10B,MAAOk1B,EAAUj1B,IAAAA,EAAKgd,KAAAA,EAAMla,MAAAA,EAAOsX,MAAAA,KAG5D2V,CACR,CAYM,SAASqF,GAAe/Q,EAAMpG,GAInC,IAHA,IAAM8R,EAAS,GACTsF,EAAWhR,EAAKgR,SAEbv8B,EAAI,EAAGA,EAAIu8B,EAASp8B,OAAQH,IAAK,CACxC,IAAMw8B,EAAMZ,GAAcW,EAASv8B,GAAIurB,EAAK1hB,OAAQsb,GAChDqX,EAAIr8B,QACN82B,EAAOv0B,KAAPu0B,MAAAA,GAAM,OAASuF,GAElB,CACD,OAAOvF,CACR,CAiHD,SAASwF,GAAclR,EAAMgR,EAAU1yB,EAAQ6yB,GAC7C,OAAKA,GAAmBA,EAAe5L,YAAejnB,EAaxD,SAAyB0hB,EAAMgR,EAAU1yB,EAAQ6yB,GAC/C,IAAMC,EAAepR,EAAKqR,OAAOnU,aAC3BoU,EAAYC,GAAUvR,EAAKhqB,SACXb,EAAqC6qB,EAApDwR,cAAuC1H,EAAa9J,EAAvBhqB,QAAU8zB,SACxCrrB,EAAQH,EAAO1J,OACf82B,EAAS,GACX+F,EAAYH,EACZ51B,EAAQs1B,EAAS,GAAGt1B,MACpBjH,EAAIiH,EAER,SAASg2B,EAAS71B,EAAGrB,EAAG8H,EAAGqvB,GACzB,IAAMC,EAAM9H,GAAY,EAAI,EAC5B,GAAIjuB,IAAMrB,EAAV,CAKA,IADAqB,GAAK4C,EACEH,EAAOzC,EAAI4C,GAAOqpB,MACvBjsB,GAAK+1B,EAEP,KAAOtzB,EAAO9D,EAAIiE,GAAOqpB,MACvBttB,GAAKo3B,EAEH/1B,EAAI4C,IAAUjE,EAAIiE,IACpBitB,EAAOv0B,KAAK,CAACuE,MAAOG,EAAI4C,EAAO9C,IAAKnB,EAAIiE,EAAOka,KAAMrW,EAAGyT,MAAO4b,IAC/DF,EAAYE,EACZj2B,EAAQlB,EAAIiE,EAZb,CAcF,CA5B8D,gBA8BzCuyB,GA9ByC,IA8B/D,IAAK,EAAL,qBAAgC,KAArBV,EAAqB,QAC9B50B,EAAQouB,EAAWpuB,EAAQ40B,EAAQ50B,MACnC,IAAIwuB,EAAO5rB,EAAO5C,EAAQ+C,GACtBsX,OAAK,EACT,IAAKthB,EAAIiH,EAAQ,EAAGjH,GAAK67B,EAAQ30B,IAAKlH,IAAK,CACzC,IAAMk1B,EAAKrrB,EAAO7J,EAAIgK,GASlBozB,GARJ9b,EAAQwb,GAAUJ,EAAe5L,WAAWhC,GAAc6N,EAAc,CACtEr+B,KAAM,UACN++B,GAAI5H,EACJtlB,GAAI+kB,EACJoI,aAAct9B,EAAI,GAAKgK,EACvBuzB,YAAav9B,EAAIgK,EACjBtJ,aAAAA,MAEsBs8B,IACtBC,EAASh2B,EAAOjH,EAAI,EAAG67B,EAAQ3X,KAAM8Y,GAEvCvH,EAAOP,EACP8H,EAAY1b,CACb,CACGra,EAAQjH,EAAI,GACdi9B,EAASh2B,EAAOjH,EAAI,EAAG67B,EAAQ3X,KAAM8Y,EAExC,CArD8D,+BAuD/D,OAAO/F,CACR,CAlEQuG,CAAgBjS,EAAMgR,EAAU1yB,EAAQ6yB,GAFtCH,CAGV,CAmED,SAASO,GAAUv7B,GACjB,MAAO,CACLof,gBAAiBpf,EAAQof,gBACzB8c,eAAgBl8B,EAAQk8B,eACxBC,WAAYn8B,EAAQm8B,WACpBC,iBAAkBp8B,EAAQo8B,iBAC1BC,gBAAiBr8B,EAAQq8B,gBACzBzT,YAAa5oB,EAAQ4oB,YACrBvJ,YAAarf,EAAQqf,YAExB,CAED,SAASwc,GAAa9b,EAAO0b,GAC3B,OAAOA,GAAa1e,KAAKC,UAAU+C,KAAWhD,KAAKC,UAAUye,EAC9D,KClVYa,GAAAA,WACXtd,SAAAA,KAAc,eACZ/D,KAAKshB,SAAW,KAChBthB,KAAKuhB,QAAU,IAAI9f,IACnBzB,KAAKwhB,UAAW,EAChBxhB,KAAKyhB,eAAY5uB,CAClB,uCAKD6uB,SAAQ9e,EAAO+e,EAAOC,EAAM9/B,GAC1B,IAAM+/B,EAAYF,EAAMz1B,UAAUpK,GAC5BggC,EAAWH,EAAMna,SAEvBqa,EAAUz1B,SAAQnJ,SAAAA,GAAAA,OAAMA,EAAG,CACzB2f,MAAAA,EACAmf,QAASJ,EAAMI,QACfD,SAAAA,EACAE,YAAa76B,KAAK4B,IAAI64B,EAAOD,EAAMl3B,MAAOq3B,IAJ1B7+B,GAMnB,yBAKDg/B,WAAW,WACLjiB,KAAKshB,WAGTthB,KAAKwhB,UAAW,EAEhBxhB,KAAKshB,SAAW30B,GAAiBzK,KAAK0K,QAAQ,WAC5C,EAAKs1B,UACL,EAAKZ,SAAW,KAEZ,EAAKE,UACP,EAAKS,UAER,IACF,wBAKDC,WAA2B,WAAnBN,EAAmB,uDAAZO,KAAKC,MACdC,EAAY,EAEhBriB,KAAKuhB,QAAQn1B,SAAQ,SAACu1B,EAAO/e,GAC3B,GAAK+e,EAAMW,SAAYX,EAAMr1B,MAAM3I,OAAnC,CAQA,IALA,IAGIqD,EAHEsF,EAAQq1B,EAAMr1B,MAChB9I,EAAI8I,EAAM3I,OAAS,EACnB4+B,GAAO,EAGJ/+B,GAAK,IAAKA,GACfwD,EAAOsF,EAAM9I,IAEJg/B,SACHx7B,EAAKy7B,OAASd,EAAMna,WAGtBma,EAAMna,SAAWxgB,EAAKy7B,QAExBz7B,EAAK07B,KAAKd,GACVW,GAAO,IAIPj2B,EAAM9I,GAAK8I,EAAMA,EAAM3I,OAAS,GAChC2I,EAAMq2B,OAINJ,IACF3f,EAAM2f,OACN,EAAKb,QAAQ9e,EAAO+e,EAAOC,EAAM,aAG9Bt1B,EAAM3I,SACTg+B,EAAMW,SAAU,EAChB,EAAKZ,QAAQ9e,EAAO+e,EAAOC,EAAM,YACjCD,EAAMI,SAAU,GAGlBM,GAAa/1B,EAAM3I,MApClB,CAqCF,IAEDqc,KAAKyhB,UAAYG,EAEC,IAAdS,IACFriB,KAAKwhB,UAAW,EAEnB,0BAKDoB,SAAUhgB,GACR,IAAMigB,EAAS7iB,KAAKuhB,QAChBI,EAAQkB,EAAO5gB,IAAIW,GAavB,OAZK+e,IACHA,EAAQ,CACNW,SAAS,EACTP,SAAS,EACTz1B,MAAO,GACPJ,UAAW,CACT42B,SAAU,GACVC,SAAU,KAGdF,EAAOt2B,IAAIqW,EAAO+e,IAEbA,CACR,uBAODqB,SAAOpgB,EAAOgY,EAAOqI,GACnBjjB,KAAK4iB,UAAUhgB,GAAO1W,UAAU0uB,GAAO10B,KAAK+8B,EAC7C,oBAODx2B,SAAImW,EAAOtW,GAAO,MACXA,GAAUA,EAAM3I,SAGrB,EAAAqc,KAAK4iB,UAAUhgB,GAAOtW,OAAMpG,KAA5B,gBAAoCoG,GACrC,oBAMDrF,SAAI2b,GACF,OAAO5C,KAAK4iB,UAAUhgB,GAAOtW,MAAM3I,OAAS,CAC7C,sBAMD8G,SAAMmY,GACJ,IAAM+e,EAAQ3hB,KAAKuhB,QAAQtf,IAAIW,GAC1B+e,IAGLA,EAAMW,SAAU,EAChBX,EAAMl3B,MAAQ03B,KAAKC,MACnBT,EAAMna,SAAWma,EAAMr1B,MAAM42B,QAAO,SAACC,EAAKC,GAAN,OAAcj8B,KAAK6B,IAAIm6B,EAAKC,EAAIC,UAAhC,GAA4C,GAChFrjB,KAAKiiB,WACN,wBAEDK,SAAQ1f,GACN,IAAK5C,KAAKwhB,SACR,OAAO,EAET,IAAMG,EAAQ3hB,KAAKuhB,QAAQtf,IAAIW,GAC/B,SAAK+e,GAAUA,EAAMW,SAAYX,EAAMr1B,MAAM3I,OAI9C,qBAMD2/B,SAAK1gB,GACH,IAAM+e,EAAQ3hB,KAAKuhB,QAAQtf,IAAIW,GAC/B,GAAK+e,GAAUA,EAAMr1B,MAAM3I,OAA3B,CAMA,IAHA,IAAM2I,EAAQq1B,EAAMr1B,MAChB9I,EAAI8I,EAAM3I,OAAS,EAEhBH,GAAK,IAAKA,EACf8I,EAAM9I,GAAG+/B,SAEX5B,EAAMr1B,MAAQ,GACd0T,KAAK0hB,QAAQ9e,EAAO+e,EAAOQ,KAAKC,MAAO,WARtC,CASF,uBAMDoB,SAAO5gB,GACL,OAAO5C,KAAKuhB,QAAQ5M,OAAO/R,EAC5B,OAtMUye,GA0Mb,GAA+B,IAAIA,GCjN7BniB,GAAc,cACdukB,GAAgB,CACpBC,QADoB,SACZh3B,EAAM2S,EAAIskB,GAChB,OAAOA,EAAS,GAAMtkB,EAAK3S,CAC5B,EAMD0T,MAToB,SASd1T,EAAM2S,EAAIskB,GACd,IAAMC,EAAKC,GAAan3B,GAAQwS,IAC1BqB,EAAKqjB,EAAGE,OAASD,GAAaxkB,GAAMH,IAC1C,OAAOqB,GAAMA,EAAGujB,MACZvjB,EAAGwjB,IAAIH,EAAID,GAAQnxB,YACnB6M,CACL,EACD2kB,OAhBoB,SAgBbt3B,EAAM2S,EAAIskB,GACf,OAAOj3B,GAAQ2S,EAAK3S,GAAQi3B,CAC7B,GAGkBM,GAAAA,WACnBlgB,SAAAA,EAAYmgB,EAAK3/B,EAAQktB,EAAMpS,IAAI,eACjC,IAAM8kB,EAAe5/B,EAAOktB,GAE5BpS,EAAK6S,GAAQ,CAACgS,EAAI7kB,GAAIA,EAAI8kB,EAAcD,EAAIx3B,OAC5C,IAAMA,EAAOwlB,GAAQ,CAACgS,EAAIx3B,KAAMy3B,EAAc9kB,IAE9CW,KAAKwiB,SAAU,EACfxiB,KAAKokB,IAAMF,EAAIjhC,IAAMwgC,GAAcS,EAAIpiC,aAAe4K,GACtDsT,KAAKqkB,QAAUp1B,GAAQi1B,EAAIzc,SAAWxY,GAAAA,OACtC+Q,KAAKskB,OAASn9B,KAAKoB,MAAM45B,KAAKC,OAAS8B,EAAI3c,OAAS,IACpDvH,KAAKqjB,UAAYrjB,KAAKyiB,OAASt7B,KAAKoB,MAAM27B,EAAI1c,UAC9CxH,KAAKukB,QAAUL,EAAIxc,KACnB1H,KAAKwkB,QAAUjgC,EACfyb,KAAKykB,MAAQhT,EACbzR,KAAK0kB,MAAQh4B,EACbsT,KAAK2kB,IAAMtlB,EACXW,KAAK4kB,eAAY/xB,CAClB,sCAED+U,WACE,OAAO5H,KAAKwiB,OACb,uBAEDqC,SAAOX,EAAK7kB,EAAIuiB,GACd,GAAI5hB,KAAKwiB,QAAS,CAChBxiB,KAAK0hB,SAAQ,GAEb,IAAMyC,EAAenkB,KAAKwkB,QAAQxkB,KAAKykB,OACjCK,EAAUlD,EAAO5hB,KAAKskB,OACtBjhB,EAASrD,KAAKqjB,UAAYyB,EAChC9kB,KAAKskB,OAAS1C,EACd5hB,KAAKqjB,UAAYl8B,KAAKoB,MAAMpB,KAAK6B,IAAIqa,EAAQ6gB,EAAI1c,WACjDxH,KAAKyiB,QAAUqC,EACf9kB,KAAKukB,QAAUL,EAAIxc,KACnB1H,KAAK2kB,IAAMzS,GAAQ,CAACgS,EAAI7kB,GAAIA,EAAI8kB,EAAcD,EAAIx3B,OAClDsT,KAAK0kB,MAAQxS,GAAQ,CAACgS,EAAIx3B,KAAMy3B,EAAc9kB,GAC/C,CACF,uBAEDkkB,WACMvjB,KAAKwiB,UAEPxiB,KAAK0iB,KAAKP,KAAKC,OACfpiB,KAAKwiB,SAAU,EACfxiB,KAAK0hB,SAAQ,GAEhB,qBAEDgB,SAAKd,GACH,IAMI+B,EANEmB,EAAUlD,EAAO5hB,KAAKskB,OACtB9c,EAAWxH,KAAKqjB,UAChB5R,EAAOzR,KAAKykB,MACZ/3B,EAAOsT,KAAK0kB,MACZhd,EAAO1H,KAAKukB,MACZllB,EAAKW,KAAK2kB,IAKhB,GAFA3kB,KAAKwiB,QAAU91B,IAAS2S,IAAOqI,GAASod,EAAUtd,IAE7CxH,KAAKwiB,QAGR,OAFAxiB,KAAKwkB,QAAQ/S,GAAQpS,OACrBW,KAAK0hB,SAAQ,GAIXoD,EAAU,EACZ9kB,KAAKwkB,QAAQ/S,GAAQ/kB,GAIvBi3B,EAASmB,EAAWtd,EAAY,EAChCmc,EAASjc,GAAQic,EAAS,EAAI,EAAIA,EAASA,EAC3CA,EAAS3jB,KAAKqkB,QAAQl9B,KAAK4B,IAAI,EAAG5B,KAAK6B,IAAI,EAAG26B,KAE9C3jB,KAAKwkB,QAAQ/S,GAAQzR,KAAKokB,IAAI13B,EAAM2S,EAAIskB,GACzC,qBAEDoB,WACE,IAAMC,EAAWhlB,KAAK4kB,YAAc5kB,KAAK4kB,UAAY,IACrD,OAAO,IAAIK,SAAQ,SAACC,EAAKC,GACvBH,EAAS9+B,KAAK,CAACg/B,IAAAA,EAAKC,IAAAA,GACrB,GACF,wBAEDzD,SAAQ0D,GAGN,IAFA,IAAMC,EAASD,EAAW,MAAQ,MAC5BJ,EAAWhlB,KAAK4kB,WAAa,GAC1BphC,EAAI,EAAGA,EAAIwhC,EAASrhC,OAAQH,IACnCwhC,EAASxhC,GAAG6hC,IAEf,OA3FkBpB,GCrBAqB,GAAAA,WACnBvhB,SAAAA,EAAYnB,EAAO2iB,IAAQ,eACzBvlB,KAAKogB,OAASxd,EACd5C,KAAKwlB,YAAc,IAAI/jB,IACvBzB,KAAKylB,UAAUF,EAChB,yCAEDE,SAAUF,GACR,GAAKnjC,EAASmjC,GAAd,CAIA,IAAMG,EAAmB3jC,OAAO2B,KAAK4jB,GAASpD,WACxCyhB,EAAgB3lB,KAAKwlB,YAE3BzjC,OAAO6jC,oBAAoBL,GAAQn5B,SAAQxH,SAAAA,GACzC,IAAMs/B,EAAMqB,EAAO3gC,GACnB,GAAKxC,EAAS8hC,GAAd,CAGA,IALgD,EAK1CkB,EAAW,CAAC,EAL8B,UAM3BM,GAN2B,IAMhD,IAAK,EAAL,qBAAuC,KAA5BG,EAA4B,QACrCT,EAASS,GAAU3B,EAAI2B,EACxB,CAR+C,gCAU/CjkC,EAAQsiC,EAAIvc,aAAeuc,EAAIvc,YAAc,CAAC/iB,IAAMwH,SAAQ,SAACqlB,GACxDA,IAAS7sB,GAAQ+gC,EAAc1+B,IAAIwqB,IACrCkU,EAAcp5B,IAAIklB,EAAM2T,EAE3B,GAVA,CAWF,GApBA,CAqBF,gCAMDU,SAAgBvhC,EAAQge,GACtB,IAAMwjB,EAAaxjB,EAAOxd,QACpBA,EAsGV,SAA8BR,EAAQwhC,GACpC,IAAKA,EACH,OAEF,IAAIhhC,EAAUR,EAAOQ,QACrB,IAAKA,EAEH,YADAR,EAAOQ,QAAUghC,GAGfhhC,EAAQihC,UAGVzhC,EAAOQ,QAAUA,EAAUhD,OAAO4M,OAAO,CAAC,EAAG5J,EAAS,CAACihC,SAAS,EAAOC,YAAa,CAAC,KAEvF,OAAOlhC,CACR,CArHmBmhC,CAAqB3hC,EAAQwhC,GAC7C,IAAKhhC,EACH,MAAO,GAGT,IAAMgjB,EAAa/H,KAAKmmB,kBAAkBphC,EAASghC,GAYnD,OAXIA,EAAWC,SAmFnB,SAAkBje,EAAYJ,GAG5B,IAFA,IAAM2a,EAAU,GACV5+B,EAAO3B,OAAO2B,KAAKikB,GAChBnkB,EAAI,EAAGA,EAAIE,EAAKC,OAAQH,IAAK,CACpC,IAAM4iC,EAAOre,EAAWrkB,EAAKF,IACzB4iC,GAAQA,EAAKxe,UACf0a,EAAQp8B,KAAKkgC,EAAKrB,OAErB,CAED,OAAOE,QAAQoB,IAAI/D,EACpB,CA1FKgE,CAAS/hC,EAAOQ,QAAQkhC,YAAaF,GAAYQ,MAAK,WACpDhiC,EAAOQ,QAAUghC,CAClB,IAAE,WAEF,IAGIhe,CACR,kCAKDoe,SAAkB5hC,EAAQge,GACxB,IAKI/e,EALEmiC,EAAgB3lB,KAAKwlB,YACrBzd,EAAa,GACbua,EAAU/9B,EAAO0hC,cAAgB1hC,EAAO0hC,YAAc,CAAC,GACvD3U,EAAQvvB,OAAO2B,KAAK6e,GACpBqf,EAAOO,KAAKC,MAGlB,IAAK5+B,EAAI8tB,EAAM3tB,OAAS,EAAGH,GAAK,IAAKA,EAAG,CACtC,IAAMiuB,EAAOH,EAAM9tB,GACnB,GAAuB,MAAnBiuB,EAAKjrB,OAAO,GAIhB,GAAa,YAATirB,EAAJ,CAIA,IAAM9vB,EAAQ4gB,EAAOkP,GACjBvN,EAAYoe,EAAQ7Q,GAClByS,EAAMyB,EAAc1jB,IAAIwP,GAE9B,GAAIvN,EAAW,CACb,GAAIggB,GAAOhgB,EAAU0D,SAAU,CAE7B1D,EAAU2gB,OAAOX,EAAKviC,EAAOigC,GAC7B,QACD,CACC1d,EAAUqf,QAEb,CACIW,GAAQA,EAAI1c,UAMjB8a,EAAQ7Q,GAAQvN,EAAY,IAAI+f,GAAUC,EAAK3/B,EAAQktB,EAAM9vB,GAC7DomB,EAAW7hB,KAAKge,IALd3f,EAAOktB,GAAQ9vB,CAhBhB,MAFComB,EAAW7hB,KAAX6hB,MAAAA,GAAU,OAAS/H,KAAK8lB,gBAAgBvhC,EAAQge,IAwBnD,CACD,OAAOwF,CACR,uBASD8c,SAAOtgC,EAAQge,GACb,GAA8B,IAA1BvC,KAAKwlB,YAAYz+B,KAArB,CAMA,IAAMghB,EAAa/H,KAAKmmB,kBAAkB5hC,EAAQge,GAElD,OAAIwF,EAAWpkB,QACb6iC,GAAS/5B,IAAIuT,KAAKogB,OAAQrY,IACnB,QAFT,CAJC,CAFChmB,OAAO4M,OAAOpK,EAAQge,EAUzB,OA7HkB+iB,GCMrB,SAASmB,GAAUzgB,EAAO0gB,GACxB,IAAM1X,EAAOhJ,GAASA,EAAMjhB,SAAW,CAAC,EAClCxB,EAAUyrB,EAAKzrB,QACfwF,OAAmB8J,IAAbmc,EAAKjmB,IAAoB29B,EAAkB,EACjD19B,OAAmB6J,IAAbmc,EAAKhmB,IAAoB09B,EAAkB,EACvD,MAAO,CACLj8B,MAAOlH,EAAUyF,EAAMD,EACvB2B,IAAKnH,EAAUwF,EAAMC,EAExB,CAsCD,SAAS29B,GAAwB/jB,EAAOgkB,GACtC,IAEIpjC,EAAGO,EAFDL,EAAO,GACPmjC,EAAWjkB,EAAMkkB,uBAAuBF,GAG9C,IAAKpjC,EAAI,EAAGO,EAAO8iC,EAASljC,OAAQH,EAAIO,IAAQP,EAC9CE,EAAKwC,KAAK2gC,EAASrjC,GAAGW,OAExB,OAAOT,CACR,CAED,SAASqjC,GAAWC,EAAOrlC,EAAOslC,GAAuB,IAGnDzjC,EAAGO,EAAMG,EAAcgjC,EAHcniC,EAAc,uDAAJ,CAAC,EAC9CrB,EAAOsjC,EAAMtjC,KACbyjC,EAA8B,WAAjBpiC,EAAQwgB,KAG3B,GAAc,OAAV5jB,EAAJ,CAIA,IAAK6B,EAAI,EAAGO,EAAOL,EAAKC,OAAQH,EAAIO,IAAQP,EAAG,CAE7C,IADAU,GAAgBR,EAAKF,MACAyjC,EAAS,CAC5B,GAAIliC,EAAQshC,IACV,SAEF,KACD,CAEG9jC,EADJ2kC,EAAaF,EAAMzkB,OAAOre,MACGijC,GAAyB,IAAVxlC,GAAekG,EAAKlG,KAAWkG,EAAKq/B,MAC9EvlC,GAASulC,EAEZ,CACD,OAAOvlC,CAfN,CAgBF,CAgBD,SAASylC,GAAUphB,EAAO5Y,GACxB,IAAMi6B,EAAUrhB,GAASA,EAAMjhB,QAAQsiC,QACvC,OAAOA,QAAwBx0B,IAAZw0B,QAAwCx0B,IAAfzF,EAAK45B,KAClD,CAcD,SAASM,GAAiBC,EAAQC,EAAUC,GAC1C,IAAMC,EAAWH,EAAOC,KAAcD,EAAOC,GAAY,CAAC,GAC1D,OAAOE,EAASD,KAAgBC,EAASD,GAAc,CAAC,EACzD,CAED,SAASE,GAAoBX,EAAOY,EAAQC,EAAU/lC,GAAM,gBACvC8lC,EAAOE,wBAAwBhmC,GAAMyB,WADE,IAC1D,IAAK,EAAL,qBAAmE,KAAxD6J,EAAwD,QAC3DzL,EAAQqlC,EAAM55B,EAAKjJ,OACzB,GAAI0jC,GAAalmC,EAAQ,IAAQkmC,GAAYlmC,EAAQ,EACnD,OAAOyL,EAAKjJ,KAEf,CANyD,+BAQ1D,OAAO,IACR,CAED,SAAS4jC,GAAaC,EAAYvR,GAUhC,IATA,IAOIuQ,EAPGpkB,EAA4BolB,EAA5BplB,MAAoBxV,EAAQ46B,EAArBC,YACRV,EAAS3kB,EAAMslB,UAAYtlB,EAAMslB,QAAU,CAAC,GAC3Cx6B,EAAuCN,EAAvCM,OAAQk6B,EAA+Bx6B,EAA/Bw6B,OAAe1jC,EAAgBkJ,EAAvBjJ,MACjBgkC,EAAQz6B,EAAOE,KACfw6B,EAAQR,EAAOh6B,KACfhJ,EAlCR,SAAqByjC,EAAYC,EAAYl7B,GAC3C,MAAO,GAAP,OAAUi7B,EAAW5mC,GAArB,YAA2B6mC,EAAW7mC,GAAtC,YAA4C2L,EAAK45B,OAAS55B,EAAKtL,KAChE,CAgCaymC,CAAY76B,EAAQk6B,EAAQx6B,GAClCrJ,EAAO0yB,EAAO9yB,OAGXH,EAAI,EAAGA,EAAIO,IAAQP,EAAG,CAC7B,IAAMwD,EAAOyvB,EAAOjzB,GACJW,EAAyB6C,EAAjCmhC,GAAwBxmC,EAASqF,EAAjBohC,IAExBpB,GADmBhgC,EAAKkhC,UAAYlhC,EAAKkhC,QAAU,CAAC,IACjCE,GAASd,GAAiBC,EAAQ3iC,EAAKT,IACpDD,GAAgBvC,EAEtBqlC,EAAMwB,KAAOb,GAAoBX,EAAOY,GAAQ,EAAMx6B,EAAKtL,MAC3DklC,EAAMyB,QAAUd,GAAoBX,EAAOY,GAAQ,EAAOx6B,EAAKtL,KAChE,CACF,CAED,SAAS4mC,GAAgB9lB,EAAOhV,GAC9B,IAAMqY,EAASrD,EAAMqD,OACrB,OAAOlkB,OAAO2B,KAAKuiB,GAAQgP,QAAOrwB,SAAAA,GAAAA,OAAOqhB,EAAOrhB,GAAKgJ,OAASA,CAA5BhJ,IAAkC+jC,OACrE,CA4BD,SAASC,GAAYx7B,EAAMd,GAEzB,IAAMpI,EAAekJ,EAAK46B,WAAW7jC,MAC/ByJ,EAAOR,EAAKw6B,QAAUx6B,EAAKw6B,OAAOh6B,KACxC,GAAKA,EAAL,CAIAtB,EAAQA,GAASc,EAAKO,QARU,gBASXrB,GATW,IAShC,IAAK,EAAL,qBAA4B,KACpBi7B,EADoB,QACJW,QACtB,IAAKX,QAA2B10B,IAAjB00B,EAAO35B,SAAsDiF,IAA/B00B,EAAO35B,GAAM1J,GACxD,cAEKqjC,EAAO35B,GAAM1J,EACrB,CAf+B,+BAM/B,CAUF,CAED,IAAM2kC,GAAqB,SAACtjB,GAAD,MAAmB,UAATA,GAA6B,SAATA,CAA9B,EACrBujB,GAAmB,SAACC,EAAQC,GAAT,OAAoBA,EAASD,EAAShnC,OAAO4M,OAAO,CAAC,EAAGo6B,EAAxD,EAIJE,GAAAA,WAqBnBllB,SAAAA,EAAYnB,EAAO1e,IAAc,eAC/B8b,KAAK4C,MAAQA,EACb5C,KAAKmJ,KAAOvG,EAAMsC,IAClBlF,KAAK7b,MAAQD,EACb8b,KAAKkpB,gBAAkB,CAAC,EACxBlpB,KAAKioB,YAAcjoB,KAAKmpB,UACxBnpB,KAAKopB,MAAQppB,KAAKioB,YAAYnmC,KAC9Bke,KAAKjb,aAAU8N,EAEfmN,KAAKwW,UAAW,EAChBxW,KAAKqpB,WAAQx2B,EACbmN,KAAKspB,iBAAcz2B,EACnBmN,KAAKupB,oBAAiB12B,EACtBmN,KAAKwpB,gBAAa32B,EAClBmN,KAAKypB,gBAAa52B,EAClBmN,KAAK0pB,qBAAsB,EAC3B1pB,KAAK2pB,oBAAqB,EAC1B3pB,KAAK4pB,cAAW/2B,EAChBmN,KAAK6pB,UAAY,GACjB7pB,KAAK8pB,oBAAqB,2CAAWA,mBACrC9pB,KAAK+pB,iBAAkB,2CAAWA,gBAElC/pB,KAAKgqB,YACN,0CAEDA,WACE,IAAM58B,EAAO4S,KAAKioB,YAClBjoB,KAAKylB,YACLzlB,KAAKiqB,aACL78B,EAAK88B,SAAW9C,GAAUh6B,EAAKw6B,OAAQx6B,GACvC4S,KAAKmqB,cAEDnqB,KAAKjb,QAAQ2oB,OAAS1N,KAAK4C,MAAMwnB,gBAAgB,WACnDrY,QAAQC,KAAK,qKAEhB,4BAEDqY,SAAYnmC,GACN8b,KAAK7b,QAAUD,GACjB0kC,GAAY5oB,KAAKioB,aAEnBjoB,KAAK7b,MAAQD,CACd,2BAED+lC,WACE,IAAMrnB,EAAQ5C,KAAK4C,MACbxV,EAAO4S,KAAKioB,YACZqC,EAAUtqB,KAAKuqB,aAEfC,EAAW,SAAC58B,EAAMjI,EAAGE,EAAG4M,GAAb,MAA4B,MAAT7E,EAAejI,EAAa,MAATiI,EAAe6E,EAAI5M,CAAzD,EAEX4kC,EAAMr9B,EAAKs9B,QAAUhoC,EAAe4nC,EAAQI,QAAShC,GAAgB9lB,EAAO,MAC5E+nB,EAAMv9B,EAAKw9B,QAAUloC,EAAe4nC,EAAQM,QAASlC,GAAgB9lB,EAAO,MAC5EioB,EAAMz9B,EAAK09B,QAAUpoC,EAAe4nC,EAAQQ,QAASpC,GAAgB9lB,EAAO,MAC5EyC,EAAYjY,EAAKiY,UACjB0lB,EAAM39B,EAAK49B,QAAUR,EAASnlB,EAAWolB,EAAKE,EAAKE,GACnDI,EAAM79B,EAAK89B,QAAUV,EAASnlB,EAAWslB,EAAKF,EAAKI,GACzDz9B,EAAKc,OAAS8R,KAAKmrB,cAAcV,GACjCr9B,EAAKe,OAAS6R,KAAKmrB,cAAcR,GACjCv9B,EAAKg+B,OAASprB,KAAKmrB,cAAcN,GACjCz9B,EAAKM,OAASsS,KAAKmrB,cAAcJ,GACjC39B,EAAKw6B,OAAS5nB,KAAKmrB,cAAcF,EAClC,2BAEDV,WACE,OAAOvqB,KAAK4C,MAAM+H,KAAKtG,SAASrE,KAAK7b,MACtC,wBAEDglC,WACE,OAAOnpB,KAAK4C,MAAMyoB,eAAerrB,KAAK7b,MACvC,8BAMDgnC,SAAcG,GACZ,OAAOtrB,KAAK4C,MAAMqD,OAAOqlB,EAC1B,+BAKDC,SAAevlB,GACb,IAAM5Y,EAAO4S,KAAKioB,YAClB,OAAOjiB,IAAU5Y,EAAKM,OAClBN,EAAKw6B,OACLx6B,EAAKM,MACV,sBAED89B,WACExrB,KAAKkiB,QAAQ,QACd,yBAKDuJ,WACE,IAAMr+B,EAAO4S,KAAKioB,YACdjoB,KAAKqpB,OACPv9B,GAAoBkU,KAAKqpB,MAAOrpB,MAE9B5S,EAAK88B,UACPtB,GAAYx7B,EAEf,2BAKDs+B,WACE,ItB1O8B7iC,EAAOkD,EsB0O/Bu+B,EAAUtqB,KAAKuqB,aACf5f,EAAO2f,EAAQ3f,OAAS2f,EAAQ3f,KAAO,IACvC0e,EAAQrpB,KAAKqpB,MAMnB,GAAIjnC,EAASuoB,GACX3K,KAAKqpB,MAxQX,SAAkC1e,GAChC,IAEInnB,EAAGO,EAAMa,EAFPlB,EAAO3B,OAAO2B,KAAKinB,GACnBghB,EAAQ,IAAI9pC,MAAM6B,EAAKC,QAE7B,IAAKH,EAAI,EAAGO,EAAOL,EAAKC,OAAQH,EAAIO,IAAQP,EAC1CoB,EAAMlB,EAAKF,GACXmoC,EAAMnoC,GAAK,CACTmC,EAAGf,EACHiB,EAAG8kB,EAAK/lB,IAGZ,OAAO+mC,CACR,CA4PkBC,CAAyBjhB,QACjC,GAAI0e,IAAU1e,EAAM,CACzB,GAAI0e,EAAO,CAETv9B,GAAoBu9B,EAAOrpB,MAE3B,IAAM5S,EAAO4S,KAAKioB,YAClBW,GAAYx7B,GACZA,EAAKO,QAAU,EAChB,CACGgd,GAAQ5oB,OAAO8pC,aAAalhB,KtB7PG5e,EsB8PTiU,MtB9PEnX,EsB8PR8hB,GtB7Pd1e,SACRpD,EAAMoD,SAASC,UAAUhG,KAAK6F,IAIhChK,OAAO+pC,eAAejjC,EAAO,WAAY,CACvCysB,cAAc,EACdvO,YAAY,EACZplB,MAAO,CACLuK,UAAW,CAACH,MAIhBF,GAAYO,SAAQ,SAACxH,GACnB,IAAMygC,EAAS,UAAY/+B,EAAY1B,GACjCmnC,EAAOljC,EAAMjE,GAEnB7C,OAAO+pC,eAAejjC,EAAOjE,EAAK,CAChC0wB,cAAc,EACdvO,YAAY,EACZplB,MAHgC,WAGjB,2BAANuB,EAAM,yBAANA,EAAM,gBACb,IAAMgiC,EAAM6G,EAAK3oC,MAAM4c,KAAM9c,GAQ7B,OANA2F,EAAMoD,SAASC,UAAUE,SAAQ,SAAC4/B,GACF,oBAAnBA,EAAO3G,IAChB2G,EAAO3G,GAAP2G,MAAAA,EAAkB9oC,EAErB,IAEMgiC,CACR,GAEJ,MsB+NGllB,KAAK6pB,UAAY,GACjB7pB,KAAKqpB,MAAQ1e,CACd,CACF,4BAEDwf,WACE,IAAM/8B,EAAO4S,KAAKioB,YAElBjoB,KAAK0rB,aAED1rB,KAAK8pB,qBACP18B,EAAKk9B,QAAU,IAAItqB,KAAK8pB,mBAE3B,sCAEDmC,SAAsBC,GACpB,IAAM9+B,EAAO4S,KAAKioB,YACZqC,EAAUtqB,KAAKuqB,aACjB4B,GAAe,EAEnBnsB,KAAK0rB,aAGL,IAAMU,EAAah/B,EAAK88B,SACxB98B,EAAK88B,SAAW9C,GAAUh6B,EAAKw6B,OAAQx6B,GAGnCA,EAAK45B,QAAUsD,EAAQtD,QACzBmF,GAAe,EAEfvD,GAAYx7B,GACZA,EAAK45B,MAAQsD,EAAQtD,OAKvBhnB,KAAKqsB,gBAAgBH,IAGjBC,GAAgBC,IAAeh/B,EAAK88B,WACtCnC,GAAa/nB,KAAM5S,EAAKO,QAE3B,0BAMD83B,WACE,IAAMF,EAASvlB,KAAK4C,MAAM2iB,OACpB+G,EAAY/G,EAAOgH,iBAAiBvsB,KAAKopB,OACzC3W,EAAS8S,EAAOiH,gBAAgBxsB,KAAKuqB,aAAc+B,GAAW,GACpEtsB,KAAKjb,QAAUwgC,EAAOkH,eAAeha,EAAQzS,KAAKiM,cAClDjM,KAAKwW,SAAWxW,KAAKjb,QAAQ8gB,QAC7B7F,KAAKkpB,gBAAkB,CAAC,CACzB,sBAMDxS,SAAMjsB,EAAO+C,GACX,IAMIhK,EAAG4/B,EAAK3M,EANQrpB,EAAqB4S,KAAlCioB,YAA0Btd,EAAQ3K,KAAfqpB,MACnB37B,EAAoBN,EAApBM,OAAQw8B,EAAY98B,EAAZ88B,SACT/B,EAAQz6B,EAAOE,KAEjB8+B,EAAmB,IAAVjiC,GAAe+C,IAAUmd,EAAKhnB,QAAgByJ,EAAKK,QAC5DwrB,EAAOxuB,EAAQ,GAAK2C,EAAKO,QAAQlD,EAAQ,GAG7C,IAAsB,IAAlBuV,KAAKwW,SACPppB,EAAKO,QAAUgd,EACfvd,EAAKK,SAAU,EACfgpB,EAAS9L,MACJ,CAEH8L,EADE70B,EAAQ+oB,EAAKlgB,IACNuV,KAAK2sB,eAAev/B,EAAMud,EAAMlgB,EAAO+C,GACvCpL,EAASuoB,EAAKlgB,IACduV,KAAK4sB,gBAAgBx/B,EAAMud,EAAMlgB,EAAO+C,GAExCwS,KAAK6sB,mBAAmBz/B,EAAMud,EAAMlgB,EAAO+C,GAItD,IAAKhK,EAAI,EAAGA,EAAIgK,IAAShK,EACvB4J,EAAKO,QAAQnK,EAAIiH,GAAS24B,EAAM3M,EAAOjzB,GACnCkpC,KAHkD,OAAftJ,EAAI+E,IAAoBlP,GAAQmK,EAAI+E,GAASlP,EAAKkP,MAKrFuE,GAAS,GAEXzT,EAAOmK,GAGXh2B,EAAKK,QAAUi/B,CAChB,CAEGxC,GACFnC,GAAa/nB,KAAMyW,EAEtB,mCAaDoW,SAAmBz/B,EAAMud,EAAMlgB,EAAO+C,GACpC,IAMIhK,EAAGO,EAAMI,EANNuJ,EAAkBN,EAAlBM,OAAQk6B,EAAUx6B,EAAVw6B,OACTO,EAAQz6B,EAAOE,KACfw6B,EAAQR,EAAOh6B,KACfk/B,EAASp/B,EAAOq/B,YAChBC,EAAct/B,IAAWk6B,EACzBnR,EAAS,IAAI50B,MAAM2L,GAGzB,IAAKhK,EAAI,EAAGO,EAAOyJ,EAAOhK,EAAIO,IAAQP,EAAG,OACvCW,EAAQX,EAAIiH,EACZgsB,EAAOjzB,IAAPizB,EAAAA,CAAAA,GAAAA,EAAAA,EAAAA,GAAAA,EACG0R,EAAQ6E,GAAet/B,EAAOgpB,MAAMoW,EAAO3oC,GAAQA,KADtDsyB,EAAAA,EAAAA,GAAAA,EAEG2R,EAAQR,EAAOlR,MAAM/L,EAAKxmB,GAAQA,IAFrCsyB,EAID,CACD,OAAOA,CACR,+BAaDkW,SAAev/B,EAAMud,EAAMlgB,EAAO+C,GAChC,IAEIhK,EAAGO,EAAMI,EAAO6C,EAFbkH,EAAkBd,EAAlBc,OAAQC,EAAUf,EAAVe,OACTsoB,EAAS,IAAI50B,MAAM2L,GAGzB,IAAKhK,EAAI,EAAGO,EAAOyJ,EAAOhK,EAAIO,IAAQP,EAEpCwD,EAAO2jB,EADPxmB,EAAQX,EAAIiH,GAEZgsB,EAAOjzB,GAAK,CACVmC,EAAGuI,EAAOwoB,MAAM1vB,EAAK,GAAI7C,GACzB0B,EAAGsI,EAAOuoB,MAAM1vB,EAAK,GAAI7C,IAG7B,OAAOsyB,CACR,gCAaDmW,SAAgBx/B,EAAMud,EAAMlgB,EAAO+C,GACjC,IAGIhK,EAAGO,EAAMI,EAAO6C,EAHbkH,EAAkBd,EAAlBc,OAAQC,EAAUf,EAAVe,OACf,EAAyC6R,KAAKwW,SAA9C,IAAOyW,SAAAA,OAAP,MAAkB,IAAlB,MAAuBC,SAAAA,OAAvB,MAAkC,IAAlC,EACMzW,EAAS,IAAI50B,MAAM2L,GAGzB,IAAKhK,EAAI,EAAGO,EAAOyJ,EAAOhK,EAAIO,IAAQP,EAEpCwD,EAAO2jB,EADPxmB,EAAQX,EAAIiH,GAEZgsB,EAAOjzB,GAAK,CACVmC,EAAGuI,EAAOwoB,MAAMrwB,EAAiBW,EAAMimC,GAAW9oC,GAClD0B,EAAGsI,EAAOuoB,MAAMrwB,EAAiBW,EAAMkmC,GAAW/oC,IAGtD,OAAOsyB,CACR,0BAKD0W,SAAUhpC,GACR,OAAO6b,KAAKioB,YAAYt6B,QAAQxJ,EACjC,+BAKDipC,SAAejpC,GACb,OAAO6b,KAAKioB,YAAYtd,KAAKxmB,EAC9B,2BAKD4iC,SAAW/gB,EAAOyQ,EAAQlR,GACxB,IAAM3C,EAAQ5C,KAAK4C,MACbxV,EAAO4S,KAAKioB,YACZtmC,EAAQ80B,EAAOzQ,EAAMpY,MAK3B,OAAOm5B,GAJO,CACZrjC,KAAMijC,GAAwB/jB,GAAO,GACrCL,OAAQkU,EAAOyR,QAAQliB,EAAMpY,OAENjM,EAAOyL,EAAKjJ,MAAO,CAACohB,KAAAA,GAC9C,sCAKD8nB,SAAsBnlC,EAAO8d,EAAOyQ,EAAQuQ,GAC1C,IAAMsG,EAAc7W,EAAOzQ,EAAMpY,MAC7BjM,EAAwB,OAAhB2rC,EAAuBC,IAAMD,EACnC/qB,EAASykB,GAASvQ,EAAOyR,QAAQliB,EAAMpY,MACzCo5B,GAASzkB,IACXykB,EAAMzkB,OAASA,EACf5gB,EAAQolC,GAAWC,EAAOsG,EAAattB,KAAKioB,YAAY9jC,QAE1D+D,EAAMa,IAAM5B,KAAK4B,IAAIb,EAAMa,IAAKpH,GAChCuG,EAAMc,IAAM7B,KAAK6B,IAAId,EAAMc,IAAKrH,EACjC,0BAKD6rC,SAAUxnB,EAAOynB,GACf,IAQIjqC,EAAGizB,EARDrpB,EAAO4S,KAAKioB,YACZt6B,EAAUP,EAAKO,QACf++B,EAASt/B,EAAKK,SAAWuY,IAAU5Y,EAAKM,OACxC3J,EAAO4J,EAAQhK,OACf+pC,EAAa1tB,KAAKurB,eAAevlB,GACjCghB,EA3YU,SAACyG,EAAUrgC,EAAMwV,GAAjB,OAA2B6qB,IAAargC,EAAKugC,QAAUvgC,EAAK88B,UAC3E,CAACxmC,KAAMijC,GAAwB/jB,GAAO,GAAOL,OAAQ,KADtC,CA2YFqrB,CAAYH,EAAUrgC,EAAM4S,KAAK4C,OACzC1a,EAAQ,CAACa,IAAKzG,OAAOiF,kBAAmByB,IAAK1G,OAAOurC,mBAC1D,EA9eJ,SAAuB7nB,GACrB,MAA2CA,EAAMnY,gBAA1C9E,EAAP,EAAOA,IAAKC,EAAZ,EAAYA,IAAK8E,EAAjB,EAAiBA,WAAYC,EAA7B,EAA6BA,WAC7B,MAAO,CACLhF,IAAK+E,EAAa/E,EAAMzG,OAAOurC,kBAC/B7kC,IAAK+E,EAAa/E,EAAM1G,OAAOiF,kBAElC,CAwe0CsG,CAAc6/B,GAAzCI,EAAZ,EAAO/kC,IAAoBglC,EAA3B,EAAsB/kC,IAGtB,SAASglC,IAEP,IAAM9G,GADNzQ,EAAS9oB,EAAQnK,IACSkqC,EAAW9/B,MACrC,OAAQrL,EAASk0B,EAAOzQ,EAAMpY,QAAUkgC,EAAW5G,GAAc6G,EAAW7G,CAC7E,CAED,IAAK1jC,EAAI,EAAGA,EAAIO,IACViqC,MAGJhuB,KAAKqtB,sBAAsBnlC,EAAO8d,EAAOyQ,EAAQuQ,IAC7C0F,MALkBlpC,GAUxB,GAAIkpC,EAEF,IAAKlpC,EAAIO,EAAO,EAAGP,GAAK,IAAKA,EAC3B,IAAIwqC,IAAJ,CAGAhuB,KAAKqtB,sBAAsBnlC,EAAO8d,EAAOyQ,EAAQuQ,GACjD,KAFC,CAKL,OAAO9+B,CACR,mCAED+lC,SAAmBjoB,GACjB,IAEIxiB,EAAGO,EAAMpC,EAFP80B,EAASzW,KAAKioB,YAAYt6B,QAC1B4U,EAAS,GAGf,IAAK/e,EAAI,EAAGO,EAAO0yB,EAAO9yB,OAAQH,EAAIO,IAAQP,EAExCjB,EADJZ,EAAQ80B,EAAOjzB,GAAGwiB,EAAMpY,QAEtB2U,EAAOrc,KAAKvE,GAGhB,OAAO4gB,CACR,+BAMD2rB,WACE,OAAO,CACR,iCAKDC,SAAiBhqC,GACf,IAAMiJ,EAAO4S,KAAKioB,YACZv6B,EAASN,EAAKM,OACdk6B,EAASx6B,EAAKw6B,OACdnR,EAASzW,KAAKmtB,UAAUhpC,GAC9B,MAAO,CACLiqC,MAAO1gC,EAAS,GAAKA,EAAO2gC,iBAAiB5X,EAAO/oB,EAAOE,OAAS,GACpEjM,MAAOimC,EAAS,GAAKA,EAAOyG,iBAAiB5X,EAAOmR,EAAOh6B,OAAS,GAEvE,wBAKDs0B,SAAQ3c,GACN,IAAMnY,EAAO4S,KAAKioB,YAClBjoB,KAAK6kB,OAAOtf,GAAQ,WACpBnY,EAAKkhC,MAxoBT,SAAgB3sC,GACd,IAAIkN,EAAG4D,EAAG3L,EAAGuK,EAWb,OATIjP,EAAST,IACXkN,EAAIlN,EAAMymB,IACV3V,EAAI9Q,EAAM0mB,MACVvhB,EAAInF,EAAM2mB,OACVjX,EAAI1P,EAAM4mB,MAEV1Z,EAAI4D,EAAI3L,EAAIuK,EAAI1P,EAGX,CACLymB,IAAKvZ,EACLwZ,MAAO5V,EACP6V,OAAQxhB,EACRyhB,KAAMlX,EACNk9B,UAAoB,IAAV5sC,EAEb,CAqnBgB6sC,CAAO9rC,EAAesd,KAAKjb,QAAQmpB,KAvpBpD,SAAqBhgB,EAAQC,EAAQu4B,GACnC,IAAwB,IAApBA,EACF,OAAO,EAET,IAAM/gC,EAAI8gC,GAAUv4B,EAAQw4B,GACtB7gC,EAAI4gC,GAAUt4B,EAAQu4B,GAE5B,MAAO,CACLte,IAAKviB,EAAE6E,IACP2d,MAAO1iB,EAAE+E,IACT4d,OAAQziB,EAAE4E,MACV8d,KAAM5iB,EAAE8E,MAEX,CA0oByDgkC,CAAYrhC,EAAKc,OAAQd,EAAKe,OAAQ6R,KAAKkuB,mBAClG,uBAKDrJ,SAAOtf,GAAQ,qBAEfgd,WACE,IASI/+B,EATE0hB,EAAMlF,KAAKmJ,KACXvG,EAAQ5C,KAAK4C,MACbxV,EAAO4S,KAAKioB,YACZvjB,EAAWtX,EAAKud,MAAQ,GACxBoD,EAAOnL,EAAM8rB,UACb9mB,EAAS,GACTnd,EAAQuV,KAAKwpB,YAAc,EAC3Bh8B,EAAQwS,KAAKypB,YAAe/kB,EAAS/gB,OAAS8G,EAC9C0b,EAA0BnG,KAAKjb,QAAQohB,wBAO7C,IAJI/Y,EAAKk9B,SACPl9B,EAAKk9B,QAAQ/H,KAAKrd,EAAK6I,EAAMtjB,EAAO+C,GAGjChK,EAAIiH,EAAOjH,EAAIiH,EAAQ+C,IAAShK,EAAG,CACtC,IAAM02B,EAAUxV,EAASlhB,GACrB02B,EAAQyT,SAGRzT,EAAQtS,QAAUzB,EACpByB,EAAO1hB,KAAKg0B,GAEZA,EAAQqI,KAAKrd,EAAK6I,GAErB,CAED,IAAKvqB,EAAI,EAAGA,EAAIokB,EAAOjkB,SAAUH,EAC/BokB,EAAOpkB,GAAG++B,KAAKrd,EAAK6I,EAEvB,yBASD0P,SAASt5B,EAAOyjB,GACd,IAAMrC,EAAOqC,EAAS,SAAW,UACjC,YAAiB/U,IAAV1O,GAAuB6b,KAAKioB,YAAYqC,QAC3CtqB,KAAK2uB,6BAA6BppB,GAClCvF,KAAK4uB,0BAA0BzqC,GAAS,EAAGohB,EAChD,2BAKD0G,SAAW9nB,EAAOyjB,EAAQrC,GACxB,IACIhB,EADE+lB,EAAUtqB,KAAKuqB,aAErB,GAAIpmC,GAAS,GAAKA,EAAQ6b,KAAKioB,YAAYtd,KAAKhnB,OAAQ,CACtD,IAAMu2B,EAAUla,KAAKioB,YAAYtd,KAAKxmB,GACtCogB,EAAU2V,EAAQ0P,WACf1P,EAAQ0P,SAxjBjB,SAA2B/T,EAAQ1xB,EAAO+1B,GACxC,OAAO5H,GAAcuD,EAAQ,CAC3BjO,QAAQ,EACRinB,UAAW1qC,EACXsyB,YAAQ5jB,EACRi8B,SAAKj8B,EACLqnB,QAAAA,EACA/1B,MAAAA,EACAohB,KAAM,UACNzjB,KAAM,QAET,CA6iB2BitC,CAAkB/uB,KAAKiM,aAAc9nB,EAAO+1B,IAClE3V,EAAQkS,OAASzW,KAAKmtB,UAAUhpC,GAChCogB,EAAQuqB,IAAMxE,EAAQ3f,KAAKxmB,GAC3BogB,EAAQpgB,MAAQogB,EAAQsqB,UAAY1qC,CACrC,MACCogB,EAAUvE,KAAK4pB,WACZ5pB,KAAK4pB,SA3kBd,SAA8B/T,EAAQ1xB,GACpC,OAAOmuB,GAAcuD,EACnB,CACEjO,QAAQ,EACR0iB,aAASz3B,EACT3O,aAAcC,EACdA,MAAAA,EACAohB,KAAM,UACNzjB,KAAM,WAGX,CAgkBwBktC,CAAqBhvB,KAAK4C,MAAMqJ,aAAcjM,KAAK7b,QACtEogB,EAAQ+lB,QAAUA,EAClB/lB,EAAQpgB,MAAQogB,EAAQrgB,aAAe8b,KAAK7b,MAK9C,OAFAogB,EAAQqD,SAAWA,EACnBrD,EAAQgB,KAAOA,EACRhB,CACR,6CAMDoqB,SAA6BppB,GAC3B,OAAOvF,KAAKivB,uBAAuBjvB,KAAK8pB,mBAAmBroC,GAAI8jB,EAChE,0CAODqpB,SAA0BzqC,EAAOohB,GAC/B,OAAOvF,KAAKivB,uBAAuBjvB,KAAK+pB,gBAAgBtoC,GAAI8jB,EAAMphB,EACnE,uCAKD8qC,SAAuBC,GAAsC,WAAzB3pB,EAAyB,uDAAlB,UAAWphB,EAAO,uCACrDyjB,EAAkB,WAATrC,EACT4F,EAAQnL,KAAKkpB,gBACbrnB,EAAWqtB,EAAc,IAAM3pB,EAC/BwjB,EAAS5d,EAAMtJ,GACfstB,EAAUnvB,KAAK0pB,qBAAuBhjC,EAAQvC,GACpD,GAAI4kC,EACF,OAAOD,GAAiBC,EAAQoG,GAElC,IAAM5J,EAASvlB,KAAK4C,MAAM2iB,OACpB+G,EAAY/G,EAAO6J,wBAAwBpvB,KAAKopB,MAAO8F,GACvDxc,EAAW9K,EAAS,CAAC,GAAD,OAAIsnB,EAAJ,SAAwB,QAASA,EAAa,IAAM,CAACA,EAAa,IACtFzc,EAAS8S,EAAOiH,gBAAgBxsB,KAAKuqB,aAAc+B,GACnDv4B,EAAQhS,OAAO2B,KAAK4jB,GAAS5C,SAASwqB,IAGtC3qB,EAAU,kBAAM,EAAK0H,WAAW9nB,EAAOyjB,EAA7B,EACVrF,EAASgjB,EAAO8J,oBAAoB5c,EAAQ1e,EAAOwQ,EAASmO,GAalE,OAXInQ,EAAOyjB,UAGTzjB,EAAOyjB,QAAUmJ,EAKjBhkB,EAAMtJ,GAAY9f,OAAOutC,OAAOxG,GAAiBvmB,EAAQ4sB,KAGpD5sB,CACR,mCAMDgtB,SAAmBprC,EAAOqrC,EAAY5nB,GACpC,IAOI7iB,EAPE6d,EAAQ5C,KAAK4C,MACbuI,EAAQnL,KAAKkpB,gBACbrnB,EAAW,aAAH,OAAgB2tB,GACxBzG,EAAS5d,EAAMtJ,GACrB,GAAIknB,EACF,OAAOA,EAGT,IAAgC,IAA5BnmB,EAAM7d,QAAQmf,UAAqB,CACrC,IAAMqhB,EAASvlB,KAAK4C,MAAM2iB,OACpB+G,EAAY/G,EAAOkK,0BAA0BzvB,KAAKopB,MAAOoG,GACzD/c,EAAS8S,EAAOiH,gBAAgBxsB,KAAKuqB,aAAc+B,GACzDvnC,EAAUwgC,EAAOkH,eAAeha,EAAQzS,KAAKiM,WAAW9nB,EAAOyjB,EAAQ4nB,GACxE,CACD,IAAMznB,EAAa,IAAIud,GAAW1iB,EAAO7d,GAAWA,EAAQgjB,YAI5D,OAHIhjB,GAAWA,EAAQkvB,aACrB9I,EAAMtJ,GAAY9f,OAAOutC,OAAOvnB,IAE3BA,CACR,iCAMD2nB,SAAiB3qC,GACf,GAAKA,EAAQihC,QAGb,OAAOhmB,KAAKupB,iBAAmBvpB,KAAKupB,eAAiBxnC,OAAO4M,OAAO,CAAC,EAAG5J,GACxE,+BAMD4qC,SAAepqB,EAAMqqB,GACnB,OAAQA,GAAiB/G,GAAmBtjB,IAASvF,KAAK4C,MAAMitB,mBACjE,kCAKDC,SAAkBrlC,EAAO8a,GACvB,IAAMwqB,EAAY/vB,KAAK4uB,0BAA0BnkC,EAAO8a,GAClDyqB,EAA0BhwB,KAAKupB,eAC/BqG,EAAgB5vB,KAAK0vB,iBAAiBK,GACtCJ,EAAiB3vB,KAAK2vB,eAAepqB,EAAMqqB,IAAmBA,IAAkBI,EAEtF,OADAhwB,KAAKiwB,oBAAoBL,EAAerqB,EAAMwqB,GACvC,CAACH,cAAAA,EAAeD,eAAAA,EACxB,8BAMDO,SAAchW,EAAS/1B,EAAOwjB,EAAYpC,GACpCsjB,GAAmBtjB,GACrBxjB,OAAO4M,OAAOurB,EAASvS,GAEvB3H,KAAKuvB,mBAAmBprC,EAAOohB,GAAMsf,OAAO3K,EAASvS,EAExD,oCAMDsoB,SAAoBL,EAAerqB,EAAMwgB,GACnC6J,IAAkB/G,GAAmBtjB,IACvCvF,KAAKuvB,wBAAmB18B,EAAW0S,GAAMsf,OAAO+K,EAAe7J,EAElE,0BAKDoK,SAAUjW,EAAS/1B,EAAOohB,EAAMqC,GAC9BsS,EAAQtS,OAASA,EACjB,IAAM7iB,EAAUib,KAAKyd,SAASt5B,EAAOyjB,GACrC5H,KAAKuvB,mBAAmBprC,EAAOohB,EAAMqC,GAAQid,OAAO3K,EAAS,CAG3Dn1B,SAAW6iB,GAAU5H,KAAK0vB,iBAAiB3qC,IAAaA,GAE3D,iCAEDqrC,SAAiBlW,EAASh2B,EAAcC,GACtC6b,KAAKmwB,UAAUjW,EAAS/1B,EAAO,UAAU,EAC1C,8BAEDksC,SAAcnW,EAASh2B,EAAcC,GACnC6b,KAAKmwB,UAAUjW,EAAS/1B,EAAO,UAAU,EAC1C,yCAKDmsC,WACE,IAAMpW,EAAUla,KAAKioB,YAAYqC,QAE7BpQ,GACFla,KAAKmwB,UAAUjW,OAASrnB,EAAW,UAAU,EAEhD,sCAKD09B,WACE,IAAMrW,EAAUla,KAAKioB,YAAYqC,QAE7BpQ,GACFla,KAAKmwB,UAAUjW,OAASrnB,EAAW,UAAU,EAEhD,gCAKDw5B,SAAgBH,GACd,IADgC,EAC1BvhB,EAAO3K,KAAKqpB,MACZ3kB,EAAW1E,KAAKioB,YAAYtd,KAFF,UAKG3K,KAAK6pB,WALR,IAKhC,IAAK,EAAL,qBAAmD,0BAAvCxE,EAAuC,KAA/BmL,EAA+B,KAAzBC,EAAyB,KACjDzwB,KAAKqlB,GAAQmL,EAAMC,EACpB,CAP+B,+BAQhCzwB,KAAK6pB,UAAY,GAEjB,IAAM6G,EAAUhsB,EAAS/gB,OACnBgtC,EAAUhmB,EAAKhnB,OACf6J,EAAQrG,KAAK4B,IAAI4nC,EAASD,GAE5BljC,GAKFwS,KAAK0W,MAAM,EAAGlpB,GAGZmjC,EAAUD,EACZ1wB,KAAK4wB,gBAAgBF,EAASC,EAAUD,EAASxE,GACxCyE,EAAUD,GACnB1wB,KAAK6wB,gBAAgBF,EAASD,EAAUC,EAE3C,gCAKDC,SAAgBnmC,EAAO+C,GAAgC,IAIjDhK,EAJwB0oC,IAAyB,yDAC/C9+B,EAAO4S,KAAKioB,YACZtd,EAAOvd,EAAKud,KACZjgB,EAAMD,EAAQ+C,EAGdsjC,EAAO,SAAC9b,GAEZ,IADAA,EAAIrxB,QAAU6J,EACThK,EAAIwxB,EAAIrxB,OAAS,EAAGH,GAAKkH,EAAKlH,IACjCwxB,EAAIxxB,GAAKwxB,EAAIxxB,EAAIgK,EAEpB,EAGD,IAFAsjC,EAAKnmB,GAEAnnB,EAAIiH,EAAOjH,EAAIkH,IAAOlH,EACzBmnB,EAAKnnB,GAAK,IAAIwc,KAAK+pB,gBAGjB/pB,KAAKwW,UACPsa,EAAK1jC,EAAKO,SAEZqS,KAAK0W,MAAMjsB,EAAO+C,GAEd0+B,GACFlsB,KAAK+wB,eAAepmB,EAAMlgB,EAAO+C,EAAO,QAE3C,+BAEDujC,SAAe7W,EAASzvB,EAAO+C,EAAO+X,GAAQ,gCAK9CsrB,SAAgBpmC,EAAO+C,GACrB,IAAMJ,EAAO4S,KAAKioB,YAClB,GAAIjoB,KAAKwW,SAAU,CACjB,IAAMwa,EAAU5jC,EAAKO,QAAQxB,OAAO1B,EAAO+C,GACvCJ,EAAK88B,UACPtB,GAAYx7B,EAAM4jC,EAErB,CACD5jC,EAAKud,KAAKxe,OAAO1B,EAAO+C,EACzB,sBAKDyjC,SAAM/tC,GACJ,GAAI8c,KAAKwW,SACPxW,KAAK6pB,UAAU3jC,KAAKhD,OACf,CACL,cAA6BA,EAA7B,GAAOmiC,EAAP,KAAemL,EAAf,KAAqBC,EAArB,KACAzwB,KAAKqlB,GAAQmL,EAAMC,EACpB,CACDzwB,KAAK4C,MAAMsuB,aAAahrC,KAAxB,CAA8B8Z,KAAK7b,OAAnC,eAA6CjB,IAC9C,4BAEDiuC,WACE,IAAM3jC,EAAQ4jC,UAAUztC,OACxBqc,KAAKixB,MAAM,CAAC,kBAAmBjxB,KAAKuqB,aAAa5f,KAAKhnB,OAAS6J,EAAOA,GACvE,2BAED6jC,WACErxB,KAAKixB,MAAM,CAAC,kBAAmBjxB,KAAKioB,YAAYtd,KAAKhnB,OAAS,EAAI,GACnE,6BAED2tC,WACEtxB,KAAKixB,MAAM,CAAC,kBAAoB,EAAG,GACpC,8BAEDM,SAAc9mC,EAAO+C,GACfA,GACFwS,KAAKixB,MAAM,CAAC,kBAAmBxmC,EAAO+C,IAExC,IAAMgkC,EAAWJ,UAAUztC,OAAS,EAChC6tC,GACFxxB,KAAKixB,MAAM,CAAC,kBAAmBxmC,EAAO+mC,GAEzC,+BAEDC,WACEzxB,KAAKixB,MAAM,CAAC,kBAAoB,EAAEG,UAAUztC,QAC7C,OAx0BkBslC,GClMrB,SAASyI,GAAqBtkC,GAC5B,IAGI5J,EAAGO,EAAM4tC,EAAM1Y,EAHbjT,EAAQ5Y,EAAKM,OACb6U,EAnBR,SAA2ByD,EAAOlkB,GAChC,IAAKkkB,EAAM4rB,OAAOC,KAAM,CAItB,IAHA,IAAMC,EAAe9rB,EAAM8hB,wBAAwBhmC,GAC/CygB,EAAS,GAEJ/e,EAAI,EAAGO,EAAO+tC,EAAanuC,OAAQH,EAAIO,EAAMP,IACpD+e,EAASA,EAAOwvB,OAAOD,EAAatuC,GAAGwkC,WAAWiG,mBAAmBjoB,IAEvEA,EAAM4rB,OAAOC,KAAOxlC,GAAakW,EAAOyvB,MAAK,SAACnrC,EAAGC,GAAJ,OAAUD,EAAIC,CAAd,IAC9C,CACD,OAAOkf,EAAM4rB,OAAOC,IACrB,CAQgBI,CAAkBjsB,EAAO5Y,EAAKtL,MACzCiH,EAAMid,EAAMksB,QAEVC,EAAmB,WACV,QAATR,IAA4B,QAAVA,IAIlBjrC,EAAQuyB,KAEVlwB,EAAM5B,KAAK4B,IAAIA,EAAK5B,KAAKa,IAAI2pC,EAAO1Y,IAASlwB,IAE/CkwB,EAAO0Y,EACR,EAED,IAAKnuC,EAAI,EAAGO,EAAOwe,EAAO5e,OAAQH,EAAIO,IAAQP,EAC5CmuC,EAAO3rB,EAAMhY,iBAAiBuU,EAAO/e,IACrC2uC,IAIF,IADAlZ,OAAOpmB,EACFrP,EAAI,EAAGO,EAAOiiB,EAAMtD,MAAM/e,OAAQH,EAAIO,IAAQP,EACjDmuC,EAAO3rB,EAAMosB,gBAAgB5uC,GAC7B2uC,IAGF,OAAOppC,CACR,CA2FD,SAASspC,GAAWC,EAAOtrC,EAAM4gC,EAAQpkC,GAMvC,OALI5B,EAAQ0wC,GA5Bd,SAAuBA,EAAOtrC,EAAM4gC,EAAQpkC,GAC1C,IAAM+uC,EAAa3K,EAAOlR,MAAM4b,EAAM,GAAI9uC,GACpCgvC,EAAW5K,EAAOlR,MAAM4b,EAAM,GAAI9uC,GAClCuF,EAAM5B,KAAK4B,IAAIwpC,EAAYC,GAC3BxpC,EAAM7B,KAAK6B,IAAIupC,EAAYC,GAC7BC,EAAW1pC,EACX2pC,EAAS1pC,EAET7B,KAAKa,IAAIe,GAAO5B,KAAKa,IAAIgB,KAC3BypC,EAAWzpC,EACX0pC,EAAS3pC,GAKX/B,EAAK4gC,EAAOh6B,MAAQ8kC,EAEpB1rC,EAAK2rC,QAAU,CACbF,SAAAA,EACAC,OAAAA,EACAjoC,MAAO8nC,EACP7nC,IAAK8nC,EACLzpC,IAAAA,EACAC,IAAAA,EAEH,CAIG4pC,CAAcN,EAAOtrC,EAAM4gC,EAAQpkC,GAEnCwD,EAAK4gC,EAAOh6B,MAAQg6B,EAAOlR,MAAM4b,EAAO9uC,GAEnCwD,CACR,CAED,SAAS6rC,GAAsBzlC,EAAMud,EAAMlgB,EAAO+C,GAChD,IAKIhK,EAAGO,EAAMiD,EAAMsrC,EALb5kC,EAASN,EAAKM,OACdk6B,EAASx6B,EAAKw6B,OACdkF,EAASp/B,EAAOq/B,YAChBC,EAAct/B,IAAWk6B,EACzBnR,EAAS,GAGf,IAAKjzB,EAAIiH,EAAO1G,EAAO0G,EAAQ+C,EAAOhK,EAAIO,IAAQP,EAChD8uC,EAAQ3nB,EAAKnnB,IACbwD,EAAO,CAAC,GACH0G,EAAOE,MAAQo/B,GAAet/B,EAAOgpB,MAAMoW,EAAOtpC,GAAIA,GAC3DizB,EAAOvwB,KAAKmsC,GAAWC,EAAOtrC,EAAM4gC,EAAQpkC,IAE9C,OAAOizB,CACR,CAED,SAASqc,GAAWC,GAClB,OAAOA,QAA8BlgC,IAApBkgC,EAAON,eAA4C5/B,IAAlBkgC,EAAOL,MAC1D,CA8BD,SAASM,GAAiBrrB,EAAY5iB,EAASiiC,EAAO7iC,GACpD,IAAI8uC,EAAOluC,EAAQmuC,cACbhO,EAAM,CAAC,EAEb,GAAK+N,EAKL,IAAa,IAATA,EAAJ,CAKA,MAnCF,SAAqBtrB,GACnB,IAAIpkB,EAASkH,EAAOC,EAAK0d,EAAKE,EAiB9B,OAhBIX,EAAWwrB,YACb5vC,EAAUokB,EAAWokB,KAAOpkB,EAAWhiB,EACvC8E,EAAQ,OACRC,EAAM,UAENnH,EAAUokB,EAAWokB,KAAOpkB,EAAW9hB,EACvC4E,EAAQ,SACRC,EAAM,OAEJnH,GACF6kB,EAAM,MACNE,EAAS,UAETF,EAAM,QACNE,EAAS,OAEJ,CAAC7d,MAAAA,EAAOC,IAAAA,EAAKnH,QAAAA,EAAS6kB,IAAAA,EAAKE,OAAAA,EACnC,CAgB4C8qB,CAAYzrB,GAAhDld,EAAP,EAAOA,MAAOC,EAAd,EAAcA,IAAKnH,EAAnB,EAAmBA,QAAS6kB,EAA5B,EAA4BA,IAAKE,EAAjC,EAAiCA,OAEpB,WAAT2qB,GAAqBjM,IACvBrf,EAAW0rB,oBAAqB,GAC3BrM,EAAMwB,MAAQ,KAAOrkC,EACxB8uC,EAAO7qB,GACG4e,EAAMyB,SAAW,KAAOtkC,EAClC8uC,EAAO3qB,GAEP4c,EAAIoO,GAAUhrB,EAAQ7d,EAAOC,EAAKnH,KAAY,EAC9C0vC,EAAO7qB,IAIX8c,EAAIoO,GAAUL,EAAMxoC,EAAOC,EAAKnH,KAAY,EAC5CokB,EAAWurB,cAAgBhO,CAjB1B,MAFCvd,EAAWurB,cAAgB,CAAC9qB,KAAK,EAAMC,OAAO,EAAMC,QAAQ,EAAMC,MAAM,QALxEZ,EAAWurB,cAAgBhO,CAyB9B,CAED,SAASoO,GAAUL,EAAMpsC,EAAGC,EAAGvD,GAU/B,IAAcgwC,EAAMtvC,EAAIuvC,EAHtB,OANIjwC,GASkBiwC,EARC1sC,EACrBmsC,EAAOQ,GADPR,GAQUM,EAREN,MAQIhvC,EARE4C,GASC2sC,EAAKD,IAASC,EAAKvvC,EAAKsvC,EARrBzsC,EAAGD,IAEzBosC,EAAOQ,GAASR,EAAMpsC,EAAGC,GAEpBmsC,CACR,CAMD,SAASQ,GAAS/tC,EAAG+E,EAAOC,GAC1B,MAAa,UAANhF,EAAgB+E,EAAc,QAAN/E,EAAcgF,EAAMhF,CACpD,CAED,SAASguC,GAAiB/rB,EAA1B,EAAuDpI,GAAO,IAAvBo0B,EAAuB,EAAvBA,cACrChsB,EAAWgsB,cAAkC,SAAlBA,EACb,IAAVp0B,EAAc,IAAO,EACrBo0B,CACL,SDtCoB1K,GAAAA,WAKD,CAAC,WALAA,GAAAA,qBAUS,cAVTA,GAAAA,kBAeM,UCyBN2K,GAAAA,SAAAA,6IAgDnB/G,SAAmBz/B,EAAMud,EAAMlgB,EAAO+C,GACpC,OAAOqlC,GAAsBzlC,EAAMud,EAAMlgB,EAAO+C,EACjD,+BAODm/B,SAAev/B,EAAMud,EAAMlgB,EAAO+C,GAChC,OAAOqlC,GAAsBzlC,EAAMud,EAAMlgB,EAAO+C,EACjD,gCAODo/B,SAAgBx/B,EAAMud,EAAMlgB,EAAO+C,GACjC,IAKIhK,EAAGO,EAAMiD,EAAMZ,EALZsH,EAAkBN,EAAlBM,OAAQk6B,EAAUx6B,EAAVw6B,OACf,EAAyC5nB,KAAKwW,SAA9C,IAAOyW,SAAAA,OAAP,MAAkB,IAAlB,MAAuBC,SAAAA,OAAvB,MAAkC,IAAlC,EACM2G,EAA2B,MAAhBnmC,EAAOE,KAAeq/B,EAAWC,EAC5C4G,EAA2B,MAAhBlM,EAAOh6B,KAAeq/B,EAAWC,EAC5CzW,EAAS,GAEf,IAAKjzB,EAAIiH,EAAO1G,EAAO0G,EAAQ+C,EAAOhK,EAAIO,IAAQP,EAChD4C,EAAMukB,EAAKnnB,IACXwD,EAAO,CAAC,GACH0G,EAAOE,MAAQF,EAAOgpB,MAAMrwB,EAAiBD,EAAKytC,GAAWrwC,GAClEizB,EAAOvwB,KAAKmsC,GAAWhsC,EAAiBD,EAAK0tC,GAAW9sC,EAAM4gC,EAAQpkC,IAExE,OAAOizB,CACR,sCAKD4W,SAAsBnlC,EAAO8d,EAAOyQ,EAAQuQ,IAC1C,oEAA4B9+B,EAAO8d,EAAOyQ,EAAQuQ,GAClD,IAAM+L,EAAStc,EAAOkc,QAClBI,GAAU/sB,IAAUhG,KAAKioB,YAAYL,SAEvC1/B,EAAMa,IAAM5B,KAAK4B,IAAIb,EAAMa,IAAKgqC,EAAOhqC,KACvCb,EAAMc,IAAM7B,KAAK6B,IAAId,EAAMc,IAAK+pC,EAAO/pC,KAE1C,+BAMDklC,WACE,OAAO,CACR,iCAKDC,SAAiBhqC,GACf,IAAMiJ,EAAO4S,KAAKioB,YACXv6B,EAAkBN,EAAlBM,OAAQk6B,EAAUx6B,EAAVw6B,OACTnR,EAASzW,KAAKmtB,UAAUhpC,GACxB4uC,EAAStc,EAAOkc,QAChBhxC,EAAQmxC,GAAWC,GACrB,IAAMA,EAAOtoC,MAAQ,KAAOsoC,EAAOroC,IAAM,IACzC,GAAKk9B,EAAOyG,iBAAiB5X,EAAOmR,EAAOh6B,OAE/C,MAAO,CACLwgC,MAAO,GAAK1gC,EAAO2gC,iBAAiB5X,EAAO/oB,EAAOE,OAClDjM,MAAAA,EAEH,2BAEDqoC,WACEhqB,KAAK0pB,qBAAsB,GAE3B,0DAEa1pB,KAAKioB,YACbjB,MAAQhnB,KAAKuqB,aAAavD,KAChC,uBAEDnC,SAAOtf,GACL,IAAMnY,EAAO4S,KAAKioB,YAClBjoB,KAAK+wB,eAAe3jC,EAAKud,KAAM,EAAGvd,EAAKud,KAAKhnB,OAAQ4hB,EACrD,+BAEDwrB,SAAegD,EAAMtpC,EAAO+C,EAAO+X,GAQjC,IAPA,IAAMimB,EAAiB,UAATjmB,EACPphB,EAAgC6b,KAAhC7b,MAAqByjC,EAAW5nB,KAAzBioB,YAAcL,OACtBmE,EAAOnE,EAAOoM,eACdb,EAAavL,EAAOqM,eACpBC,EAAQl0B,KAAKm0B,YACnB,EAAwCn0B,KAAK8vB,kBAAkBrlC,EAAO8a,GAA/DqqB,EAAP,EAAOA,cAAeD,EAAtB,EAAsBA,eAEbnsC,EAAIiH,EAAOjH,EAAIiH,EAAQ+C,EAAOhK,IAAK,CAC1C,IAAMizB,EAASzW,KAAKmtB,UAAU3pC,GACxB4wC,EAAU5I,GAAS9pC,EAAc+0B,EAAOmR,EAAOh6B,OAAS,CAACm+B,KAAAA,EAAMsI,KAAMtI,GAAQ/rB,KAAKs0B,yBAAyB9wC,GAC3G+wC,EAAUv0B,KAAKw0B,yBAAyBhxC,EAAG0wC,GAC3ClN,GAASvQ,EAAOyR,SAAW,CAAC,GAAGN,EAAOh6B,MAEtC+Z,EAAa,CACjBwrB,WAAAA,EACApH,KAAMqI,EAAQrI,KACdsH,oBAAqBrM,GAAS8L,GAAWrc,EAAOkc,UAAaxuC,IAAU6iC,EAAMwB,MAAQrkC,IAAU6iC,EAAMyB,QACrG9iC,EAAGwtC,EAAaiB,EAAQC,KAAOE,EAAQE,OACvC5uC,EAAGstC,EAAaoB,EAAQE,OAASL,EAAQC,KACzCjoB,OAAQ+mB,EAAaoB,EAAQxtC,KAAOI,KAAKa,IAAIosC,EAAQrtC,MACrDyiB,MAAO2pB,EAAahsC,KAAKa,IAAIosC,EAAQrtC,MAAQwtC,EAAQxtC,MAGnD4oC,IACFhoB,EAAW5iB,QAAU6qC,GAAiB5vB,KAAK4uB,0BAA0BprC,EAAGuwC,EAAKvwC,GAAGokB,OAAS,SAAWrC,IAEtG,IAAMxgB,EAAU4iB,EAAW5iB,SAAWgvC,EAAKvwC,GAAGuB,QAC9CiuC,GAAiBrrB,EAAY5iB,EAASiiC,EAAO7iC,GAC7CuvC,GAAiB/rB,EAAY5iB,EAASmvC,EAAM30B,OAC5CS,KAAKkwB,cAAc6D,EAAKvwC,GAAIA,EAAGmkB,EAAYpC,EAC5C,CACF,2BASDmvB,SAAWhpC,EAAMmjC,GACf,IAD0B,EACnBnhC,EAAUsS,KAAKioB,YAAfv6B,OACDm5B,EAAWn5B,EAAOo6B,wBAAwB9nB,KAAKopB,OAClDnU,QAAO7nB,SAAAA,GAAAA,OAAQA,EAAK46B,WAAWjjC,QAAQ4vC,OAAhCvnC,IACJi6B,EAAU35B,EAAO3I,QAAQsiC,QACzBE,EAAS,GAETqN,EAAW,SAACxnC,GAChB,IAAMqpB,EAASrpB,EAAK46B,WAAWmF,UAAU0B,GACnChuB,EAAM4V,GAAUA,EAAOrpB,EAAKw6B,OAAOh6B,MAEzC,GAAIlM,EAAcmf,IAAQlY,MAAMkY,GAC9B,OAAO,CAEV,EAdyB,UAgBPgmB,GAhBO,IAgB1B,IAAK,EAAL,qBAA6B,KAAlBz5B,EAAkB,QAC3B,SAAkByF,IAAdg8B,IAA2B+F,EAASxnC,QASxB,IAAZi6B,IAAqD,IAAhCE,EAAO1iC,QAAQuI,EAAK45B,aAClCn0B,IAAZw0B,QAAwCx0B,IAAfzF,EAAK45B,QAC3BO,EAAOrhC,KAAKkH,EAAK45B,OAEf55B,EAAKjJ,QAAUuH,GACjB,KAEH,CAjCyB,+BA0C1B,OAJK67B,EAAO5jC,QACV4jC,EAAOrhC,UAAK2M,GAGP00B,CACR,+BAMDsN,SAAe1wC,GACb,OAAO6b,KAAK00B,gBAAW7hC,EAAW1O,GAAOR,MAC1C,+BAUDmxC,SAAe5wC,EAAcqiB,EAAMsoB,GACjC,IAAMtH,EAASvnB,KAAK00B,WAAWxwC,EAAc2qC,GACvC1qC,OAAkB0O,IAAT0T,EACXghB,EAAO1iC,QAAQ0hB,IACd,EAEL,OAAmB,IAAZpiB,EACHojC,EAAO5jC,OAAS,EAChBQ,CACL,0BAKDgwC,WACE,IAII3wC,EAAGO,EAJDirB,EAAOhP,KAAKjb,QACZqI,EAAO4S,KAAKioB,YACZv6B,EAASN,EAAKM,OACdqnC,EAAS,GAGf,IAAKvxC,EAAI,EAAGO,EAAOqJ,EAAKud,KAAKhnB,OAAQH,EAAIO,IAAQP,EAC/CuxC,EAAO7uC,KAAKwH,EAAOM,iBAAiBgS,KAAKmtB,UAAU3pC,GAAGkK,EAAOE,MAAOpK,IAGtE,IAAMwxC,EAAehmB,EAAKgmB,aAG1B,MAAO,CACLjsC,IAHUisC,GAAgBtD,GAAqBtkC,GAI/C2nC,OAAAA,EACAtqC,MAAOiD,EAAOunC,YACdvqC,IAAKgD,EAAOwnC,UACZC,WAAYn1B,KAAK60B,iBACjB7uB,MAAOtY,EACPinC,QAAS3lB,EAAK2lB,QAEdp1B,MAAOy1B,EAAe,EAAIhmB,EAAKomB,mBAAqBpmB,EAAKqmB,cAE5D,yCAMDf,SAAyBnwC,GACvB,IAQIkwC,EAAMttC,EARV,EAAoFiZ,KAA7EioB,YAAcL,EAArB,EAAqBA,OAAQsC,EAA7B,EAA6BA,SAA7B,EAAoFlqB,KAA5Cjb,QAAgBuwC,EAAxD,EAAkDvJ,KAAiBwJ,EAAnE,EAAmEA,aAC7DC,EAAaF,GAAa,EAC1B7e,EAASzW,KAAKmtB,UAAUhpC,GACxB4uC,EAAStc,EAAOkc,QAChB8C,EAAW3C,GAAWC,GACxBpxC,EAAQ80B,EAAOmR,EAAOh6B,MACtBnD,EAAQ,EACR9G,EAASumC,EAAWlqB,KAAK+mB,WAAWa,EAAQnR,EAAQyT,GAAYvoC,EAGhEgC,IAAWhC,IACb8I,EAAQ9G,EAAShC,EACjBgC,EAAShC,GAGP8zC,IACF9zC,EAAQoxC,EAAON,SACf9uC,EAASovC,EAAOL,OAASK,EAAON,SAElB,IAAV9wC,GAAekG,EAAKlG,KAAWkG,EAAKkrC,EAAOL,UAC7CjoC,EAAQ,GAEVA,GAAS9I,GAGX,IAAM4wC,EAAc7wC,EAAc4zC,IAAeG,EAAuBhrC,EAAZ6qC,EACxDvJ,EAAOnE,EAAO55B,iBAAiBukC,GAWnC,GAFAxrC,GANEstC,EADEr0B,KAAK4C,MAAM8yB,kBAAkBvxC,GACxByjC,EAAO55B,iBAAiBvD,EAAQ9G,GAGhCooC,GAGKA,EAEV5kC,KAAKa,IAAIjB,GAAQwuC,EAAc,CACjCxuC,EArZN,SAAiBA,EAAM6gC,EAAQ4N,GAC7B,OAAa,IAATzuC,EACKc,EAAKd,IAEN6gC,EAAOqM,eAAiB,GAAK,IAAMrM,EAAO7+B,KAAOysC,EAAa,GAAK,EAC5E,CAgZYG,CAAQ5uC,EAAM6gC,EAAQ4N,GAAcD,EACvC5zC,IAAU6zC,IACZzJ,GAAQhlC,EAAO,GAEjB,IAAM6uC,EAAahO,EAAOiO,mBAAmB,GACvCC,EAAWlO,EAAOiO,mBAAmB,GACrC9sC,EAAM5B,KAAK4B,IAAI6sC,EAAYE,GAC3B9sC,EAAM7B,KAAK6B,IAAI4sC,EAAYE,GAEjCzB,GADAtI,EAAO5kC,KAAK6B,IAAI7B,KAAK4B,IAAIgjC,EAAM/iC,GAAMD,IACvBhC,CACf,CAED,GAAIglC,IAASnE,EAAO55B,iBAAiBwnC,GAAa,CAChD,IAAMO,EAAWluC,EAAKd,GAAQ6gC,EAAOoO,qBAAqBR,GAAc,EACxEzJ,GAAQgK,EACRhvC,GAAQgvC,CACT,CAED,MAAO,CACLhvC,KAAAA,EACAglC,KAAAA,EACAsI,KAAAA,EACAI,OAAQJ,EAAOttC,EAAO,EAEzB,yCAKDytC,SAAyBrwC,EAAO+vC,GAC9B,IAIIO,EAAQ1tC,EAJNif,EAAQkuB,EAAMluB,MACdjhB,EAAUib,KAAKjb,QACf6vC,EAAW7vC,EAAQ6vC,SACnBqB,EAAkBvzC,EAAeqC,EAAQkxC,gBAAiBC,KAEhE,GAAIhC,EAAMS,QAAS,CACjB,IAAMQ,EAAaP,EAAW50B,KAAK60B,eAAe1wC,GAAS+vC,EAAMiB,WAC3DjtC,EAAiC,SAAzBnD,EAAQiwC,aA/gB5B,SAAmC7wC,EAAO+vC,EAAOnvC,EAASowC,GACxD,IAAMJ,EAASb,EAAMa,OACfpD,EAAOoD,EAAO5wC,GAChB80B,EAAO90B,EAAQ,EAAI4wC,EAAO5wC,EAAQ,GAAK,KACvCgzB,EAAOhzB,EAAQ4wC,EAAOpxC,OAAS,EAAIoxC,EAAO5wC,EAAQ,GAAK,KACrDgyC,EAAUpxC,EAAQqwC,mBAEX,OAATnc,IAGFA,EAAO0Y,GAAiB,OAATxa,EAAgB+c,EAAMxpC,IAAMwpC,EAAMzpC,MAAQ0sB,EAAOwa,IAGrD,OAATxa,IAEFA,EAAOwa,EAAOA,EAAO1Y,GAGvB,IAAMxuB,EAAQknC,GAAQA,EAAOxqC,KAAK4B,IAAIkwB,EAAM9B,IAAS,EAAIgf,EAGzD,MAAO,CACLC,MAHWjvC,KAAKa,IAAImvB,EAAO8B,GAAQ,EAAIkd,EAGzBhB,EACd51B,MAAOxa,EAAQswC,cACf5qC,MAAAA,EAEH,CAsfS4rC,CAA0BlyC,EAAO+vC,EAAOnvC,EAASowC,GA5iB3D,SAAkChxC,EAAO+vC,EAAOnvC,EAASowC,GACvD,IACIpuC,EAAMwY,EADJ+2B,EAAYvxC,EAAQiwC,aAc1B,OAXItzC,EAAc40C,IAChBvvC,EAAOmtC,EAAMnrC,IAAMhE,EAAQqwC,mBAC3B71B,EAAQxa,EAAQswC,gBAKhBtuC,EAAOuvC,EAAYnB,EACnB51B,EAAQ,GAGH,CACL62B,MAAOrvC,EAAOouC,EACd51B,MAAAA,EACA9U,MAAOypC,EAAMa,OAAO5wC,GAAU4C,EAAO,EAExC,CAyhBSwvC,CAAyBpyC,EAAO+vC,EAAOnvC,EAASowC,GAE9CqB,EAAax2B,KAAK80B,eAAe90B,KAAK7b,MAAO6b,KAAKioB,YAAYjB,MAAO4N,EAAWzwC,OAAQ0O,GAC9F4hC,EAASvsC,EAAMuC,MAASvC,EAAMkuC,MAAQI,EAAetuC,EAAMkuC,MAAQ,EACnErvC,EAAOI,KAAK4B,IAAIktC,EAAiB/tC,EAAMkuC,MAAQluC,EAAMqX,MACtD,MAECk1B,EAASzuB,EAAMhY,iBAAiBgS,KAAKmtB,UAAUhpC,GAAO6hB,EAAMpY,MAAOzJ,GACnE4C,EAAOI,KAAK4B,IAAIktC,EAAiB/B,EAAMnrC,IAAMmrC,EAAM30B,OAGrD,MAAO,CACLwsB,KAAM0I,EAAS1tC,EAAO,EACtBstC,KAAMI,EAAS1tC,EAAO,EACtB0tC,OAAAA,EACA1tC,KAAAA,EAEH,qBAEDw7B,WAOE,IANA,IAAMn1B,EAAO4S,KAAKioB,YACZL,EAASx6B,EAAKw6B,OACd6O,EAAQrpC,EAAKud,KACb5mB,EAAO0yC,EAAM9yC,OACfH,EAAI,EAEDA,EAAIO,IAAQP,EACsB,OAAnCwc,KAAKmtB,UAAU3pC,GAAGokC,EAAOh6B,OAC3B6oC,EAAMjzC,GAAG++B,KAAKviB,KAAKmJ,KAGxB,OAvYkByqB,CAAsB3K,YAAtB2K,GAAAA,KAEP,eAFOA,GAAAA,WAOD,CAChB9J,oBAAoB,EACpBC,gBAAiB,MAEjBqL,mBAAoB,GACpBC,cAAe,GACfV,SAAS,EAET5sB,WAAY,CACVzG,QAAS,CACPxf,KAAM,SACN6lB,WAAY,CAAC,IAAK,IAAK,OAAQ,QAAS,sBAlB3BisB,GAAAA,YA0BA,CACjB3tB,OAAQ,CACNywB,QAAS,CACP50C,KAAM,WACN2mB,QAAQ,EACRI,KAAM,CACJJ,QAAQ,IAGZkuB,QAAS,CACP70C,KAAM,SACN4mB,aAAa,UCnSAkuB,GAAAA,SAAAA,qIAiCnB5M,WACEhqB,KAAK0pB,qBAAsB,GAC3B,yDACD,mCAMDmD,SAAmBz/B,EAAMud,EAAMlgB,EAAO+C,GAEpC,IADA,IAAMipB,GAAS,iEAAyBrpB,EAAMud,EAAMlgB,EAAO+C,GAClDhK,EAAI,EAAGA,EAAIizB,EAAO9yB,OAAQH,IACjCizB,EAAOjzB,GAAGmvC,QAAU3yB,KAAK4uB,0BAA0BprC,EAAIiH,GAAOqiB,OAEhE,OAAO2J,CACR,+BAMDkW,SAAev/B,EAAMud,EAAMlgB,EAAO+C,GAEhC,IADA,IAAMipB,GAAS,6DAAqBrpB,EAAMud,EAAMlgB,EAAO+C,GAC9ChK,EAAI,EAAGA,EAAIizB,EAAO9yB,OAAQH,IAAK,CACtC,IAAMwD,EAAO2jB,EAAKlgB,EAAQjH,GAC1BizB,EAAOjzB,GAAGmvC,QAAUjwC,EAAesE,EAAK,GAAIgZ,KAAK4uB,0BAA0BprC,EAAIiH,GAAOqiB,OACvF,CACD,OAAO2J,CACR,gCAMDmW,SAAgBx/B,EAAMud,EAAMlgB,EAAO+C,GAEjC,IADA,IAAMipB,GAAS,8DAAsBrpB,EAAMud,EAAMlgB,EAAO+C,GAC/ChK,EAAI,EAAGA,EAAIizB,EAAO9yB,OAAQH,IAAK,CACtC,IAAMwD,EAAO2jB,EAAKlgB,EAAQjH,GAC1BizB,EAAOjzB,GAAGmvC,QAAUjwC,EAAesE,GAAQA,EAAKyL,IAAMzL,EAAKyL,EAAGuN,KAAK4uB,0BAA0BprC,EAAIiH,GAAOqiB,OACzG,CACD,OAAO2J,CACR,+BAKDyX,WAIE,IAHA,IAAMvjB,EAAO3K,KAAKioB,YAAYtd,KAE1B3hB,EAAM,EACDxF,EAAImnB,EAAKhnB,OAAS,EAAGH,GAAK,IAAKA,EACtCwF,EAAM7B,KAAK6B,IAAIA,EAAK2hB,EAAKnnB,GAAGuD,KAAKiZ,KAAK4uB,0BAA0BprC,IAAM,GAExE,OAAOwF,EAAM,GAAKA,CACnB,iCAKDmlC,SAAiBhqC,GACf,IAAMiJ,EAAO4S,KAAKioB,YACZ6E,EAAS9sB,KAAK4C,MAAM+H,KAAKmiB,QAAU,GAClC5+B,EAAkBd,EAAlBc,OAAQC,EAAUf,EAAVe,OACTsoB,EAASzW,KAAKmtB,UAAUhpC,GACxBwB,EAAIuI,EAAOmgC,iBAAiB5X,EAAO9wB,GACnCE,EAAIsI,EAAOkgC,iBAAiB5X,EAAO5wB,GACnC4M,EAAIgkB,EAAOkc,QAEjB,MAAO,CACLvE,MAAOtB,EAAO3oC,IAAU,GACxBxC,MAAO,IAAMgE,EAAI,KAAOE,GAAK4M,EAAI,KAAOA,EAAI,IAAM,IAErD,uBAEDoyB,SAAOtf,GACL,IAAMlY,EAAS2S,KAAKioB,YAAYtd,KAGhC3K,KAAK+wB,eAAe1jC,EAAQ,EAAGA,EAAO1J,OAAQ4hB,EAC/C,+BAEDwrB,SAAe1jC,EAAQ5C,EAAO+C,EAAO+X,GAOnC,IANA,IAAMimB,EAAiB,UAATjmB,EACd,EAAyBvF,KAAKioB,YAAvBv6B,EAAP,EAAOA,OAAQk6B,EAAf,EAAeA,OACf,EAAwC5nB,KAAK8vB,kBAAkBrlC,EAAO8a,GAA/DqqB,EAAP,EAAOA,cAAeD,EAAtB,EAAsBA,eAChBxH,EAAQz6B,EAAOE,KACfw6B,EAAQR,EAAOh6B,KAEZpK,EAAIiH,EAAOjH,EAAIiH,EAAQ+C,EAAOhK,IAAK,CAC1C,IAAMsqB,EAAQzgB,EAAO7J,GACfizB,GAAU+U,GAASxrB,KAAKmtB,UAAU3pC,GAClCmkB,EAAa,CAAC,EACd4Q,EAAS5Q,EAAWwgB,GAASqD,EAAQ99B,EAAOmoC,mBAAmB,IAAOnoC,EAAOM,iBAAiByoB,EAAO0R,IACrG3P,EAAS7Q,EAAWygB,GAASoD,EAAQ5D,EAAOoM,eAAiBpM,EAAO55B,iBAAiByoB,EAAO2R,IAElGzgB,EAAWkP,KAAOluB,MAAM4vB,IAAW5vB,MAAM6vB,GAErCmX,IACFhoB,EAAW5iB,QAAU6qC,GAAiB5vB,KAAK4uB,0BAA0BprC,EAAGsqB,EAAMlG,OAAS,SAAWrC,GAE9FimB,IACF7jB,EAAW5iB,QAAQ+nB,OAAS,IAIhC9M,KAAKkwB,cAAcpiB,EAAOtqB,EAAGmkB,EAAYpC,EAC1C,CACF,0CAODqpB,SAA0BzqC,EAAOohB,GAC/B,IAAMkR,EAASzW,KAAKmtB,UAAUhpC,GAC1Boe,GAAS,wEAAgCpe,EAAOohB,GAGhDhD,EAAOyjB,UACTzjB,EAASxgB,OAAO4M,OAAO,CAAC,EAAG4T,EAAQ,CAACyjB,SAAS,KAI/C,IAAMlZ,EAASvK,EAAOuK,OAMtB,MALa,WAATvH,IACFhD,EAAOuK,OAAS,GAElBvK,EAAOuK,QAAUpqB,EAAe+zB,GAAUA,EAAOkc,QAAS7lB,GAEnDvK,CACR,OApKkBq0B,CAAyB3N,YAAzB2N,GAAAA,KAEP,kBAFOA,GAAAA,WAOD,CAChB9M,oBAAoB,EACpBC,gBAAiB,QAEjBhiB,WAAY,CACVzG,QAAS,CACPxf,KAAM,SACN6lB,WAAY,CAAC,IAAK,IAAK,cAAe,sBAdzBivB,GAAAA,YAsBA,CACjB3wB,OAAQ,CACNtgB,EAAG,CACD7D,KAAM,UAER+D,EAAG,CACD/D,KAAM,iBCKO+0C,GAAAA,SAAAA,iCA0FnB9yB,SAAAA,EAAYnB,EAAO1e,GAAc,6BAC/B,cAAM0e,EAAO1e,IAERwlC,qBAAsB,EAC3B,EAAKoN,iBAAcjkC,EACnB,EAAKkkC,iBAAclkC,EACnB,EAAKqoB,aAAUroB,EACf,EAAKsoB,aAAUtoB,EAPgB,CAQhC,0CAEDo3B,WAAe,sBAKfvT,SAAMjsB,EAAO+C,GACX,IAAMmd,EAAO3K,KAAKuqB,aAAa5f,KACzBvd,EAAO4S,KAAKioB,YAElB,IAAsB,IAAlBjoB,KAAKwW,SACPppB,EAAKO,QAAUgd,MACV,CACL,IAOInnB,EAAGO,EAPHizC,EAAS,SAACxzC,GAAD,OAAQmnB,EAAKnnB,EAAb,EAEb,GAAIpB,EAASuoB,EAAKlgB,IAAS,CACzB,MAAwBuV,KAAKwW,SAAtB5xB,IAAAA,OAAP,MAAa,QAAb,EACAoyC,EAAS,SAACxzC,GAAD,OAAQ6C,EAAiBskB,EAAKnnB,GAAIoB,EAAlC,CACV,CAGD,IAAKpB,EAAIiH,EAAO1G,EAAO0G,EAAQ+C,EAAOhK,EAAIO,IAAQP,EAChD4J,EAAKO,QAAQnK,GAAKwzC,EAAOxzC,EAE5B,CACF,6BAKDyzC,WACE,OAAOhuC,GAAU+W,KAAKjb,QAAQ8nB,SAAW,GAC1C,kCAKDqqB,WACE,OAAOjuC,GAAU+W,KAAKjb,QAAQoyC,cAC/B,oCAMDC,WAIE,IAHA,IAAIruC,EAAM3B,EACN4B,GAAO5B,EAEF5D,EAAI,EAAGA,EAAIwc,KAAK4C,MAAM+H,KAAKtG,SAAS1gB,SAAUH,EACrD,GAAIwc,KAAK4C,MAAMy0B,iBAAiB7zC,IAAMwc,KAAK4C,MAAMyoB,eAAe7nC,GAAG1B,OAASke,KAAKopB,MAAO,CACtF,IAAMpB,EAAahoB,KAAK4C,MAAMyoB,eAAe7nC,GAAGwkC,WAC1Cnb,EAAWmb,EAAWiP,eACtBE,EAAgBnP,EAAWkP,oBAEjCnuC,EAAM5B,KAAK4B,IAAIA,EAAK8jB,GACpB7jB,EAAM7B,KAAK6B,IAAIA,EAAK6jB,EAAWsqB,EAChC,CAGH,MAAO,CACLtqB,SAAU9jB,EACVouC,cAAenuC,EAAMD,EAExB,uBAKD87B,SAAOtf,GACL,I3BxHyB5jB,EAAwBkB,E2ByH1C6rC,EADO1uB,KAAK4C,MACZ8rB,UACDthC,EAAO4S,KAAKioB,YACZqP,EAAOlqC,EAAKud,KACZ4sB,EAAUv3B,KAAKw3B,oBAAsBx3B,KAAKy3B,aAAaH,GAAQt3B,KAAKjb,QAAQwyC,QAC5EG,EAAUvwC,KAAK6B,KAAK7B,KAAK4B,IAAI2lC,EAAUllB,MAAOklB,EAAUtiB,QAAUmrB,GAAW,EAAG,GAChFI,EAASxwC,KAAK4B,K3B9HKpH,E2B8HYqe,KAAKjb,QAAQ4yC,O3B9HD90C,E2B8HS60C,E3B7H3C,kBAAV/1C,GAAsBA,EAAMmB,SAAS,KAC1CC,WAAWpB,GAAS,KACjBA,EAAQkB,G2B2HyD,GAC9D+0C,EAAc53B,KAAK63B,eAAe73B,KAAK7b,OAK7C,EAAkC6b,KAAKo3B,sBAAhCD,EAAP,EAAOA,cACP,EAjNJ,SAA2BtqB,EAAUsqB,EAAeQ,GAClD,IAAIG,EAAS,EACTC,EAAS,EACT7c,EAAU,EACVC,EAAU,EAEd,GAAIgc,EAAgB/vC,EAAK,CACvB,IAAM4wC,EAAanrB,EACborB,EAAWD,EAAab,EACxBe,EAAS/wC,KAAK6I,IAAIgoC,GAClBG,EAAShxC,KAAK4H,IAAIipC,GAClBI,EAAOjxC,KAAK6I,IAAIioC,GAChBI,EAAOlxC,KAAK4H,IAAIkpC,GAChBK,EAAU,SAACtuC,EAAOnD,EAAGC,GAAX,OAAiB0D,GAAcR,EAAOguC,EAAYC,GAAU,GAAQ,EAAI9wC,KAAK6B,IAAInC,EAAGA,EAAI8wC,EAAQ7wC,EAAGA,EAAI6wC,EAAvG,EACVY,EAAU,SAACvuC,EAAOnD,EAAGC,GAAX,OAAiB0D,GAAcR,EAAOguC,EAAYC,GAAU,IAAS,EAAI9wC,KAAK4B,IAAIlC,EAAGA,EAAI8wC,EAAQ7wC,EAAGA,EAAI6wC,EAAxG,EACVa,EAAOF,EAAQ,EAAGJ,EAAQE,GAC1BK,EAAOH,EAAQ7wC,EAAS0wC,EAAQE,GAChCK,EAAOH,EAAQrxC,EAAIgxC,EAAQE,GAC3BO,EAAOJ,EAAQrxC,EAAKO,EAAS0wC,EAAQE,GAC3CP,GAAUU,EAAOE,GAAQ,EACzBX,GAAUU,EAAOE,GAAQ,EACzBzd,IAAYsd,EAAOE,GAAQ,EAC3Bvd,IAAYsd,EAAOE,GAAQ,CAC5B,CACD,MAAO,CAACb,OAAAA,EAAQC,OAAAA,EAAQ7c,QAAAA,EAASC,QAAAA,EAClC,CAwL8Cyd,CAD3C,EAAsB/rB,SACiDsqB,EAAeQ,GAA/EG,EAAP,EAAOA,OAAQC,EAAf,EAAeA,OAAQ7c,EAAvB,EAAuBA,QAASC,EAAhC,EAAgCA,QAC1B1L,GAAYif,EAAUllB,MAAQ+tB,GAAWO,EACzC7b,GAAayS,EAAUtiB,OAASmrB,GAAWQ,EAC3Cc,EAAY1xC,KAAK6B,IAAI7B,KAAK4B,IAAI0mB,EAAUwM,GAAa,EAAG,GACxD8a,EAAcn0C,EAAYod,KAAKjb,QAAQ+nB,OAAQ+rB,GAE/CC,GAAgB/B,EADF5vC,KAAK6B,IAAI+tC,EAAcY,EAAQ,IACA33B,KAAK+4B,gCACxD/4B,KAAKkb,QAAUA,EAAU6b,EACzB/2B,KAAKmb,QAAUA,EAAU4b,EAEzB3pC,EAAK4rC,MAAQh5B,KAAKi5B,iBAElBj5B,KAAK+2B,YAAcA,EAAc+B,EAAe94B,KAAKk5B,qBAAqBl5B,KAAK7b,OAC/E6b,KAAK82B,YAAc3vC,KAAK6B,IAAIgX,KAAK+2B,YAAc+B,EAAelB,EAAa,GAE3E53B,KAAK+wB,eAAeuG,EAAM,EAAGA,EAAK3zC,OAAQ4hB,EAC3C,+BAKD4zB,SAAe31C,EAAGgoC,GAChB,IAAMxc,EAAOhP,KAAKjb,QACZqI,EAAO4S,KAAKioB,YACZkP,EAAgBn3B,KAAKk3B,oBAC3B,OAAI1L,GAAUxc,EAAK9K,UAAUk1B,gBAAmBp5B,KAAK4C,MAAM8yB,kBAAkBlyC,IAA0B,OAApB4J,EAAKO,QAAQnK,IAAe4J,EAAKud,KAAKnnB,GAAGmqC,OACnH,EAEF3tB,KAAKq5B,uBAAuBjsC,EAAKO,QAAQnK,GAAK2zC,EAAgB/vC,EACtE,+BAED2pC,SAAeuG,EAAM7sC,EAAO+C,EAAO+X,GACjC,IAYI/hB,EAZEgoC,EAAiB,UAATjmB,EACR3C,EAAQ5C,KAAK4C,MACb8rB,EAAY9rB,EAAM8rB,UAElB4K,EADO12B,EAAM7d,QACQmf,UACrBq1B,GAAW7K,EAAUnmB,KAAOmmB,EAAUrmB,OAAS,EAC/CmxB,GAAW9K,EAAUtmB,IAAMsmB,EAAUpmB,QAAU,EAC/CmxB,EAAejO,GAAS8N,EAAcG,aACtC3C,EAAc2C,EAAe,EAAIz5B,KAAK82B,YACtCC,EAAc0C,EAAe,EAAIz5B,KAAK+2B,YAC5C,EAAwC/2B,KAAK8vB,kBAAkBrlC,EAAO8a,GAA/DqqB,EAAP,EAAOA,cAAeD,EAAtB,EAAsBA,eAClBqI,EAAah4B,KAAKi3B,eAGtB,IAAKzzC,EAAI,EAAGA,EAAIiH,IAASjH,EACvBw0C,GAAch4B,KAAKm5B,eAAe31C,EAAGgoC,GAGvC,IAAKhoC,EAAIiH,EAAOjH,EAAIiH,EAAQ+C,IAAShK,EAAG,CACtC,IAAM2zC,EAAgBn3B,KAAKm5B,eAAe31C,EAAGgoC,GACvCpe,EAAMkqB,EAAK9zC,GACXmkB,EAAa,CACjBhiB,EAAG4zC,EAAUv5B,KAAKkb,QAClBr1B,EAAG2zC,EAAUx5B,KAAKmb,QAClB6c,WAAAA,EACAC,SAAUD,EAAab,EACvBA,cAAAA,EACAJ,YAAAA,EACAD,YAAAA,GAEEnH,IACFhoB,EAAW5iB,QAAU6qC,GAAiB5vB,KAAK4uB,0BAA0BprC,EAAG4pB,EAAIxF,OAAS,SAAWrC,IAElGyyB,GAAcb,EAEdn3B,KAAKkwB,cAAc9iB,EAAK5pB,EAAGmkB,EAAYpC,EACxC,CACF,+BAED0zB,WACE,IAGIz1C,EAHE4J,EAAO4S,KAAKioB,YACZyR,EAAWtsC,EAAKud,KAClBquB,EAAQ,EAGZ,IAAKx1C,EAAI,EAAGA,EAAIk2C,EAAS/1C,OAAQH,IAAK,CACpC,IAAM7B,EAAQyL,EAAKO,QAAQnK,GACb,OAAV7B,GAAmBgH,MAAMhH,KAAUqe,KAAK4C,MAAM8yB,kBAAkBlyC,IAAOk2C,EAASl2C,GAAGmqC,SACrFqL,GAAS7xC,KAAKa,IAAIrG,GAErB,CAED,OAAOq3C,CACR,uCAEDK,SAAuB13C,GACrB,IAAMq3C,EAAQh5B,KAAKioB,YAAY+Q,MAC/B,OAAIA,EAAQ,IAAMrwC,MAAMhH,GACfyF,GAAOD,KAAKa,IAAIrG,GAASq3C,GAE3B,CACR,iCAED7K,SAAiBhqC,GACf,IAAMiJ,EAAO4S,KAAKioB,YACZrlB,EAAQ5C,KAAK4C,MACbkqB,EAASlqB,EAAM+H,KAAKmiB,QAAU,GAC9BnrC,EAAQ+f,GAAatU,EAAKO,QAAQxJ,GAAQye,EAAM7d,QAAQ6c,QAE9D,MAAO,CACLwsB,MAAOtB,EAAO3oC,IAAU,GACxBxC,MAAAA,EAEH,kCAED61C,SAAkBF,GAChB,IAEI9zC,EAAGO,EAAMqJ,EAAM46B,EAAYjjC,EAF3BiE,EAAM,EACJ4Z,EAAQ5C,KAAK4C,MAGnB,IAAK00B,EAEH,IAAK9zC,EAAI,EAAGO,EAAO6e,EAAM+H,KAAKtG,SAAS1gB,OAAQH,EAAIO,IAAQP,EACzD,GAAIof,EAAMy0B,iBAAiB7zC,GAAI,CAE7B8zC,GADAlqC,EAAOwV,EAAMyoB,eAAe7nC,IAChBmnB,KACZqd,EAAa56B,EAAK46B,WAClB,KACD,CAIL,IAAKsP,EACH,OAAO,EAGT,IAAK9zC,EAAI,EAAGO,EAAOuzC,EAAK3zC,OAAQH,EAAIO,IAAQP,EAEd,WAD5BuB,EAAUijC,EAAW4G,0BAA0BprC,IACnCm2C,cACV3wC,EAAM7B,KAAK6B,IAAIA,EAAKjE,EAAQ4oB,aAAe,EAAG5oB,EAAQ60C,kBAAoB,IAG9E,OAAO5wC,CACR,6BAEDyuC,SAAaH,GAGX,IAFA,IAAItuC,EAAM,EAEDxF,EAAI,EAAGO,EAAOuzC,EAAK3zC,OAAQH,EAAIO,IAAQP,EAAG,CACjD,IAAMuB,EAAUib,KAAK4uB,0BAA0BprC,GAC/CwF,EAAM7B,KAAK6B,IAAIA,EAAKjE,EAAQ0jB,QAAU,EAAG1jB,EAAQ80C,aAAe,EACjE,CACD,OAAO7wC,CACR,qCAMDkwC,SAAqBh1C,GAGnB,IAFA,IAAI41C,EAAmB,EAEdt2C,EAAI,EAAGA,EAAIU,IAAgBV,EAC9Bwc,KAAK4C,MAAMy0B,iBAAiB7zC,KAC9Bs2C,GAAoB95B,KAAK63B,eAAer0C,IAI5C,OAAOs2C,CACR,+BAKDjC,SAAe3zC,GACb,OAAOiD,KAAK6B,IAAItG,EAAesd,KAAK4C,MAAM+H,KAAKtG,SAASngB,GAAcmc,OAAQ,GAAI,EACnF,8CAMD04B,WACE,OAAO/4B,KAAKk5B,qBAAqBl5B,KAAK4C,MAAM+H,KAAKtG,SAAS1gB,SAAW,CACtE,OAtWkBkzC,CAA2B5N,YAA3B4N,GAAAA,KAEP,oBAFOA,GAAAA,WAOD,CAChB/M,oBAAoB,EACpBC,gBAAiB,MACjB7lB,UAAW,CAETk1B,eAAe,EAEfK,cAAc,GAEhB1xB,WAAY,CACVzG,QAAS,CACPxf,KAAM,SACN6lB,WAAY,CAAC,gBAAiB,WAAY,cAAe,cAAe,aAAc,IAAK,IAAK,SAAU,cAAe,aAI7HgwB,OAAQ,MAGR9qB,SAAU,EAGVsqB,cAAe,IAGfrqB,OAAQ,OAGRyqB,QAAS,EAETlyB,UAAW,cArCMwxB,GAAAA,cAwCE,CACnB3vB,YAAa,SAACX,GAAD,MAAmB,YAATA,CAAV,EACba,WAAY,SAACb,GAAD,MAAmB,YAATA,CAAV,YA1CKswB,GAAAA,YAgDA,CACjB9a,YAAa,EAGbjW,QAAS,CACPi0B,OAAQ,CACNjN,OAAQ,CACNkN,eADM,SACSp3B,GACb,IAAM+H,EAAO/H,EAAM+H,KACnB,GAAIA,EAAKmiB,OAAOnpC,QAAUgnB,EAAKtG,SAAS1gB,OAAQ,CAC9C,MAAsCif,EAAMm3B,OAAOh1C,QAA5C+nC,OAASlgB,EAAhB,EAAgBA,WAAYxM,EAA5B,EAA4BA,MAE5B,OAAOuK,EAAKmiB,OAAOxoC,KAAI,SAAC8pC,EAAO5qC,GAC7B,IACMshB,EADOlC,EAAMyoB,eAAe,GACfrD,WAAWvK,SAASj6B,GAEvC,MAAO,CACLkmB,KAAM0kB,EACNve,UAAW/K,EAAMX,gBACjBoL,YAAazK,EAAMV,YACnB61B,UAAW75B,EACX0I,UAAWhE,EAAM6I,YACjBf,WAAYA,EACZ+gB,QAAS/qB,EAAM8yB,kBAAkBlyC,GAGjCW,MAAOX,EAEV,GACF,CACD,MAAO,EACR,GAGHoiB,QA7BM,SA6BErc,EAAG2wC,EAAYH,GACrBA,EAAOn3B,MAAMu3B,qBAAqBD,EAAW/1C,OAC7C41C,EAAOn3B,MAAMiiB,QACd,UCpHYuV,GAAAA,SAAAA,qIA6BnBpQ,WACEhqB,KAAK0pB,qBAAsB,EAC3B1pB,KAAK2pB,oBAAqB,GAC1B,yDACD,uBAED9E,SAAOtf,GACL,IAAMnY,EAAO4S,KAAKioB,YACFlZ,EAAqC3hB,EAA9Ck9B,QAAP,EAAqDl9B,EAA/Bud,KAAMtd,OAA5B,MAAqC,GAArC,EAAyCgtC,EAAYjtC,EAAZitC,SAEnC/sC,EAAqB0S,KAAK4C,MAAMitB,oBACtC,EAAqB1iC,GAAiCC,EAAMC,EAAQC,GAA/D7C,EAAL,EAAKA,MAAO+C,EAAZ,EAAYA,MAEZwS,KAAKwpB,WAAa/+B,EAClBuV,KAAKypB,WAAaj8B,EAEdS,GAAoBb,KACtB3C,EAAQ,EACR+C,EAAQH,EAAO1J,QAIjBorB,EAAKqR,OAASpgB,KAAK4C,MACnBmM,EAAKwR,cAAgBvgB,KAAK7b,MAC1B4qB,EAAKurB,aAAeD,EAASC,WAC7BvrB,EAAK1hB,OAASA,EAEd,IAAMtI,EAAUib,KAAK2uB,6BAA6BppB,GAC7CvF,KAAKjb,QAAQmhB,WAChBnhB,EAAQ4oB,YAAc,GAExB5oB,EAAQs6B,QAAUrf,KAAKjb,QAAQs6B,QAC/Brf,KAAKkwB,cAAcnhB,OAAMlc,EAAW,CAClC0nC,UAAWjtC,EACXvI,QAAAA,GACCwgB,GAGHvF,KAAK+wB,eAAe1jC,EAAQ5C,EAAO+C,EAAO+X,EAC3C,+BAEDwrB,SAAe1jC,EAAQ5C,EAAO+C,EAAO+X,GAanC,IAZA,IAAMimB,EAAiB,UAATjmB,EACd,EAA6CvF,KAAKioB,YAA3Cv6B,EAAP,EAAOA,OAAQk6B,EAAf,EAAeA,OAAQsC,EAAvB,EAAuBA,SAAUmQ,EAAjC,EAAiCA,SACjC,EAAwCr6B,KAAK8vB,kBAAkBrlC,EAAO8a,GAA/DqqB,EAAP,EAAOA,cAAeD,EAAtB,EAAsBA,eAChBxH,EAAQz6B,EAAOE,KACfw6B,EAAQR,EAAOh6B,KACrB,EAA4BoS,KAAKjb,QAA1B8zB,EAAP,EAAOA,SAAUwG,EAAjB,EAAiBA,QACXmb,EAAe/xC,EAASowB,GAAYA,EAAWv2B,OAAOiF,kBACtDkzC,EAAez6B,KAAK4C,MAAMitB,qBAAuBrE,GAAkB,SAATjmB,EAC1D7a,EAAMD,EAAQ+C,EACdktC,EAAcrtC,EAAO1J,OACvBg3C,EAAalwC,EAAQ,GAAKuV,KAAKmtB,UAAU1iC,EAAQ,GAE5CjH,EAAI,EAAGA,EAAIk3C,IAAel3C,EAAG,CACpC,IAAMsqB,EAAQzgB,EAAO7J,GACfmkB,EAAa8yB,EAAe3sB,EAAQ,CAAC,EAE3C,GAAItqB,EAAIiH,GAASjH,GAAKkH,EACpBid,EAAWkP,MAAO,MADpB,CAKA,IAAMJ,EAASzW,KAAKmtB,UAAU3pC,GACxBo3C,EAAWl5C,EAAc+0B,EAAO2R,IAChC7P,EAAS5Q,EAAWwgB,GAASz6B,EAAOM,iBAAiByoB,EAAO0R,GAAQ3kC,GACpEg1B,EAAS7Q,EAAWygB,GAASoD,GAASoP,EAAWhT,EAAOoM,eAAiBpM,EAAO55B,iBAAiBk8B,EAAWlqB,KAAK+mB,WAAWa,EAAQnR,EAAQyT,GAAYzT,EAAO2R,GAAQ5kC,GAE7KmkB,EAAWkP,KAAOluB,MAAM4vB,IAAW5vB,MAAM6vB,IAAWoiB,EACpDjzB,EAAW2b,KAAO9/B,EAAI,GAAM2D,KAAKa,IAAIyuB,EAAO0R,GAASwS,EAAWxS,IAAWqS,EACvEnb,IACF1X,EAAW8O,OAASA,EACpB9O,EAAWmnB,IAAMuL,EAAS1vB,KAAKnnB,IAG7BmsC,IACFhoB,EAAW5iB,QAAU6qC,GAAiB5vB,KAAK4uB,0BAA0BprC,EAAGsqB,EAAMlG,OAAS,SAAWrC,IAG/Fk1B,GACHz6B,KAAKkwB,cAAcpiB,EAAOtqB,EAAGmkB,EAAYpC,GAG3Co1B,EAAalkB,CAtBZ,CAuBF,CACF,+BAKDyX,WACE,IAAM9gC,EAAO4S,KAAKioB,YACZqC,EAAUl9B,EAAKk9B,QACfjhB,EAASihB,EAAQvlC,SAAWulC,EAAQvlC,QAAQ4oB,aAAe,EAC3DhD,EAAOvd,EAAKud,MAAQ,GAC1B,IAAKA,EAAKhnB,OACR,OAAO0lB,EAET,IAAM2N,EAAarM,EAAK,GAAG5jB,KAAKiZ,KAAK4uB,0BAA0B,IACzDiM,EAAYlwB,EAAKA,EAAKhnB,OAAS,GAAGoD,KAAKiZ,KAAK4uB,0BAA0BjkB,EAAKhnB,OAAS,IAC1F,OAAOwD,KAAK6B,IAAIqgB,EAAQ2N,EAAY6jB,GAAa,CAClD,qBAEDtY,WACE,IAAMn1B,EAAO4S,KAAKioB,YAClB76B,EAAKk9B,QAAQwQ,oBAAoB96B,KAAK4C,MAAM8rB,UAAWthC,EAAKM,OAAOE,OACnE,mDACD,OAxIkBwsC,CAAuBnR,YAAvBmR,GAAAA,KAEP,gBAFOA,GAAAA,WAOD,CAChBtQ,mBAAoB,OACpBC,gBAAiB,QAEjB7jB,UAAU,EACV2S,UAAU,YAZOuhB,GAAAA,YAkBA,CACjBn0B,OAAQ,CACNywB,QAAS,CACP50C,KAAM,YAER60C,QAAS,CACP70C,KAAM,iBC1BOi5C,GAAAA,SAAAA,iCAoFnBh3B,SAAAA,EAAYnB,EAAO1e,GAAc,6BAC/B,cAAM0e,EAAO1e,IAER4yC,iBAAcjkC,EACnB,EAAKkkC,iBAAclkC,EAJY,CAKhC,gDAEDs7B,SAAiBhqC,GACf,IAAMiJ,EAAO4S,KAAKioB,YACZrlB,EAAQ5C,KAAK4C,MACbkqB,EAASlqB,EAAM+H,KAAKmiB,QAAU,GAC9BnrC,EAAQ+f,GAAatU,EAAKO,QAAQxJ,GAAOsO,EAAGmQ,EAAM7d,QAAQ6c,QAEhE,MAAO,CACLwsB,MAAOtB,EAAO3oC,IAAU,GACxBxC,MAAAA,EAEH,gCAEDirC,SAAgBx/B,EAAMud,EAAMlgB,EAAO+C,GACjC,OAAO+oB,GAA4BykB,KAAKh7B,KAAjCuW,CAAuCnpB,EAAMud,EAAMlgB,EAAO+C,EAClE,uBAEDq3B,SAAOtf,GACL,IAAM+xB,EAAOt3B,KAAKioB,YAAYtd,KAE9B3K,KAAKi7B,gBACLj7B,KAAK+wB,eAAeuG,EAAM,EAAGA,EAAK3zC,OAAQ4hB,EAC3C,0BAKDioB,WAAY,WACJpgC,EAAO4S,KAAKioB,YACZ//B,EAAQ,CAACa,IAAKzG,OAAOiF,kBAAmByB,IAAK1G,OAAOurC,mBAgB1D,OAdAzgC,EAAKud,KAAKve,SAAQ,SAAC8tB,EAAS/1B,GAC1B,IAAMsyB,EAAS,EAAK0W,UAAUhpC,GAAOsO,GAEhC9J,MAAM8tB,IAAW,EAAK7T,MAAM8yB,kBAAkBvxC,KAC7CsyB,EAASvuB,EAAMa,MACjBb,EAAMa,IAAM0tB,GAGVA,EAASvuB,EAAMc,MACjBd,EAAMc,IAAMytB,GAGjB,IAEMvuB,CACR,8BAKD+yC,WACE,IAAMr4B,EAAQ5C,KAAK4C,MACb8rB,EAAY9rB,EAAM8rB,UAClB1f,EAAOpM,EAAM7d,QACbm2C,EAAU/zC,KAAK4B,IAAI2lC,EAAUrmB,MAAQqmB,EAAUnmB,KAAMmmB,EAAUpmB,OAASomB,EAAUtmB,KAElF2uB,EAAc5vC,KAAK6B,IAAIkyC,EAAU,EAAG,GAEpCpC,GAAgB/B,EADF5vC,KAAK6B,IAAIgmB,EAAKmsB,iBAAmBpE,EAAe,IAAQ/nB,EAAKmsB,iBAAoB,EAAG,IACrDv4B,EAAMw4B,yBAEzDp7B,KAAK+2B,YAAcA,EAAe+B,EAAe94B,KAAK7b,MACtD6b,KAAK82B,YAAc92B,KAAK+2B,YAAc+B,CACvC,+BAED/H,SAAeuG,EAAM7sC,EAAO+C,EAAO+X,GACjC,IASI/hB,EATEgoC,EAAiB,UAATjmB,EACR3C,EAAQ5C,KAAK4C,MAEb02B,EADO12B,EAAM7d,QACQmf,UACrB8B,EAAQhG,KAAKioB,YAAYmD,OACzBmO,EAAUvzB,EAAMq1B,QAChB7B,EAAUxzB,EAAMs1B,QAChBC,EAAoBv1B,EAAMw1B,cAAc,GAAK,GAAMt0C,EACrD8C,EAAQuxC,EAGNE,EAAe,IAAMz7B,KAAK07B,uBAEhC,IAAKl4C,EAAI,EAAGA,EAAIiH,IAASjH,EACvBwG,GAASgW,KAAK27B,cAAcn4C,EAAG+hB,EAAMk2B,GAEvC,IAAKj4C,EAAIiH,EAAOjH,EAAIiH,EAAQ+C,EAAOhK,IAAK,CACtC,IAAM4pB,EAAMkqB,EAAK9zC,GACbw0C,EAAahuC,EACbiuC,EAAWjuC,EAAQgW,KAAK27B,cAAcn4C,EAAG+hB,EAAMk2B,GAC/C1E,EAAcn0B,EAAM8yB,kBAAkBlyC,GAAKwiB,EAAM41B,8BAA8B57B,KAAKmtB,UAAU3pC,GAAGiP,GAAK,EAC1GzI,EAAQiuC,EAEJzM,IACE8N,EAAcG,eAChB1C,EAAc,GAEZuC,EAAcF,gBAChBpB,EAAaC,EAAWsD,IAI5B,IAAM5zB,EAAa,CACjBhiB,EAAG4zC,EACH1zC,EAAG2zC,EACH1C,YAAa,EACbC,YAAAA,EACAiB,WAAAA,EACAC,SAAAA,EACAlzC,QAASib,KAAK4uB,0BAA0BprC,EAAG4pB,EAAIxF,OAAS,SAAWrC,IAGrEvF,KAAKkwB,cAAc9iB,EAAK5pB,EAAGmkB,EAAYpC,EACxC,CACF,qCAEDm2B,WAAuB,WACftuC,EAAO4S,KAAKioB,YACdz6B,EAAQ,EAQZ,OANAJ,EAAKud,KAAKve,SAAQ,SAAC8tB,EAAS/1B,IACrBwE,MAAM,EAAKwkC,UAAUhpC,GAAOsO,IAAM,EAAKmQ,MAAM8yB,kBAAkBvxC,IAClEqJ,GAEH,IAEMA,CACR,8BAKDmuC,SAAcx3C,EAAOohB,EAAMk2B,GACzB,OAAOz7B,KAAK4C,MAAM8yB,kBAAkBvxC,GAChC8E,GAAU+W,KAAK4uB,0BAA0BzqC,EAAOohB,GAAMvb,OAASyxC,GAC/D,CACL,OA9NkBV,CAA4B9R,YAA5B8R,GAAAA,KAEP,qBAFOA,GAAAA,WAOD,CAChBhR,gBAAiB,MACjB7lB,UAAW,CACTk1B,eAAe,EACfK,cAAc,GAEhB1xB,WAAY,CACVzG,QAAS,CACPxf,KAAM,SACN6lB,WAAY,CAAC,IAAK,IAAK,aAAc,WAAY,cAAe,iBAGpEtC,UAAW,IACX2yB,WAAY,YApBK+C,GAAAA,YA0BA,CACjBhf,YAAa,EAEbjW,QAAS,CACPi0B,OAAQ,CACNjN,OAAQ,CACNkN,eADM,SACSp3B,GACb,IAAM+H,EAAO/H,EAAM+H,KACnB,GAAIA,EAAKmiB,OAAOnpC,QAAUgnB,EAAKtG,SAAS1gB,OAAQ,CAC9C,MAAsCif,EAAMm3B,OAAOh1C,QAA5C+nC,OAASlgB,EAAhB,EAAgBA,WAAYxM,EAA5B,EAA4BA,MAE5B,OAAOuK,EAAKmiB,OAAOxoC,KAAI,SAAC8pC,EAAO5qC,GAC7B,IACMshB,EADOlC,EAAMyoB,eAAe,GACfrD,WAAWvK,SAASj6B,GAEvC,MAAO,CACLkmB,KAAM0kB,EACNve,UAAW/K,EAAMX,gBACjBoL,YAAazK,EAAMV,YACnB61B,UAAW75B,EACX0I,UAAWhE,EAAM6I,YACjBf,WAAYA,EACZ+gB,QAAS/qB,EAAM8yB,kBAAkBlyC,GAGjCW,MAAOX,EAEV,GACF,CACD,MAAO,EACR,GAGHoiB,QA7BM,SA6BErc,EAAG2wC,EAAYH,GACrBA,EAAOn3B,MAAMu3B,qBAAqBD,EAAW/1C,OAC7C41C,EAAOn3B,MAAMiiB,QACd,IAIL5e,OAAQ,CACNxT,EAAG,CACD3Q,KAAM,eACN+5C,WAAY,CACVrzB,SAAS,GAEXE,aAAa,EACbG,KAAM,CACJizB,UAAU,GAEZC,YAAa,CACXvzB,SAAS,GAEXwvB,WAAY,UC/ECgE,GAAAA,SAAAA,6GAAAA,CAAsBnF,YAAtBmF,GAAAA,KAEP,eAFOA,GAAAA,WAOD,CAEhBrE,OAAQ,EAGR9qB,SAAU,EAGVsqB,cAAe,IAGfrqB,OAAQ,aClBSmvB,GAAAA,SAAAA,2IAmCnB9N,SAAiBhqC,GACf,IAAMyjC,EAAS5nB,KAAKioB,YAAYL,OAC1BnR,EAASzW,KAAKmtB,UAAUhpC,GAE9B,MAAO,CACLiqC,MAAOxG,EAAOmF,YAAY5oC,GAC1BxC,MAAO,GAAKimC,EAAOyG,iBAAiB5X,EAAOmR,EAAOh6B,OAErD,gCAEDg/B,SAAgBx/B,EAAMud,EAAMlgB,EAAO+C,GACjC,OAAO+oB,GAA4BykB,KAAKh7B,KAAjCuW,CAAuCnpB,EAAMud,EAAMlgB,EAAO+C,EAClE,uBAEDq3B,SAAOtf,GACL,IAAMnY,EAAO4S,KAAKioB,YACZlZ,EAAO3hB,EAAKk9B,QACZj9B,EAASD,EAAKud,MAAQ,GACtBmiB,EAAS1/B,EAAKM,OAAOq/B,YAK3B,GAFAhe,EAAK1hB,OAASA,EAED,WAATkY,EAAmB,CACrB,IAAMxgB,EAAUib,KAAK2uB,6BAA6BppB,GAC7CvF,KAAKjb,QAAQmhB,WAChBnhB,EAAQ4oB,YAAc,GAGxB,IAAMhG,EAAa,CACjB4c,OAAO,EACP2X,UAAWpP,EAAOnpC,SAAW0J,EAAO1J,OACpCoB,QAAAA,GAGFib,KAAKkwB,cAAcnhB,OAAMlc,EAAW8U,EAAYpC,EACjD,CAGDvF,KAAK+wB,eAAe1jC,EAAQ,EAAGA,EAAO1J,OAAQ4hB,EAC/C,+BAEDwrB,SAAe1jC,EAAQ5C,EAAO+C,EAAO+X,GAInC,IAHA,IAAMS,EAAQhG,KAAKioB,YAAYmD,OACzBI,EAAiB,UAATjmB,EAEL/hB,EAAIiH,EAAOjH,EAAIiH,EAAQ+C,EAAOhK,IAAK,CAC1C,IAAMsqB,EAAQzgB,EAAO7J,GACfuB,EAAUib,KAAK4uB,0BAA0BprC,EAAGsqB,EAAMlG,OAAS,SAAWrC,GACtE42B,EAAgBn2B,EAAMo2B,yBAAyB54C,EAAGwc,KAAKmtB,UAAU3pC,GAAGiP,GAEpE9M,EAAI6lC,EAAQxlB,EAAMq1B,QAAUc,EAAcx2C,EAC1CE,EAAI2lC,EAAQxlB,EAAMs1B,QAAUa,EAAct2C,EAE1C8hB,EAAa,CACjBhiB,EAAAA,EACAE,EAAAA,EACAmE,MAAOmyC,EAAcnyC,MACrB6sB,KAAMluB,MAAMhD,IAAMgD,MAAM9C,GACxBd,QAAAA,GAGFib,KAAKkwB,cAAcpiB,EAAOtqB,EAAGmkB,EAAYpC,EAC1C,CACF,OAnGkB02B,CAAwBhT,YAAxBgT,GAAAA,KAEP,iBAFOA,GAAAA,WAOD,CAChBnS,mBAAoB,OACpBC,gBAAiB,QACjB1kB,UAAW,IACXa,UAAU,EACVxB,SAAU,CACRqK,KAAM,CACJrB,KAAM,oBAdOuuB,GAAAA,YAsBA,CACjBlgB,YAAa,EAEb9V,OAAQ,CACNxT,EAAG,CACD3Q,KAAM,uBCzBOu6C,GAAAA,SAAAA,2IAoCnBlO,SAAiBhqC,GACf,IAAMiJ,EAAO4S,KAAKioB,YACZ6E,EAAS9sB,KAAK4C,MAAM+H,KAAKmiB,QAAU,GAClC5+B,EAAkBd,EAAlBc,OAAQC,EAAUf,EAAVe,OACTsoB,EAASzW,KAAKmtB,UAAUhpC,GACxBwB,EAAIuI,EAAOmgC,iBAAiB5X,EAAO9wB,GACnCE,EAAIsI,EAAOkgC,iBAAiB5X,EAAO5wB,GAEzC,MAAO,CACLuoC,MAAOtB,EAAO3oC,IAAU,GACxBxC,MAAO,IAAMgE,EAAI,KAAOE,EAAI,IAE/B,uBAEDg/B,SAAOtf,GACL,IAAMnY,EAAO4S,KAAKioB,YAClB,EAA4B76B,EAArBud,KAAMtd,OAAb,MAAsB,GAAtB,EAEMC,EAAqB0S,KAAK4C,MAAMitB,oBACtC,EAAqB1iC,GAAiCC,EAAMC,EAAQC,GAA/D7C,EAAL,EAAKA,MAAO+C,EAAZ,EAAYA,MAUZ,GARAwS,KAAKwpB,WAAa/+B,EAClBuV,KAAKypB,WAAaj8B,EAEdS,GAAoBb,KACtB3C,EAAQ,EACR+C,EAAQH,EAAO1J,QAGbqc,KAAKjb,QAAQmhB,SAAU,CAEzB,IAAgB6I,EAAkB3hB,EAA3Bk9B,QAAe+P,EAAYjtC,EAAZitC,SAGtBtrB,EAAKqR,OAASpgB,KAAK4C,MACnBmM,EAAKwR,cAAgBvgB,KAAK7b,MAC1B4qB,EAAKurB,aAAeD,EAASC,WAC7BvrB,EAAK1hB,OAASA,EAEd,IAAMtI,EAAUib,KAAK2uB,6BAA6BppB,GAClDxgB,EAAQs6B,QAAUrf,KAAKjb,QAAQs6B,QAC/Brf,KAAKkwB,cAAcnhB,OAAMlc,EAAW,CAClC0nC,UAAWjtC,EACXvI,QAAAA,GACCwgB,EACJ,CAGDvF,KAAK+wB,eAAe1jC,EAAQ5C,EAAO+C,EAAO+X,EAC3C,4BAED4kB,WACE,IAAOjkB,EAAYlG,KAAKjb,QAAjBmhB,UAEFlG,KAAK8pB,oBAAsB5jB,IAC9BlG,KAAK8pB,mBAAqB9pB,KAAK4C,MAAM05B,SAASC,WAAW,UAG3D,0DACD,+BAEDxL,SAAe1jC,EAAQ5C,EAAO+C,EAAO+X,GAanC,IAZA,IAAMimB,EAAiB,UAATjmB,EACd,EAA6CvF,KAAKioB,YAA3Cv6B,EAAP,EAAOA,OAAQk6B,EAAf,EAAeA,OAAQsC,EAAvB,EAAuBA,SAAUmQ,EAAjC,EAAiCA,SAC3BtK,EAAY/vB,KAAK4uB,0BAA0BnkC,EAAO8a,GAClDqqB,EAAgB5vB,KAAK0vB,iBAAiBK,GACtCJ,EAAiB3vB,KAAK2vB,eAAepqB,EAAMqqB,GAC3CzH,EAAQz6B,EAAOE,KACfw6B,EAAQR,EAAOh6B,KACrB,EAA4BoS,KAAKjb,QAA1B8zB,EAAP,EAAOA,SAAUwG,EAAjB,EAAiBA,QACXmb,EAAe/xC,EAASowB,GAAYA,EAAWv2B,OAAOiF,kBACtDkzC,EAAez6B,KAAK4C,MAAMitB,qBAAuBrE,GAAkB,SAATjmB,EAC5Do1B,EAAalwC,EAAQ,GAAKuV,KAAKmtB,UAAU1iC,EAAQ,GAE5CjH,EAAIiH,EAAOjH,EAAIiH,EAAQ+C,IAAShK,EAAG,CAC1C,IAAMsqB,EAAQzgB,EAAO7J,GACfizB,EAASzW,KAAKmtB,UAAU3pC,GACxBmkB,EAAa8yB,EAAe3sB,EAAQ,CAAC,EACrC8sB,EAAWl5C,EAAc+0B,EAAO2R,IAChC7P,EAAS5Q,EAAWwgB,GAASz6B,EAAOM,iBAAiByoB,EAAO0R,GAAQ3kC,GACpEg1B,EAAS7Q,EAAWygB,GAASoD,GAASoP,EAAWhT,EAAOoM,eAAiBpM,EAAO55B,iBAAiBk8B,EAAWlqB,KAAK+mB,WAAWa,EAAQnR,EAAQyT,GAAYzT,EAAO2R,GAAQ5kC,GAE7KmkB,EAAWkP,KAAOluB,MAAM4vB,IAAW5vB,MAAM6vB,IAAWoiB,EACpDjzB,EAAW2b,KAAO9/B,EAAI,GAAM2D,KAAKa,IAAIyuB,EAAO0R,GAASwS,EAAWxS,IAAWqS,EACvEnb,IACF1X,EAAW8O,OAASA,EACpB9O,EAAWmnB,IAAMuL,EAAS1vB,KAAKnnB,IAG7BmsC,IACFhoB,EAAW5iB,QAAU6qC,GAAiB5vB,KAAK4uB,0BAA0BprC,EAAGsqB,EAAMlG,OAAS,SAAWrC,IAG/Fk1B,GACHz6B,KAAKkwB,cAAcpiB,EAAOtqB,EAAGmkB,EAAYpC,GAG3Co1B,EAAalkB,CACd,CAEDzW,KAAKiwB,oBAAoBL,EAAerqB,EAAMwqB,EAC/C,+BAKD7B,WACE,IAAM9gC,EAAO4S,KAAKioB,YACZtd,EAAOvd,EAAKud,MAAQ,GAE1B,IAAK3K,KAAKjb,QAAQmhB,SAAU,CAE1B,IADA,IAAIld,EAAM,EACDxF,EAAImnB,EAAKhnB,OAAS,EAAGH,GAAK,IAAKA,EACtCwF,EAAM7B,KAAK6B,IAAIA,EAAK2hB,EAAKnnB,GAAGuD,KAAKiZ,KAAK4uB,0BAA0BprC,IAAM,GAExE,OAAOwF,EAAM,GAAKA,CACnB,CAED,IAAMshC,EAAUl9B,EAAKk9B,QACfjhB,EAASihB,EAAQvlC,SAAWulC,EAAQvlC,QAAQ4oB,aAAe,EAEjE,IAAKhD,EAAKhnB,OACR,OAAO0lB,EAGT,IAAM2N,EAAarM,EAAK,GAAG5jB,KAAKiZ,KAAK4uB,0BAA0B,IACzDiM,EAAYlwB,EAAKA,EAAKhnB,OAAS,GAAGoD,KAAKiZ,KAAK4uB,0BAA0BjkB,EAAKhnB,OAAS,IAC1F,OAAOwD,KAAK6B,IAAIqgB,EAAQ2N,EAAY6jB,GAAa,CAClD,OApKkBwB,CAA0BpT,YAA1BoT,GAAAA,KAEP,mBAFOA,GAAAA,WAOD,CAChBvS,oBAAoB,EACpBC,gBAAiB,QACjB7jB,UAAU,EACVwH,MAAM,YAXW2uB,GAAAA,YAiBA,CAEjB/2B,YAAa,CACXC,KAAM,SAGRU,OAAQ,CACNtgB,EAAG,CACD7D,KAAM,UAER+D,EAAG,CACD/D,KAAM,aC+Bd,SAAS06C,KACP,MAAM,IAAI/nB,MAAM,kFACjB,KAgED,GAAe,CACbgoB,MAzDIC,WAoBJ34B,SAAAA,EAAYhf,IAAoB,eAC9Bib,KAAKjb,QAAUA,GAAW,CAAC,CAC5B,oCAGD43C,WAAS,wBAETC,WACE,OAAOJ,IACR,sBAED9lB,WACE,OAAO8lB,IACR,uBAEDn6B,WACE,OAAOm6B,IACR,oBAED/vC,WACE,OAAO+vC,IACR,qBAEDK,WACE,OAAOL,IACR,wBAEDM,WACE,OAAON,IACR,sBAEDO,WACE,OAAOP,IACR,2BAzCD,SACEQ,GAEAj7C,OAAO4M,OAAO+tC,EAAgB16C,UAAWg7C,EAC1C,OAhBGN,ICrDN,SAASO,GAAaC,EAAStvC,EAAMjM,EAAO6jB,GAC1C,IAAOwiB,EAA6BkV,EAA7BlV,WAAYrd,EAAiBuyB,EAAjBvyB,KAAMld,EAAWyvC,EAAXzvC,QACnBC,EAASs6B,EAAWC,YAAYv6B,OACtC,GAAIA,GAAUE,IAASF,EAAOE,MAAiB,MAATA,GAAgBH,GAAWkd,EAAKhnB,OAAQ,CAC5E,IAAMw5C,EAAezvC,EAAO0vC,eAAiBxxC,GAAgBH,GAC7D,IAAK+Z,EACH,OAAO23B,EAAaxyB,EAAM/c,EAAMjM,GAC3B,GAAIqmC,EAAWuB,eAAgB,CAIpC,IAAMhM,EAAK5S,EAAK,GACVziB,EAA+B,oBAAhBq1B,EAAG8f,UAA2B9f,EAAG8f,SAASzvC,GAC/D,GAAI1F,EAAO,CACT,IAAMuC,EAAQ0yC,EAAaxyB,EAAM/c,EAAMjM,EAAQuG,GACzCwC,EAAMyyC,EAAaxyB,EAAM/c,EAAMjM,EAAQuG,GAC7C,MAAO,CAACsD,GAAIf,EAAMe,GAAID,GAAIb,EAAIa,GAC/B,CACF,CACF,CAED,MAAO,CAACC,GAAI,EAAGD,GAAIof,EAAKhnB,OAAS,EAClC,CAUD,SAAS25C,GAAyB16B,EAAOhV,EAAM2vC,EAAUC,EAASh4B,GAGhE,IAFA,IAAMqhB,EAAWjkB,EAAM66B,+BACjB97C,EAAQ47C,EAAS3vC,GACdpK,EAAI,EAAGO,EAAO8iC,EAASljC,OAAQH,EAAIO,IAAQP,EAGlD,IAFA,MAAsBqjC,EAASrjC,GAAxBW,EAAP,EAAOA,MAAOwmB,EAAd,EAAcA,KACd,EAAiBsyB,GAAapW,EAASrjC,GAAIoK,EAAMjM,EAAO6jB,GAAjDha,EAAP,EAAOA,GAAID,EAAX,EAAWA,GACFmT,EAAIlT,EAAIkT,GAAKnT,IAAMmT,EAAG,CAC7B,IAAMwb,EAAUvP,EAAKjM,GAChBwb,EAAQrD,MACX2mB,EAAQtjB,EAAS/1B,EAAOua,EAE3B,CAEJ,CA2BD,SAASg/B,GAAkB96B,EAAO26B,EAAU3vC,EAAM+vC,EAAkBl4B,GAClE,IAAMnZ,EAAQ,GAEd,IAAKmZ,IAAqB7C,EAAMg7B,cAAcL,GAC5C,OAAOjxC,EAaT,OADAgxC,GAAyB16B,EAAOhV,EAAM2vC,GATf,SAASrjB,EAASh2B,EAAcC,IAChDshB,GAAqBoI,GAAeqM,EAAStX,EAAM8rB,UAAW,KAG/DxU,EAAQ2jB,QAAQN,EAAS53C,EAAG43C,EAAS13C,EAAG83C,IAC1CrxC,EAAMpG,KAAK,CAACg0B,QAAAA,EAASh2B,aAAAA,EAAcC,MAAAA,GAEtC,IAE+D,GACzDmI,CACR,CAoCD,SAASwxC,GAAyBl7B,EAAO26B,EAAU3vC,EAAM4X,EAAWm4B,EAAkBl4B,GACpF,IAAInZ,EAAQ,GACNyxC,EA5ER,SAAkCnwC,GAChC,IAAMowC,GAA8B,IAAvBpwC,EAAK/I,QAAQ,KACpBo5C,GAA8B,IAAvBrwC,EAAK/I,QAAQ,KAE1B,OAAO,SAASuF,EAAKC,GACnB,IAAM6zC,EAASF,EAAO72C,KAAKa,IAAIoC,EAAIzE,EAAI0E,EAAI1E,GAAK,EAC1Cw4C,EAASF,EAAO92C,KAAKa,IAAIoC,EAAIvE,EAAIwE,EAAIxE,GAAK,EAChD,OAAOsB,KAAK4C,KAAK5C,KAAKmB,IAAI41C,EAAQ,GAAK/2C,KAAKmB,IAAI61C,EAAQ,GACzD,CACF,CAmEwBC,CAAyBxwC,GAC5CywC,EAAc/7C,OAAOiF,kBAyBzB,OADA+1C,GAAyB16B,EAAOhV,EAAM2vC,GAtBtC,SAAwBrjB,EAASh2B,EAAcC,GAC7C,IAAM05C,EAAU3jB,EAAQ2jB,QAAQN,EAAS53C,EAAG43C,EAAS13C,EAAG83C,GACxD,IAAIn4B,GAAcq4B,EAAlB,CAIA,IAAMpJ,EAASva,EAAQokB,eAAeX,GAEtC,KADsBl4B,GAAoB7C,EAAMg7B,cAAcnJ,IACzCoJ,EAArB,CAIA,IAAM3zC,EAAW6zC,EAAeR,EAAU9I,GACtCvqC,EAAWm0C,GACb/xC,EAAQ,CAAC,CAAC4tB,QAAAA,EAASh2B,aAAAA,EAAcC,MAAAA,IACjCk6C,EAAcn0C,GACLA,IAAam0C,GAEtB/xC,EAAMpG,KAAK,CAACg0B,QAAAA,EAASh2B,aAAAA,EAAcC,MAAAA,GARpC,CANA,CAgBF,IAGMmI,CACR,CAYD,SAASiyC,GAAgB37B,EAAO26B,EAAU3vC,EAAM4X,EAAWm4B,EAAkBl4B,GAC3E,OAAKA,GAAqB7C,EAAMg7B,cAAcL,GAI9B,MAAT3vC,GAAiB4X,EAEpBs4B,GAAyBl7B,EAAO26B,EAAU3vC,EAAM4X,EAAWm4B,EAAkBl4B,GA1EnF,SAA+B7C,EAAO26B,EAAU3vC,EAAM+vC,GACpD,IAAIrxC,EAAQ,GAYZ,OADAgxC,GAAyB16B,EAAOhV,EAAM2vC,GATtC,SAAwBrjB,EAASh2B,EAAcC,GAC7C,MAA+B+1B,EAAQskB,SAAS,CAAC,aAAc,YAAab,GAArE3F,EAAP,EAAOA,WAAYC,EAAnB,EAAmBA,SAGfztC,GAFYf,GAAkBywB,EAAS,CAACv0B,EAAG43C,EAAS53C,EAAGE,EAAG03C,EAAS13C,IAAhEmE,MAEkBguC,EAAYC,IACnC3rC,EAAMpG,KAAK,CAACg0B,QAAAA,EAASh2B,aAAAA,EAAcC,MAAAA,GAEtC,IAGMmI,CACR,CA2DKmyC,CAAsB77B,EAAO26B,EAAU3vC,EAAM+vC,GAJxC,EAMV,CAWD,SAASe,GAAa97B,EAAO26B,EAAU3vC,EAAM4X,EAAWm4B,GACtD,IAAMrxC,EAAQ,GACRqyC,EAAuB,MAAT/wC,EAAe,WAAa,WAC5CgxC,GAAiB,EAWrB,OATAtB,GAAyB16B,EAAOhV,EAAM2vC,GAAU,SAACrjB,EAASh2B,EAAcC,GAClE+1B,EAAQykB,GAAapB,EAAS3vC,GAAO+vC,KACvCrxC,EAAMpG,KAAK,CAACg0B,QAAAA,EAASh2B,aAAAA,EAAcC,MAAAA,IACnCy6C,EAAiBA,GAAkB1kB,EAAQ2jB,QAAQN,EAAS53C,EAAG43C,EAAS13C,EAAG83C,GAE9E,IAIGn4B,IAAco5B,EACT,GAEFtyC,CACR,CAMD,OAAe,CAEbgxC,yBAAAA,GAGAuB,MAAO,CAYL16C,MAZK,SAYCye,EAAOrZ,EAAGxE,EAAS44C,GACvB,IAAMJ,EAAW5iB,GAAoBpxB,EAAGqZ,GAElChV,EAAO7I,EAAQ6I,MAAQ,IACvB6X,EAAmB1gB,EAAQ0gB,mBAAoB,EAC/CnZ,EAAQvH,EAAQygB,UAClBk4B,GAAkB96B,EAAO26B,EAAU3vC,EAAM+vC,EAAkBl4B,GAC3D84B,GAAgB37B,EAAO26B,EAAU3vC,GAAM,EAAO+vC,EAAkBl4B,GAC9Df,EAAW,GAEjB,OAAKpY,EAAM3I,QAIXif,EAAM66B,+BAA+BrxC,SAAQ,SAACgB,GAC5C,IAAMjJ,EAAQmI,EAAM,GAAGnI,MACjB+1B,EAAU9sB,EAAKud,KAAKxmB,GAGtB+1B,IAAYA,EAAQrD,MACtBnS,EAASxe,KAAK,CAACg0B,QAAAA,EAASh2B,aAAckJ,EAAKjJ,MAAOA,MAAAA,GAErD,IAEMugB,GAbE,EAcV,EAYD4lB,QAjDK,SAiDG1nB,EAAOrZ,EAAGxE,EAAS44C,GACzB,IAAMJ,EAAW5iB,GAAoBpxB,EAAGqZ,GAClChV,EAAO7I,EAAQ6I,MAAQ,KACvB6X,EAAmB1gB,EAAQ0gB,mBAAoB,EACjDnZ,EAAQvH,EAAQygB,UAChBk4B,GAAkB96B,EAAO26B,EAAU3vC,EAAM+vC,EAAkBl4B,GAC7D84B,GAAgB37B,EAAO26B,EAAU3vC,GAAM,EAAO+vC,EAAkBl4B,GAElE,GAAInZ,EAAM3I,OAAS,EAAG,CACpB,IAAMO,EAAeoI,EAAM,GAAGpI,aACxBymB,EAAO/H,EAAMyoB,eAAennC,GAAcymB,KAChDre,EAAQ,GACR,IAAK,IAAI9I,EAAI,EAAGA,EAAImnB,EAAKhnB,SAAUH,EACjC8I,EAAMpG,KAAK,CAACg0B,QAASvP,EAAKnnB,GAAIU,aAAAA,EAAcC,MAAOX,GAEtD,CAED,OAAO8I,CACR,EAYDwhB,MA/EK,SA+EClL,EAAOrZ,EAAGxE,EAAS44C,GAIvB,OAAOD,GAAkB96B,EAHR+X,GAAoBpxB,EAAGqZ,GAC3B7d,EAAQ6I,MAAQ,KAEmB+vC,EADvB54C,EAAQ0gB,mBAAoB,EAEtD,EAWDq5B,QA/FK,SA+FGl8B,EAAOrZ,EAAGxE,EAAS44C,GACzB,IAAMJ,EAAW5iB,GAAoBpxB,EAAGqZ,GAClChV,EAAO7I,EAAQ6I,MAAQ,KACvB6X,EAAmB1gB,EAAQ0gB,mBAAoB,EACrD,OAAO84B,GAAgB37B,EAAO26B,EAAU3vC,EAAM7I,EAAQygB,UAAWm4B,EAAkBl4B,EACpF,EAWD9f,EA/GK,SA+GHid,EAAOrZ,EAAGxE,EAAS44C,GAEnB,OAAOe,GAAa97B,EADH+X,GAAoBpxB,EAAGqZ,GACH,IAAK7d,EAAQygB,UAAWm4B,EAC9D,EAWD93C,EA7HK,SA6HH+c,EAAOrZ,EAAGxE,EAAS44C,GAEnB,OAAOe,GAAa97B,EADH+X,GAAoBpxB,EAAGqZ,GACH,IAAK7d,EAAQygB,UAAWm4B,EAC9D,ICrWCoB,GAAmB,CAAC,OAAQ,MAAO,QAAS,UAElD,SAASC,GAAiBn2C,EAAO00C,GAC/B,OAAO10C,EAAMosB,QAAOvvB,SAAAA,GAAAA,OAAKA,EAAEg1B,MAAQ6iB,CAAf73C,GACrB,CAED,SAASu5C,GAA4Bp2C,EAAO+E,GAC1C,OAAO/E,EAAMosB,QAAOvvB,SAAAA,GAAAA,OAA0C,IAArCq5C,GAAiBl6C,QAAQa,EAAEg1B,MAAeh1B,EAAE01B,IAAIxtB,OAASA,CAA9DlI,GACrB,CAED,SAASw5C,GAAar2C,EAAOtF,GAC3B,OAAOsF,EAAMmpC,MAAK,SAACnrC,EAAGC,GACpB,IAAM9C,EAAKT,EAAUuD,EAAID,EACnB5C,EAAKV,EAAUsD,EAAIC,EACzB,OAAO9C,EAAGqc,SAAWpc,EAAGoc,OACtBrc,EAAGG,MAAQF,EAAGE,MACdH,EAAGqc,OAASpc,EAAGoc,MAClB,GACF,CAuCD,SAAS8+B,GAAcC,EAASC,GAC9B,IAEI77C,EAAGO,EAAMu7C,EAFP/X,EAlBR,SAAqB6X,GACnB,IAD4B,EACtB7X,EAAS,CAAC,EADY,UAET6X,GAFS,IAE5B,IAAK,EAAL,qBAA4B,KAAjBG,EAAiB,QACnBvY,EAA2BuY,EAA3BvY,MAAOtM,EAAoB6kB,EAApB7kB,IAAK8kB,EAAeD,EAAfC,YACnB,GAAKxY,GAAU+X,GAAiBx7B,SAASmX,GAAzC,CAGA,IAAMrG,EAASkT,EAAOP,KAAWO,EAAOP,GAAS,CAACx5B,MAAO,EAAGiyC,OAAQ,EAAGp/B,OAAQ,EAAGtZ,KAAM,IACxFstB,EAAO7mB,QACP6mB,EAAOhU,QAAUm/B,CAHhB,CAIF,CAV2B,+BAW5B,OAAOjY,CACR,CAMgBmY,CAAYN,GACpBO,EAA+BN,EAA/BM,aAAcC,EAAiBP,EAAjBO,cAErB,IAAKp8C,EAAI,EAAGO,EAAOq7C,EAAQz7C,OAAQH,EAAIO,IAAQP,EAAG,CAEhD,IAAOq8C,GADPP,EAASF,EAAQ57C,IACS43B,IAAnBykB,SACD7Y,EAAQO,EAAO+X,EAAOtY,OACtBrD,EAASqD,GAASsY,EAAOE,YAAcxY,EAAM3mB,OAC/Ci/B,EAAOnM,YACTmM,EAAO91B,MAAQma,EAASA,EAASgc,EAAeE,GAAYR,EAAOS,eACnER,EAAOlzB,OAASwzB,IAEhBN,EAAO91B,MAAQm2B,EACfL,EAAOlzB,OAASuX,EAASA,EAASic,EAAgBC,GAAYR,EAAOU,gBAExE,CACD,OAAOxY,CACR,CAsBD,SAASyY,GAAeC,EAAYvR,EAAW7nC,EAAGC,GAChD,OAAOK,KAAK6B,IAAIi3C,EAAWp5C,GAAI6nC,EAAU7nC,IAAMM,KAAK6B,IAAIi3C,EAAWn5C,GAAI4nC,EAAU5nC,GAClF,CAED,SAASo5C,GAAiBD,EAAYE,GACpCF,EAAW73B,IAAMjhB,KAAK6B,IAAIi3C,EAAW73B,IAAK+3B,EAAW/3B,KACrD63B,EAAW13B,KAAOphB,KAAK6B,IAAIi3C,EAAW13B,KAAM43B,EAAW53B,MACvD03B,EAAW33B,OAASnhB,KAAK6B,IAAIi3C,EAAW33B,OAAQ63B,EAAW73B,QAC3D23B,EAAW53B,MAAQlhB,KAAK6B,IAAIi3C,EAAW53B,MAAO83B,EAAW93B,MAC1D,CAED,SAAS+3B,GAAW1R,EAAW2Q,EAAQC,EAAQ/X,GAC7C,IAAO7M,EAAY4kB,EAAZ5kB,IAAKU,EAAOkkB,EAAPlkB,IACN6kB,EAAavR,EAAUuR,WAG7B,IAAK79C,EAASs4B,GAAM,CACd4kB,EAAOv4C,OAET2nC,EAAUhU,IAAQ4kB,EAAOv4C,MAE3B,IAAMigC,EAAQO,EAAO+X,EAAOtY,QAAU,CAACjgC,KAAM,EAAGyG,MAAO,GACvDw5B,EAAMjgC,KAAOI,KAAK6B,IAAIg+B,EAAMjgC,KAAMu4C,EAAOnM,WAAa/X,EAAIhP,OAASgP,EAAI5R,OACvE81B,EAAOv4C,KAAOigC,EAAMjgC,KAAOigC,EAAMx5B,MACjCkhC,EAAUhU,IAAQ4kB,EAAOv4C,IAC1B,CAEGq0B,EAAIilB,YACNH,GAAiBD,EAAY7kB,EAAIilB,cAGnC,IAAMC,EAAWn5C,KAAK6B,IAAI,EAAGq2C,EAAOkB,WAAaP,GAAeC,EAAYvR,EAAW,OAAQ,UACzF8R,EAAYr5C,KAAK6B,IAAI,EAAGq2C,EAAOoB,YAAcT,GAAeC,EAAYvR,EAAW,MAAO,WAC1FgS,EAAeJ,IAAa5R,EAAUx7B,EACtCytC,EAAgBH,IAAc9R,EAAUp9B,EAK9C,OAJAo9B,EAAUx7B,EAAIotC,EACd5R,EAAUp9B,EAAIkvC,EAGPlB,EAAOnM,WACV,CAACyN,KAAMF,EAAcG,MAAOF,GAC5B,CAACC,KAAMD,EAAeE,MAAOH,EAClC,CAgBD,SAASI,GAAW3N,EAAYzE,GAC9B,IAAMuR,EAAavR,EAAUuR,WAE7B,SAASc,EAAmB1mB,GAC1B,IAAMrM,EAAS,CAACzF,KAAM,EAAGH,IAAK,EAAGC,MAAO,EAAGC,OAAQ,GAInD,OAHA+R,EAAUjuB,SAAQ,SAACsuB,GACjB1M,EAAO0M,GAAOvzB,KAAK6B,IAAI0lC,EAAUhU,GAAMulB,EAAWvlB,GACnD,IACM1M,CACR,CAED,OACI+yB,EADG5N,EACgB,CAAC,OAAQ,SACT,CAAC,MAAO,UAChC,CAED,SAAS6N,GAASC,EAAOvS,EAAW2Q,EAAQ9X,GAC1C,IACI/jC,EAAGO,EAAMu7C,EAAQlkB,EAAK8lB,EAAOxyC,EAD3ByyC,EAAa,GAGnB,IAAK39C,EAAI,EAAGO,EAAOk9C,EAAMt9C,OAAQu9C,EAAQ,EAAG19C,EAAIO,IAAQP,EAAG,EAEzD43B,GADAkkB,EAAS2B,EAAMz9C,IACF43B,KAETyJ,OACFya,EAAO91B,OAASklB,EAAUx7B,EAC1BosC,EAAOlzB,QAAUsiB,EAAUp9B,EAC3BwvC,GAAWxB,EAAOnM,WAAYzE,IAEhC,MAAsB0R,GAAW1R,EAAW2Q,EAAQC,EAAQ/X,GAArDqZ,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MAIbK,GAASN,GAAQO,EAAWx9C,OAG5B+K,EAAUA,GAAWmyC,EAEhBzlB,EAAIykB,UACPsB,EAAWj7C,KAAKo5C,EAEnB,CAED,OAAO4B,GAASF,GAASG,EAAYzS,EAAW2Q,EAAQ9X,IAAW74B,CACpE,CAED,SAAS0yC,GAAWhmB,EAAK7S,EAAMH,EAAKoB,EAAO4C,GACzCgP,EAAIhT,IAAMA,EACVgT,EAAI7S,KAAOA,EACX6S,EAAI/S,MAAQE,EAAOiB,EACnB4R,EAAI9S,OAASF,EAAMgE,EACnBgP,EAAI5R,MAAQA,EACZ4R,EAAIhP,OAASA,CACd,CAED,SAASi1B,GAAWJ,EAAOvS,EAAW2Q,EAAQ9X,GAC5C,IADoD,EAC9C+Z,EAAcjC,EAAOl3B,QACtBxiB,EAAQ+oC,EAAR/oC,EAAGE,EAAK6oC,EAAL7oC,EAF4C,UAI/Bo7C,GAJ+B,IAIpD,IAAK,EAAL,qBAA4B,KAAjB3B,EAAiB,QACpBlkB,EAAMkkB,EAAOlkB,IACb4L,EAAQO,EAAO+X,EAAOtY,QAAU,CAACx5B,MAAO,EAAGiyC,OAAQ,EAAGp/B,OAAQ,GAC9DA,EAASi/B,EAAQE,YAAcxY,EAAM3mB,QAAW,EACtD,GAAIi/B,EAAOnM,WAAY,CACrB,IAAM3pB,EAAQklB,EAAUx7B,EAAImN,EACtB+L,EAAS4a,EAAMjgC,MAAQq0B,EAAIhP,OAC7B1lB,EAAQsgC,EAAMv8B,SAChB5E,EAAImhC,EAAMv8B,OAER2wB,EAAIykB,SACNuB,GAAWhmB,EAAKkmB,EAAY/4B,KAAM1iB,EAAGw5C,EAAOkB,WAAae,EAAYj5B,MAAQi5B,EAAY/4B,KAAM6D,GAE/Fg1B,GAAWhmB,EAAKsT,EAAUnmB,KAAOye,EAAMyY,OAAQ55C,EAAG2jB,EAAO4C,GAE3D4a,EAAMv8B,MAAQ5E,EACdmhC,EAAMyY,QAAUj2B,EAChB3jB,EAAIu1B,EAAI9S,MACT,KAAM,CACL,IAAM8D,EAASsiB,EAAUp9B,EAAI+O,EACvBmJ,EAAQwd,EAAMjgC,MAAQq0B,EAAI5R,MAC5B9iB,EAAQsgC,EAAMv8B,SAChB9E,EAAIqhC,EAAMv8B,OAER2wB,EAAIykB,SACNuB,GAAWhmB,EAAKz1B,EAAG27C,EAAYl5B,IAAKoB,EAAO61B,EAAOoB,YAAca,EAAYh5B,OAASg5B,EAAYl5B,KAEjGg5B,GAAWhmB,EAAKz1B,EAAG+oC,EAAUtmB,IAAM4e,EAAMyY,OAAQj2B,EAAO4C,GAE1D4a,EAAMv8B,MAAQ9E,EACdqhC,EAAMyY,QAAUrzB,EAChBzmB,EAAIy1B,EAAI/S,KACT,CACF,CArCmD,+BAuCpDqmB,EAAU/oC,EAAIA,EACd+oC,EAAU7oC,EAAIA,CACf,CAwBD,OAAe,SAQN+c,EAAO5b,GACP4b,EAAMq+B,QACTr+B,EAAMq+B,MAAQ,IAIhBj6C,EAAK64C,SAAW74C,EAAK64C,WAAY,EACjC74C,EAAKu2C,SAAWv2C,EAAKu2C,UAAY,MACjCv2C,EAAKqZ,OAASrZ,EAAKqZ,QAAU,EAE7BrZ,EAAKu6C,QAAUv6C,EAAKu6C,SAAW,WAC7B,MAAO,CAAC,CACNC,EAAG,EACHjf,KAFM,SAEDmM,GACH1nC,EAAKu7B,KAAKmM,EACX,GAEJ,EAED9rB,EAAMq+B,MAAM/6C,KAAKc,EAClB,EA5BH,GAAe,SAmCH4b,EAAO6+B,GACf,IAAMt9C,EAAQye,EAAMq+B,MAAQr+B,EAAMq+B,MAAMp8C,QAAQ48C,IAAe,GAChD,IAAXt9C,GACFye,EAAMq+B,MAAM90C,OAAOhI,EAAO,EAE7B,EAxCH,GAAe,SAgDHye,EAAO5b,EAAMjC,GACrBiC,EAAK64C,SAAW96C,EAAQ86C,SACxB74C,EAAKu2C,SAAWx4C,EAAQw4C,SACxBv2C,EAAKqZ,OAAStb,EAAQsb,MACvB,EApDH,GAAe,SA8DNuC,EAAO4G,EAAO4C,EAAQs1B,GAC3B,GAAK9+B,EAAL,CAIA,IAAMuF,EAAUyJ,GAAUhP,EAAM7d,QAAQu6C,OAAOn3B,SACzC23B,EAAiB34C,KAAK6B,IAAIwgB,EAAQrB,EAAQqB,MAAO,GACjDu2B,EAAkB54C,KAAK6B,IAAIojB,EAASjE,EAAQiE,OAAQ,GACpD60B,EA5QV,SAA0BA,GACxB,IAAMU,EA1DR,SAAmBV,GACjB,IACIz9C,EAAGO,EAAMq3B,EAAKV,EAAKsM,EAAOwY,EADxBmC,EAAc,GAGpB,IAAKn+C,EAAI,EAAGO,GAAQk9C,GAAS,IAAIt9C,OAAQH,EAAIO,IAAQP,EAAG,OACtD43B,EAAM6lB,EAAMz9C,GACAk3B,EAF0C,EAEpD6iB,SAFoD,QAErCx4C,QAAUiiC,EAF2B,EAE3BA,MAF2B,QAEpBwY,YAAAA,OAFoB,MAEN,EAFM,EAGtDmC,EAAYz7C,KAAK,CACf/B,MAAOX,EACP43B,IAAAA,EACAV,IAAAA,EACAyY,WAAY/X,EAAI6Y,eAChB5zB,OAAQ+a,EAAI/a,OACZ2mB,MAAOA,GAAUtM,EAAMsM,EACvBwY,YAAAA,GAEH,CACD,OAAOmC,CACR,CAwCqBC,CAAUX,GACxBpB,EAAWX,GAAayC,EAAY1sB,QAAOsqB,SAAAA,GAAAA,OAAQA,EAAKnkB,IAAIykB,QAAjBN,KAA4B,GACvEh3B,EAAO22B,GAAaF,GAAiB2C,EAAa,SAAS,GAC3Dt5B,EAAQ62B,GAAaF,GAAiB2C,EAAa,UACnDv5B,EAAM82B,GAAaF,GAAiB2C,EAAa,QAAQ,GACzDr5B,EAAS42B,GAAaF,GAAiB2C,EAAa,WACpDE,EAAmB5C,GAA4B0C,EAAa,KAC5DG,EAAiB7C,GAA4B0C,EAAa,KAEhE,MAAO,CACL9B,SAAAA,EACAkC,WAAYx5B,EAAKwpB,OAAO3pB,GACxB45B,eAAgB35B,EAAM0pB,OAAO+P,GAAgB/P,OAAOzpB,GAAQypB,OAAO8P,GACnEnT,UAAWsQ,GAAiB2C,EAAa,aACzCM,SAAU15B,EAAKwpB,OAAO1pB,GAAO0pB,OAAO+P,GACpC3O,WAAY/qB,EAAI2pB,OAAOzpB,GAAQypB,OAAO8P,GAEzC,CA0PiBK,CAAiBt/B,EAAMq+B,OAC/BkB,EAAgBlB,EAAMgB,SACtBG,EAAkBnB,EAAM9N,WAI9B9vC,EAAKuf,EAAMq+B,OAAO7lB,SAAAA,GACgB,oBAArBA,EAAIinB,cACbjnB,EAAIinB,cAEP,IA6BD,IAAMC,EAA0BH,EAAcjf,QAAO,SAAC8V,EAAOuG,GAAR,OACnDA,EAAKnkB,IAAIr2B,UAAwC,IAA7Bw6C,EAAKnkB,IAAIr2B,QAAQyjB,QAAoBwwB,EAAQA,EAAQ,CADtB,GACyB,IAAM,EAE9EqG,EAASt9C,OAAOutC,OAAO,CAC3BiR,WAAY/2B,EACZi3B,YAAar0B,EACbjE,QAAAA,EACA23B,eAAAA,EACAC,gBAAAA,EACAJ,aAAcG,EAAiB,EAAIwC,EACnC1C,cAAeG,EAAkB,IAE7BE,EAAal+C,OAAO4M,OAAO,CAAC,EAAGwZ,GACrC+3B,GAAiBD,EAAYruB,GAAU8vB,IACvC,IAAMhT,EAAY3sC,OAAO4M,OAAO,CAC9BsxC,WAAAA,EACA/sC,EAAG4sC,EACHxuC,EAAGyuC,EACHp6C,EAAGwiB,EAAQI,KACX1iB,EAAGsiB,EAAQC,KACVD,GAEGof,EAAS4X,GAAcgD,EAAcpQ,OAAOqQ,GAAkB/C,GAGpE2B,GAASC,EAAMpB,SAAUnR,EAAW2Q,EAAQ9X,GAG5CyZ,GAASmB,EAAezT,EAAW2Q,EAAQ9X,GAGvCyZ,GAASoB,EAAiB1T,EAAW2Q,EAAQ9X,IAE/CyZ,GAASmB,EAAezT,EAAW2Q,EAAQ9X,GApRjD,SAA0BmH,GACxB,IAAMuR,EAAavR,EAAUuR,WAE7B,SAASsC,EAAU7nB,GACjB,IAAM8nB,EAASr7C,KAAK6B,IAAIi3C,EAAWvlB,GAAOgU,EAAUhU,GAAM,GAE1D,OADAgU,EAAUhU,IAAQ8nB,EACXA,CACR,CACD9T,EAAU7oC,GAAK08C,EAAU,OACzB7T,EAAU/oC,GAAK48C,EAAU,QACzBA,EAAU,SACVA,EAAU,SACX,CA2QGE,CAAiB/T,GAGjB2S,GAAWJ,EAAMc,WAAYrT,EAAW2Q,EAAQ9X,GAGhDmH,EAAU/oC,GAAK+oC,EAAUx7B,EACzBw7B,EAAU7oC,GAAK6oC,EAAUp9B,EAEzB+vC,GAAWJ,EAAMe,eAAgBtT,EAAW2Q,EAAQ9X,GAEpD3kB,EAAM8rB,UAAY,CAChBnmB,KAAMmmB,EAAUnmB,KAChBH,IAAKsmB,EAAUtmB,IACfC,MAAOqmB,EAAUnmB,KAAOmmB,EAAUx7B,EAClCoV,OAAQomB,EAAUtmB,IAAMsmB,EAAUp9B,EAClC8a,OAAQsiB,EAAUp9B,EAClBkY,MAAOklB,EAAUx7B,GAInB7P,EAAK49C,EAAMvS,WAAW,SAAC4Q,GACrB,IAAMlkB,EAAMkkB,EAAOlkB,IACnBr5B,OAAO4M,OAAOysB,EAAKxY,EAAM8rB,WACzBtT,EAAIyJ,OAAO6J,EAAUx7B,EAAGw7B,EAAUp9B,EAAG,CAACiX,KAAM,EAAGH,IAAK,EAAGC,MAAO,EAAGC,OAAQ,GAC1E,GAzGA,CA0GF,EC7bkBo6B,GAAAA,qFAOnBC,SAAe32B,EAAQ+P,GAAe,+BAQtC6mB,SAAer+B,GACb,OAAO,CACR,iCASD6Y,SAAiBxa,EAAO9gB,EAAMiK,GAAY,oCAQ1CsxB,SAAoBza,EAAO9gB,EAAMiK,GAAY,oCAK7C0Y,WACE,OAAO,CACR,+BASDmX,SAAe1B,EAAS1Q,EAAO4C,EAAQ2P,GAGrC,OAFAvS,EAAQriB,KAAK6B,IAAI,EAAGwgB,GAAS0Q,EAAQ1Q,OACrC4C,EAASA,GAAU8N,EAAQ9N,OACpB,CACL5C,MAAAA,EACA4C,OAAQjlB,KAAK6B,IAAI,EAAG+yB,EAAc50B,KAAKoB,MAAMihB,EAAQuS,GAAe3P,GAEvE,2BAMDy2B,SAAW72B,GACT,OAAO,CACR,6BAMD82B,SAAavd,GAEZ,OAzEkBmd,GCIAK,GAAAA,SAAAA,yIACnBJ,SAAe37C,GAIb,OAAOA,GAAQA,EAAKilB,YAAcjlB,EAAKilB,WAAW,OAAS,IAC5D,6BACD62B,SAAavd,GACXA,EAAOxgC,QAAQmf,WAAY,CAC5B,OATkB6+B,CAAsBL,ICQrCM,GAAc,CAClBC,WAAY,YACZC,UAAW,YACXC,SAAU,UACVC,aAAc,aACdC,YAAa,YACbC,YAAa,YACbC,UAAW,UACXC,aAAc,WACdC,WAAY,YAGRC,GAAgB/hD,SAAAA,GAAAA,OAAmB,OAAVA,GAA4B,KAAVA,CAA3BA,EA8DtB,IAAMgiD,KAAuB1mB,IAA+B,CAACE,SAAS,GAMtE,SAASymB,GAAehhC,EAAO9gB,EAAMiK,GACnC6W,EAAMoJ,OAAOqR,oBAAoBv7B,EAAMiK,EAAU43C,GAClD,CAcD,SAASE,GAAiBC,EAAU93B,GAAQ,gBACvB83B,GADuB,IAC1C,IAAK,EAAL,qBAA6B,KAAlBngC,EAAkB,QAC3B,GAAIA,IAASqI,GAAUrI,EAAKogC,SAAS/3B,GACnC,OAAO,CAEV,CALyC,+BAM3C,CAED,SAASg4B,GAAqBphC,EAAO9gB,EAAMiK,GACzC,IAAMigB,EAASpJ,EAAMoJ,OACfi4B,EAAW,IAAIC,kBAAiBC,SAAAA,GACpC,IAD+C,EAC3CC,GAAU,EADiC,UAE3BD,GAF2B,IAE/C,IAAK,EAAL,qBAA6B,KAAlB7R,EAAkB,QAE3B8R,GADAA,EAAUA,GAAWP,GAAiBvR,EAAM+R,WAAYr4B,MAClC63B,GAAiBvR,EAAMgS,aAAct4B,EAC5D,CAL8C,+BAM3Co4B,GACFr4C,GAEH,IAED,OADAk4C,EAASM,QAAQ/qB,SAAU,CAACgrB,WAAW,EAAMC,SAAS,IAC/CR,CACR,CAED,SAASS,GAAqB9hC,EAAO9gB,EAAMiK,GACzC,IAAMigB,EAASpJ,EAAMoJ,OACfi4B,EAAW,IAAIC,kBAAiBC,SAAAA,GACpC,IAD+C,EAC3CC,GAAU,EADiC,UAE3BD,GAF2B,IAE/C,IAAK,EAAL,qBAA6B,KAAlB7R,EAAkB,QAE3B8R,GADAA,EAAUA,GAAWP,GAAiBvR,EAAMgS,aAAct4B,MACpC63B,GAAiBvR,EAAM+R,WAAYr4B,EAC1D,CAL8C,+BAM3Co4B,GACFr4C,GAEH,IAED,OADAk4C,EAASM,QAAQ/qB,SAAU,CAACgrB,WAAW,EAAMC,SAAS,IAC/CR,CACR,CAED,IAAMU,GAAqB,IAAIljC,IAC3BmjC,GAAsB,EAE1B,SAASC,KACP,IAAMC,EAAMl4C,OAAO0X,iBACfwgC,IAAQF,KAGZA,GAAsBE,EACtBH,GAAmBv4C,SAAQ,SAACyb,EAAQjF,GAC9BA,EAAMiJ,0BAA4Bi5B,GACpCj9B,GAEH,IACF,CAgBD,SAASk9B,GAAqBniC,EAAO9gB,EAAMiK,GACzC,IAAMigB,EAASpJ,EAAMoJ,OACfmQ,EAAYnQ,GAAUyN,GAAezN,GAC3C,GAAKmQ,EAAL,CAGA,IAAMtU,EAAS/a,IAAU,SAAC0c,EAAO4C,GAC/B,IAAMlZ,EAAIipB,EAAUI,YACpBxwB,EAASyd,EAAO4C,GACZlZ,EAAIipB,EAAUI,aAQhBxwB,GAEH,GAAEa,QAGGq3C,EAAW,IAAIe,gBAAeb,SAAAA,GAClC,IAAM7R,EAAQ6R,EAAQ,GAChB36B,EAAQ8oB,EAAM2S,YAAYz7B,MAC1B4C,EAASkmB,EAAM2S,YAAY74B,OAInB,IAAV5C,GAA0B,IAAX4C,GAGnBvE,EAAO2B,EAAO4C,EACf,IAID,OAHA63B,EAASM,QAAQpoB,GAhDnB,SAAuCvZ,EAAOiF,GACvC88B,GAAmB59C,MACtB6F,OAAOwwB,iBAAiB,SAAUynB,IAEpCF,GAAmBp4C,IAAIqW,EAAOiF,EAC/B,CA4CCq9B,CAA8BtiC,EAAOiF,GAE9Bo8B,CAhCN,CAiCF,CAED,SAASkB,GAAgBviC,EAAO9gB,EAAMmiD,GAChCA,GACFA,EAASmB,aAEE,WAATtjD,GAnDN,SAAyC8gB,GACvC+hC,GAAmBhwB,OAAO/R,GACrB+hC,GAAmB59C,MACtB6F,OAAOywB,oBAAoB,SAAUwnB,GAExC,CA+CGQ,CAAgCziC,EAEnC,CAED,SAAS0iC,GAAqB1iC,EAAO9gB,EAAMiK,GACzC,IAAMigB,EAASpJ,EAAMoJ,OACf8H,EAAQhnB,IAAU,SAAC8tB,GAIL,OAAdhY,EAAMsC,KACRnZ,EA1IN,SAAyB6uB,EAAOhY,GAC9B,IAAM9gB,EAAOkhD,GAAYpoB,EAAM94B,OAAS84B,EAAM94B,KAC9C,EAAe64B,GAAoBC,EAAOhY,GAAnCjd,EAAP,EAAOA,EAAGE,EAAV,EAAUA,EACV,MAAO,CACL/D,KAAAA,EACA8gB,MAAAA,EACA2iC,OAAQ3qB,EACRj1B,OAASkN,IAANlN,EAAkBA,EAAI,KACzBE,OAASgN,IAANhN,EAAkBA,EAAI,KAE5B,CAgIc2/C,CAAgB5qB,EAAOhY,GAEnC,GAAEA,GAIH,OAxJF,SAAqBe,EAAM7hB,EAAMiK,GAC/B4X,EAAKyZ,iBAAiBt7B,EAAMiK,EAAU43C,GACvC,CAoJC8B,CAAYz5B,EAAQlqB,EAAMgyB,GAEnBA,CACR,KAMoB4xB,GAAAA,SAAAA,yIAOnB/C,SAAe32B,EAAQ+P,GAIrB,IAAMxX,EAAUyH,GAAUA,EAAOC,YAAcD,EAAOC,WAAW,MASjE,OAAI1H,GAAWA,EAAQyH,SAAWA,GA3OtC,SAAoBA,EAAQ+P,GAC1B,IAAMjX,EAAQkH,EAAOlH,MAIf6gC,EAAe35B,EAAO45B,aAAa,UACnCC,EAAc75B,EAAO45B,aAAa,SAsBxC,GAnBA55B,EAAM,SAAgB,CACpB+V,QAAS,CACP3V,OAAQu5B,EACRn8B,MAAOq8B,EACP/gC,MAAO,CACL0D,QAAS1D,EAAM0D,QACf4D,OAAQtH,EAAMsH,OACd5C,MAAO1E,EAAM0E,SAQnB1E,EAAM0D,QAAU1D,EAAM0D,SAAW,QAEjC1D,EAAMgW,UAAYhW,EAAMgW,WAAa,aAEjC4oB,GAAcmC,GAAc,CAC9B,IAAMC,EAAexoB,GAAatR,EAAQ,cACrBnZ,IAAjBizC,IACF95B,EAAOxC,MAAQs8B,EAElB,CAED,GAAIpC,GAAciC,GAChB,GAA4B,KAAxB35B,EAAOlH,MAAMsH,OAIfJ,EAAOI,OAASJ,EAAOxC,OAASuS,GAAe,OAC1C,CACL,IAAMgqB,EAAgBzoB,GAAatR,EAAQ,eACrBnZ,IAAlBkzC,IACF/5B,EAAOI,OAAS25B,EAEnB,CAIJ,CA4LKC,CAAWh6B,EAAQ+P,GACZxX,GAGF,IACR,+BAKDq+B,SAAer+B,GACb,IAAMyH,EAASzH,EAAQyH,OACvB,IAAKA,EAAM,SACT,OAAO,EAGT,IAAM+V,EAAU/V,EAAM,SAAc+V,QACpC,CAAC,SAAU,SAAS31B,SAAQ,SAACqlB,GAC3B,IAAM9vB,EAAQogC,EAAQtQ,GAClB/vB,EAAcC,GAChBqqB,EAAOi6B,gBAAgBx0B,GAEvBzF,EAAOk6B,aAAaz0B,EAAM9vB,EAE7B,IAED,IAAMmjB,EAAQid,EAAQjd,OAAS,CAAC,EAahC,OAZA/iB,OAAO2B,KAAKohB,GAAO1Y,SAAQ,SAACxH,GAC1BonB,EAAOlH,MAAMlgB,GAAOkgB,EAAMlgB,EAC3B,IAODonB,EAAOxC,MAAQwC,EAAOxC,aAEfwC,EAAM,UACN,CACR,iCAQDoR,SAAiBxa,EAAO9gB,EAAMiK,GAE5BiU,KAAKqd,oBAAoBza,EAAO9gB,GAEhC,IAAMqkD,EAAUvjC,EAAMwjC,WAAaxjC,EAAMwjC,SAAW,CAAC,GAM/C5I,EALW,CACf6I,OAAQrC,GACRsC,OAAQ5B,GACR78B,OAAQk9B,IAEejjD,IAASwjD,GAClCa,EAAQrkD,GAAQ07C,EAAQ56B,EAAO9gB,EAAMiK,EACtC,oCAODsxB,SAAoBza,EAAO9gB,GACzB,IAAMqkD,EAAUvjC,EAAMwjC,WAAaxjC,EAAMwjC,SAAW,CAAC,GAC/CtyB,EAAQqyB,EAAQrkD,GAEjBgyB,KAIY,CACfuyB,OAAQlB,GACRmB,OAAQnB,GACRt9B,OAAQs9B,IAEerjD,IAAS8hD,IAC1BhhC,EAAO9gB,EAAMgyB,GACrBqyB,EAAQrkD,QAAQ+Q,EACjB,oCAED4R,WACE,OAAO7X,OAAO0X,gBACf,+BAQDsX,SAAe5P,EAAQxC,EAAO4C,EAAQ2P,GACpC,OAAOH,GAAe5P,EAAQxC,EAAO4C,EAAQ2P,EAC9C,2BAKD8mB,SAAW72B,GACT,IAAMmQ,EAAY1C,GAAezN,GACjC,SAAUmQ,IAAaA,EAAUoqB,YAClC,OAhIkBb,CAAoBhD,QC1PpB8D,GAAAA,+DAOV,iDAITC,SAAgB9I,GACd,MAAe39B,KAAKw+B,SAAS,CAAC,IAAK,KAAMb,GACzC,MAAO,CAACh4C,EADR,EAAOA,EACIE,EADX,EAAUA,EAEX,yBAED6gD,WACE,OAAOj+C,EAASuX,KAAKra,IAAM8C,EAASuX,KAAKna,EAC1C,yBASD24C,SAASltB,EAAiBq1B,GAAmD,WACrEhlB,EAAQ3hB,KAAKimB,YACnB,IAAK0gB,IAAUhlB,EAEb,OAAO3hB,KAET,IAAMF,EAA+B,CAAC,EAItC,OAHAwR,EAAMllB,SAAQ,SAACqlB,GACb3R,EAAI2R,GAAQkQ,EAAMlQ,IAASkQ,EAAMlQ,GAAM7J,SAAW+Z,EAAMlQ,GAAMkT,IAAM,EAAKlT,EAC1E,IACM3R,CACR,OAtCkB0mC,GCWd,SAASx8B,GAAShE,EAAOtD,GAC9B,IAAMkkC,EAAW5gC,EAAMjhB,QAAQ2d,MACzBmkC,EA8BR,SAA2B7gC,GACzB,IAAMyC,EAASzC,EAAMjhB,QAAQ0jB,OACvBQ,EAAajD,EAAM8gC,YACnBC,EAAW/gC,EAAMksB,QAAUjpB,GAAcR,EAAS,EAAI,GACtDu+B,EAAWhhC,EAAMihC,WAAah+B,EACpC,OAAO9hB,KAAKoB,MAAMpB,KAAK4B,IAAIg+C,EAAUC,GACtC,CApC4BE,CAAkBlhC,GACvCmhC,EAAahgD,KAAK4B,IAAI69C,EAASQ,eAAiBP,EAAoBA,GACpEQ,EAAeT,EAASv8B,MAAMi9B,QAgEtC,SAAyB5kC,GACvB,IACIlf,EAAGO,EADD02B,EAAS,GAEf,IAAKj3B,EAAI,EAAGO,EAAO2e,EAAM/e,OAAQH,EAAIO,EAAMP,IACrCkf,EAAMlf,GAAG6mB,OACXoQ,EAAOv0B,KAAK1C,GAGhB,OAAOi3B,CACR,CAzE+C8sB,CAAgB7kC,GAAS,GACjE8kC,EAAkBH,EAAa1jD,OAC/B8jD,EAAQJ,EAAa,GACrB37C,EAAO27C,EAAaG,EAAkB,GACtCE,EAAW,GAGjB,GAAIF,EAAkBL,EAEpB,OAwEJ,SAAoBzkC,EAAOglC,EAAUL,EAAc9P,GACjD,IAEI/zC,EAFAgK,EAAQ,EACR2pB,EAAOkwB,EAAa,GAIxB,IADA9P,EAAUpwC,KAAKwgD,KAAKpQ,GACf/zC,EAAI,EAAGA,EAAIkf,EAAM/e,OAAQH,IACxBA,IAAM2zB,IACRuwB,EAASxhD,KAAKwc,EAAMlf,IAEpB2zB,EAAOkwB,IADP75C,EAC4B+pC,GAGjC,CAtFGqQ,CAAWllC,EAAOglC,EAAUL,EAAcG,EAAkBL,GACrDO,EAGT,IAAMnQ,EA6BR,SAA0B8P,EAAc3kC,EAAOykC,GAC7C,IAAMU,EA6FR,SAAwB7yB,GACtB,IACIxxB,EAAGq5C,EADDp5C,EAAMuxB,EAAIrxB,OAGhB,GAAIF,EAAM,EACR,OAAO,EAGT,IAAKo5C,EAAO7nB,EAAI,GAAIxxB,EAAI,EAAGA,EAAIC,IAAOD,EACpC,GAAIwxB,EAAIxxB,GAAKwxB,EAAIxxB,EAAI,KAAOq5C,EAC1B,OAAO,EAGX,OAAOA,CACR,CA3G0BiL,CAAeT,GAClC9P,EAAU70B,EAAM/e,OAASwjD,EAI/B,IAAKU,EACH,OAAO1gD,KAAK6B,IAAIuuC,EAAS,GAI3B,IADA,IAAMwQ,EvC/BD,SAAoBpmD,GACzB,IAEI6B,EAFEi3B,EAAmB,GACnB1wB,EAAO5C,KAAK4C,KAAKpI,GAGvB,IAAK6B,EAAI,EAAGA,EAAIuG,EAAMvG,IAChB7B,EAAQ6B,IAAM,IAChBi3B,EAAOv0B,KAAK1C,GACZi3B,EAAOv0B,KAAKvE,EAAQ6B,IAQxB,OALIuG,KAAiB,EAAPA,IACZ0wB,EAAOv0B,KAAK6D,GAGd0wB,EAAOuX,MAAK,SAACnrC,EAAGC,GAAJ,OAAUD,EAAIC,CAAd,IAAiB67B,MACtBlI,CACR,CuCciButB,CAAWH,GAClBrkD,EAAI,EAAGO,EAAOgkD,EAAQpkD,OAAS,EAAGH,EAAIO,EAAMP,IAAK,CACxD,IAAMmgC,EAASokB,EAAQvkD,GACvB,GAAImgC,EAAS4T,EACX,OAAO5T,CAEV,CACD,OAAOx8B,KAAK6B,IAAIuuC,EAAS,EAC1B,CA/CiB0Q,CAAiBZ,EAAc3kC,EAAOykC,GAEtD,GAAIK,EAAkB,EAAG,CACvB,IAAIhkD,EAAGO,EACDmkD,EAAkBV,EAAkB,EAAIrgD,KAAKiB,OAAOsD,EAAO+7C,IAAUD,EAAkB,IAAM,KAEnG,IADA3wB,GAAKnU,EAAOglC,EAAUnQ,EAAS71C,EAAcwmD,GAAmB,EAAIT,EAAQS,EAAiBT,GACxFjkD,EAAI,EAAGO,EAAOyjD,EAAkB,EAAGhkD,EAAIO,EAAMP,IAChDqzB,GAAKnU,EAAOglC,EAAUnQ,EAAS8P,EAAa7jD,GAAI6jD,EAAa7jD,EAAI,IAGnE,OADAqzB,GAAKnU,EAAOglC,EAAUnQ,EAAS7rC,EAAMhK,EAAcwmD,GAAmBxlC,EAAM/e,OAAS+H,EAAOw8C,GACrFR,CACR,CAED,OADA7wB,GAAKnU,EAAOglC,EAAUnQ,GACfmQ,CACR,CA6ED,SAAS7wB,GAAKnU,EAAOglC,EAAUnQ,EAAS4Q,EAAYC,GAClD,IAGIzkD,EAAQH,EAAG2zB,EAHT1sB,EAAQ/H,EAAeylD,EAAY,GACnCz9C,EAAMvD,KAAK4B,IAAIrG,EAAe0lD,EAAU1lC,EAAM/e,QAAS+e,EAAM/e,QAC/D6J,EAAQ,EAWZ,IARA+pC,EAAUpwC,KAAKwgD,KAAKpQ,GAChB6Q,IAEF7Q,GADA5zC,EAASykD,EAAWD,GACDhhD,KAAKoB,MAAM5E,EAAS4zC,IAGzCpgB,EAAO1sB,EAEA0sB,EAAO,GACZ3pB,IACA2pB,EAAOhwB,KAAKiB,MAAMqC,EAAQ+C,EAAQ+pC,GAGpC,IAAK/zC,EAAI2D,KAAK6B,IAAIyB,EAAO,GAAIjH,EAAIkH,EAAKlH,IAChCA,IAAM2zB,IACRuwB,EAASxhD,KAAKwc,EAAMlf,IACpBgK,IACA2pB,EAAOhwB,KAAKiB,MAAMqC,EAAQ+C,EAAQ+pC,GAGvC,SDhJoBiP,GAAAA,WAED,CAAC,WAFAA,GAAAA,qBAGI3zC,GEAzB,IACMw1C,GAAiB,SAACriC,EAAOitB,EAAMxqB,GAAd,MAAkC,QAATwqB,GAA2B,SAATA,EAAkBjtB,EAAMitB,GAAQxqB,EAASzC,EAAMitB,GAAQxqB,CAAlG,EAYvB,SAAS6/B,GAAOtzB,EAAKuzB,GAMnB,IALA,IAAM9tB,EAAS,GACT+tB,EAAYxzB,EAAIrxB,OAAS4kD,EACzB9kD,EAAMuxB,EAAIrxB,OACZH,EAAI,EAEDA,EAAIC,EAAKD,GAAKglD,EACnB/tB,EAAOv0B,KAAK8uB,EAAI7tB,KAAKoB,MAAM/E,KAE7B,OAAOi3B,CACR,CAOD,SAASguB,GAAoBziC,EAAO7hB,EAAOukD,GACzC,IAMIjgC,EANE9kB,EAASqiB,EAAMtD,MAAM/e,OACrBglD,EAAaxhD,KAAK4B,IAAI5E,EAAOR,EAAS,GACtC8G,EAAQub,EAAMivB,YACdvqC,EAAMsb,EAAMkvB,UACZntC,EAAU,KACZ6gD,EAAY5iC,EAAMosB,gBAAgBuW,GAGtC,KAAID,IAEAjgC,EADa,IAAX9kB,EACOwD,KAAK6B,IAAI4/C,EAAYn+C,EAAOC,EAAMk+C,GACxB,IAAVzkD,GACC6hB,EAAMosB,gBAAgB,GAAKwW,GAAa,GAExCA,EAAY5iC,EAAMosB,gBAAgBuW,EAAa,IAAM,GAEjEC,GAAaD,EAAaxkD,EAAQskB,GAAUA,GAG5Bhe,EAAQ1C,GAAW6gD,EAAYl+C,EAAM3C,IAIvD,OAAO6gD,CACR,CAuBD,SAASC,GAAkB9jD,GACzB,OAAOA,EAAQikB,UAAYjkB,EAAQkkB,WAAa,CACjD,CAKD,SAAS6/B,GAAe/jD,EAAS+sB,GAC/B,IAAK/sB,EAAQyjB,QACX,OAAO,EAGT,IAAM5D,EAAOiN,GAAO9sB,EAAQ6f,KAAMkN,GAC5B3J,EAAUyJ,GAAU7sB,EAAQojB,SAGlC,OAFcvmB,EAAQmD,EAAQ2kB,MAAQ3kB,EAAQ2kB,KAAK/lB,OAAS,GAE5CihB,EAAKG,WAAcoD,EAAQiE,MAC5C,CAiBD,SAAS28B,GAAW97C,EAAOswC,EAAUh6C,GACnC,IAAIuc,EAAM9S,GAAmBC,GAI7B,OAHI1J,GAAyB,UAAbg6C,IAA2Bh6C,GAAwB,UAAbg6C,KACpDz9B,EAnHiB,SAAC7S,GAAD,MAAqB,SAAVA,EAAmB,QAAoB,UAAVA,EAAoB,OAASA,CAArE,CAmHX+7C,CAAalpC,IAEdA,CACR,KAuCoBmpC,GAAAA,SAAAA,iCAGnBllC,SAAAA,EAAYmgB,GAAK,6BACf,gBAGKziC,GAAKyiC,EAAIziC,GAEd,EAAKK,KAAOoiC,EAAIpiC,KAEhB,EAAKiD,aAAU8N,EAEf,EAAKqS,IAAMgf,EAAIhf,IAEf,EAAKtC,MAAQshB,EAAIthB,MAIjB,EAAKwF,SAAMvV,EAEX,EAAKyV,YAASzV,EAEd,EAAK0V,UAAO1V,EAEZ,EAAKwV,WAAQxV,EAEb,EAAK2W,WAAQ3W,EAEb,EAAKuZ,YAASvZ,EACd,EAAKq2C,SAAW,CACd3gC,KAAM,EACNF,MAAO,EACPD,IAAK,EACLE,OAAQ,GAGV,EAAKmH,cAAW5c,EAEhB,EAAKopB,eAAYppB,EAEjB,EAAKs2C,gBAAat2C,EAElB,EAAKu2C,mBAAgBv2C,EAErB,EAAKw2C,iBAAcx2C,EAEnB,EAAKy2C,kBAAez2C,EAIpB,EAAKjF,UAAOiF,EAEZ,EAAK02C,mBAAgB12C,EACrB,EAAK9J,SAAM8J,EACX,EAAK7J,SAAM6J,EACX,EAAK22C,YAAS32C,EAEd,EAAK6P,MAAQ,GAEb,EAAK+mC,eAAiB,KAEtB,EAAKC,YAAc,KAEnB,EAAKC,YAAc,KACnB,EAAKzX,QAAU,EACf,EAAK+U,WAAa,EAClB,EAAK2C,kBAAoB,CAAC,EAE1B,EAAK3U,iBAAcpiC,EAEnB,EAAKqiC,eAAYriC,EACjB,EAAKuqC,gBAAiB,EACtB,EAAKyM,cAAWh3C,EAChB,EAAKi3C,cAAWj3C,EAChB,EAAKk3C,mBAAgBl3C,EACrB,EAAKm3C,mBAAgBn3C,EACrB,EAAKo3C,aAAe,EACpB,EAAKC,aAAe,EACpB,EAAKtY,OAAS,CAAC,EACf,EAAKuY,mBAAoB,EACzB,EAAKvgB,cAAW/2B,EA9ED,CA+EhB,oCAMD8pC,SAAK53C,GACHib,KAAKjb,QAAUA,EAAQuvB,WAAWtU,KAAKiM,cAEvCjM,KAAKpS,KAAO7I,EAAQ6I,KAGpBoS,KAAK8pC,SAAW9pC,KAAK0W,MAAM3xB,EAAQgE,KACnCiX,KAAK6pC,SAAW7pC,KAAK0W,MAAM3xB,EAAQiE,KACnCgX,KAAKgqC,cAAgBhqC,KAAK0W,MAAM3xB,EAAQqlD,cACxCpqC,KAAK+pC,cAAgB/pC,KAAK0W,MAAM3xB,EAAQslD,aACzC,sBAQD3zB,SAAMoY,EAAK3qC,GACT,OAAO2qC,CACR,8BAODjhC,WACE,IAAKi8C,EAAoD9pC,KAApD8pC,SAAUD,EAA0C7pC,KAA1C6pC,SAAUG,EAAgChqC,KAAhCgqC,cAAeD,EAAiB/pC,KAAjB+pC,cAKxC,OAJAD,EAAWtnD,EAAgBsnD,EAAUxnD,OAAOiF,mBAC5CsiD,EAAWrnD,EAAgBqnD,EAAUvnD,OAAOurC,mBAC5Cmc,EAAgBxnD,EAAgBwnD,EAAe1nD,OAAOiF,mBACtDwiD,EAAgBvnD,EAAgBunD,EAAeznD,OAAOurC,mBAC/C,CACL9kC,IAAKvG,EAAgBsnD,EAAUE,GAC/BhhD,IAAKxG,EAAgBqnD,EAAUE,GAC/Bj8C,WAAYvL,EAASunD,GACrB/7C,WAAYxL,EAASsnD,GAExB,0BAQDrc,SAAUC,GAER,IACIvlC,EADJ,EAAyC8X,KAAKnS,gBAAzC9E,EAAL,EAAKA,IAAKC,EAAV,EAAUA,IAAK8E,EAAf,EAAeA,WAAYC,EAA3B,EAA2BA,WAG3B,GAAID,GAAcC,EAChB,MAAO,CAAChF,IAAAA,EAAKC,IAAAA,GAIf,IADA,IAAMshD,EAAQtqC,KAAK8nB,0BACVtkC,EAAI,EAAGO,EAAOumD,EAAM3mD,OAAQH,EAAIO,IAAQP,EAC/C0E,EAAQoiD,EAAM9mD,GAAGwkC,WAAWwF,UAAUxtB,KAAMytB,GACvC3/B,IACH/E,EAAM5B,KAAK4B,IAAIA,EAAKb,EAAMa,MAEvBgF,IACH/E,EAAM7B,KAAK6B,IAAIA,EAAKd,EAAMc,MAQ9B,MAAO,CACLD,IAAKvG,EAJPuG,EAAMgF,GAAchF,EAAMC,EAAMA,EAAMD,EAIVvG,EAH5BwG,EAAM8E,GAAc/E,EAAMC,EAAMD,EAAMC,EAGWD,IAC/CC,IAAKxG,EAAgBwG,EAAKxG,EAAgBuG,EAAKC,IAElD,2BAODq3C,WACE,MAAO,CACL93B,KAAMvI,KAAKqpC,aAAe,EAC1BjhC,IAAKpI,KAAKmpC,YAAc,EACxB9gC,MAAOrI,KAAKspC,cAAgB,EAC5BhhC,OAAQtI,KAAKopC,eAAiB,EAEjC,yBAODmB,WACE,OAAOvqC,KAAK0C,KACb,0BAKDqqB,WACE,IAAMpiB,EAAO3K,KAAK4C,MAAM+H,KACxB,OAAO3K,KAAKjb,QAAQ+nC,SAAW9sB,KAAKi0B,eAAiBtpB,EAAK6/B,QAAU7/B,EAAK8/B,UAAY9/B,EAAKmiB,QAAU,EACrG,6BAGDuV,WACEriC,KAAK4xB,OAAS,CAAC,EACf5xB,KAAKmqC,mBAAoB,CAC1B,6BAMDO,WACExoD,EAAK8d,KAAKjb,QAAQ2lD,aAAc,CAAC1qC,MAClC,uBAUD6kB,SAAOpV,EAAUwM,EAAWD,GAC1B,MAA8Chc,KAAKjb,QAA5C2jB,EAAP,EAAOA,YAAaE,EAApB,EAAoBA,MAAcg+B,EAAlC,EAA2BlkC,MACrBioC,EAAa/D,EAAS+D,WAG5B3qC,KAAK0qC,eAGL1qC,KAAKyP,SAAWA,EAChBzP,KAAKic,UAAYA,EACjBjc,KAAKkpC,SAAWltB,EAAUj6B,OAAO4M,OAAO,CACtC4Z,KAAM,EACNF,MAAO,EACPD,IAAK,EACLE,OAAQ,GACP0T,GAEHhc,KAAK0C,MAAQ,KACb1C,KAAK2pC,YAAc,KACnB3pC,KAAKypC,eAAiB,KACtBzpC,KAAK0pC,YAAc,KAGnB1pC,KAAK4qC,sBACL5qC,KAAK6qC,gBACL7qC,KAAK8qC,qBAEL9qC,KAAKinC,WAAajnC,KAAKi0B,eACnBj0B,KAAKwJ,MAAQwS,EAAQzT,KAAOyT,EAAQ3T,MACpCrI,KAAKoM,OAAS4P,EAAQ5T,IAAM4T,EAAQ1T,OAGnCtI,KAAKmqC,oBACRnqC,KAAK+qC,mBACL/qC,KAAKgrC,sBACLhrC,KAAKirC,kBACLjrC,KAAKwpC,O3BtOJ,SAAmB0B,EAAuCtiC,EAAwBF,GACvF,IAAO3f,EAAYmiD,EAAZniD,IAAKC,EAAOkiD,EAAPliD,IACNw5C,EAAS5/C,EAAYgmB,GAAQ5f,EAAMD,GAAO,GAC1CoiD,EAAW,SAACxpD,EAAe8K,GAAhB,OAAgCic,GAAyB,IAAV/mB,EAAc,EAAIA,EAAQ8K,CAAzE,EACjB,MAAO,CACL1D,IAAKoiD,EAASpiD,GAAM5B,KAAKa,IAAIw6C,IAC7Bx5C,IAAKmiD,EAASniD,EAAKw5C,GAEtB,C2B8NmB4I,CAAUprC,KAAM4I,EAAOF,GACrC1I,KAAKmqC,mBAAoB,GAG3BnqC,KAAKqrC,mBAELrrC,KAAK0C,MAAQ1C,KAAKsrC,cAAgB,GAGlCtrC,KAAKurC,kBAIL,IAAMC,EAAkBb,EAAa3qC,KAAK0C,MAAM/e,OAChDqc,KAAKyrC,sBAAsBD,EAAkBlD,GAAOtoC,KAAK0C,MAAOioC,GAAc3qC,KAAK0C,OAMnF1C,KAAKylB,YAGLzlB,KAAK0rC,+BACL1rC,KAAK2rC,yBACL3rC,KAAK4rC,8BAGDhF,EAASp+B,UAAYo+B,EAAS58B,UAAgC,SAApB48B,EAASviD,UACrD2b,KAAK0C,MAAQsH,GAAShK,KAAMA,KAAK0C,OACjC1C,KAAK2pC,YAAc,KACnB3pC,KAAK6rC,iBAGHL,GAEFxrC,KAAKyrC,sBAAsBzrC,KAAK0C,OAGlC1C,KAAK8rC,YACL9rC,KAAK+rC,MACL/rC,KAAKgsC,WAILhsC,KAAKisC,aACN,0BAKDxmB,WACE,IACImQ,EAAYE,EADZoW,EAAgBlsC,KAAKjb,QAAQxB,QAG7Byc,KAAKi0B,gBACP2B,EAAa51B,KAAKuI,KAClButB,EAAW91B,KAAKqI,QAEhButB,EAAa51B,KAAKoI,IAClB0tB,EAAW91B,KAAKsI,OAEhB4jC,GAAiBA,GAEnBlsC,KAAKi1B,YAAcW,EACnB51B,KAAKk1B,UAAYY,EACjB91B,KAAKo9B,eAAiB8O,EACtBlsC,KAAKkyB,QAAU4D,EAAWF,EAC1B51B,KAAKmsC,eAAiBnsC,KAAKjb,QAAQqnD,aACpC,4BAEDH,WACE/pD,EAAK8d,KAAKjb,QAAQknD,YAAa,CAACjsC,MACjC,oCAID4qC,WACE1oD,EAAK8d,KAAKjb,QAAQ6lD,oBAAqB,CAAC5qC,MACzC,8BACD6qC,WAEM7qC,KAAKi0B,gBAEPj0B,KAAKwJ,MAAQxJ,KAAKyP,SAClBzP,KAAKuI,KAAO,EACZvI,KAAKqI,MAAQrI,KAAKwJ,QAElBxJ,KAAKoM,OAASpM,KAAKic,UAGnBjc,KAAKoI,IAAM,EACXpI,KAAKsI,OAAStI,KAAKoM,QAIrBpM,KAAKqpC,YAAc,EACnBrpC,KAAKmpC,WAAa,EAClBnpC,KAAKspC,aAAe,EACpBtpC,KAAKopC,cAAgB,CACtB,mCACD0B,WACE5oD,EAAK8d,KAAKjb,QAAQ+lD,mBAAoB,CAAC9qC,MACxC,2BAEDqsC,SAAW9lC,GACTvG,KAAK4C,MAAM0pC,cAAc/lC,EAAMvG,KAAKiM,cACpC/pB,EAAK8d,KAAKjb,QAAQwhB,GAAO,CAACvG,MAC3B,iCAGD+qC,WACE/qC,KAAKqsC,WAAW,mBACjB,oCACDrB,WAAwB,gCACxBC,WACEjrC,KAAKqsC,WAAW,kBACjB,iCAGDhB,WACErrC,KAAKqsC,WAAW,mBACjB,2BAIDf,WACE,MAAO,EACR,gCACDC,WACEvrC,KAAKqsC,WAAW,kBACjB,4CAEDE,WACErqD,EAAK8d,KAAKjb,QAAQwnD,4BAA6B,CAACvsC,MACjD,mCAKDwsC,SAAmB9pC,GACjB,IACIlf,EAAGO,EAAM2+B,EADPkkB,EAAW5mC,KAAKjb,QAAQ2d,MAE9B,IAAKlf,EAAI,EAAGO,EAAO2e,EAAM/e,OAAQH,EAAIO,EAAMP,KACzCk/B,EAAOhgB,EAAMlf,IACR4qC,MAAQlsC,EAAK0kD,EAAS5jD,SAAU,CAAC0/B,EAAK/gC,MAAO6B,EAAGkf,GAAQ1C,KAEhE,2CACDysC,WACEvqD,EAAK8d,KAAKjb,QAAQ0nD,2BAA4B,CAACzsC,MAChD,6CAID0rC,WACExpD,EAAK8d,KAAKjb,QAAQ2mD,6BAA8B,CAAC1rC,MAClD,uCACD2rC,WACE,IAMIziC,EAAW+S,EAAWywB,EANpB3nD,EAAUib,KAAKjb,QACf6hD,EAAW7hD,EAAQ2d,MACnBiqC,EAAW3sC,KAAK0C,MAAM/e,OACtBgmB,EAAci9B,EAASj9B,aAAe,EACtCC,EAAcg9B,EAASh9B,YACzB2/B,EAAgB5/B,EAGpB,IAAK3J,KAAK4sC,eAAiBhG,EAASp+B,SAAWmB,GAAeC,GAAe+iC,GAAY,IAAM3sC,KAAKi0B,eAClGj0B,KAAKupC,cAAgB5/B,MADvB,CAKA,IAAMkjC,EAAa7sC,KAAK8sC,iBAClBC,EAAgBF,EAAWG,OAAOxjC,MAClCyjC,EAAiBJ,EAAWK,QAAQ9gC,OAIpCqD,EAAWxkB,GAAY+U,KAAK4C,MAAM4G,MAAQujC,EAAe,EAAG/sC,KAAKyP,UAInEs9B,EAAgB,GAHpB7jC,EAAYnkB,EAAQ0jB,OAASzI,KAAKyP,SAAWk9B,EAAWl9B,GAAYk9B,EAAW,MAI7EzjC,EAAYuG,GAAYk9B,GAAY5nD,EAAQ0jB,OAAS,GAAM,IAC3DwT,EAAYjc,KAAKic,UAAY4sB,GAAkB9jD,EAAQ8jB,MACvD+9B,EAASz+B,QAAU2gC,GAAe/jD,EAAQ0kB,MAAOzJ,KAAK4C,MAAM7d,QAAQ6f,MACpE8nC,EAAmBvlD,KAAK4C,KAAKgjD,EAAgBA,EAAgBE,EAAiBA,GAC9E1D,EAAgBpgD,GAAUhC,KAAK4B,IAC7B5B,KAAKgmD,KAAKliD,IAAa4hD,EAAWK,QAAQ9gC,OAAS,GAAKlD,GAAY,EAAG,IACvE/hB,KAAKgmD,KAAKliD,GAAYgxB,EAAYywB,GAAmB,EAAG,IAAMvlD,KAAKgmD,KAAKliD,GAAYgiD,EAAiBP,GAAmB,EAAG,MAE7HnD,EAAgBpiD,KAAK6B,IAAI2gB,EAAaxiB,KAAK4B,IAAI6gB,EAAa2/B,KAG9DvpC,KAAKupC,cAAgBA,CAxBpB,CAyBF,4CACDqC,WACE1pD,EAAK8d,KAAKjb,QAAQ6mD,4BAA6B,CAAC5rC,MACjD,8BACD6rC,WAAkB,0BAIlBC,WACE5pD,EAAK8d,KAAKjb,QAAQ+mD,UAAW,CAAC9rC,MAC/B,oBACD+rC,WAEE,IAAM7Q,EAAU,CACd1xB,MAAO,EACP4C,OAAQ,GAGHxJ,EAAuE5C,KAAvE4C,MAAP,EAA8E5C,KAAhEjb,QAAiB6hD,EAA/B,EAAwBlkC,MAAwB0qC,EAAhD,EAAyC3jC,MAAwB4jC,EAAjE,EAA2DxkC,KACrDL,EAAUxI,KAAK4sC,aACf3Y,EAAej0B,KAAKi0B,eAE1B,GAAIzrB,EAAS,CACX,IAAM8kC,EAAcxE,GAAesE,EAAWxqC,EAAM7d,QAAQ6f,MAU5D,GATIqvB,GACFiH,EAAQ1xB,MAAQxJ,KAAKyP,SACrByrB,EAAQ9uB,OAASy8B,GAAkBwE,GAAYC,IAE/CpS,EAAQ9uB,OAASpM,KAAKic,UACtBif,EAAQ1xB,MAAQq/B,GAAkBwE,GAAYC,GAI5C1G,EAASp+B,SAAWxI,KAAK0C,MAAM/e,OAAQ,CACzC,MAAuCqc,KAAK8sC,iBAArCrF,EAAP,EAAOA,MAAO/7C,EAAd,EAAcA,KAAMshD,EAApB,EAAoBA,OAAQE,EAA5B,EAA4BA,QACtBK,EAAiC,EAAnB3G,EAASz+B,QACvBqlC,EAAevkD,GAAU+W,KAAKupC,eAC9Bv5C,EAAM7I,KAAK6I,IAAIw9C,GACfz+C,EAAM5H,KAAK4H,IAAIy+C,GAErB,GAAIvZ,EAAc,CAEhB,IAAMwZ,EAAc7G,EAAS/8B,OAAS,EAAI9a,EAAMi+C,EAAOxjC,MAAQxZ,EAAMk9C,EAAQ9gC,OAC7E8uB,EAAQ9uB,OAASjlB,KAAK4B,IAAIiX,KAAKic,UAAWif,EAAQ9uB,OAASqhC,EAAcF,EAC1E,KAAM,CAGL,IAAMG,EAAa9G,EAAS/8B,OAAS,EAAI7Z,EAAMg9C,EAAOxjC,MAAQza,EAAMm+C,EAAQ9gC,OAE5E8uB,EAAQ1xB,MAAQriB,KAAK4B,IAAIiX,KAAKyP,SAAUyrB,EAAQ1xB,MAAQkkC,EAAaH,EACtE,CACDvtC,KAAK2tC,kBAAkBlG,EAAO/7C,EAAMqD,EAAKiB,EAC1C,CACF,CAEDgQ,KAAK4tC,iBAED3Z,GACFj0B,KAAKwJ,MAAQxJ,KAAKkyB,QAAUtvB,EAAM4G,MAAQxJ,KAAKkpC,SAAS3gC,KAAOvI,KAAKkpC,SAAS7gC,MAC7ErI,KAAKoM,OAAS8uB,EAAQ9uB,SAEtBpM,KAAKwJ,MAAQ0xB,EAAQ1xB,MACrBxJ,KAAKoM,OAASpM,KAAKkyB,QAAUtvB,EAAMwJ,OAASpM,KAAKkpC,SAAS9gC,IAAMpI,KAAKkpC,SAAS5gC,OAEjF,kCAEDqlC,SAAkBlG,EAAO/7C,EAAMqD,EAAKiB,GAClC,MAA4CgQ,KAAKjb,QAAjD,IAAO2d,MAAQzV,EAAf,EAAeA,MAAOkb,EAAtB,EAAsBA,QAAUo1B,EAAhC,EAAgCA,SAC1BsQ,EAAmC,IAAvB7tC,KAAKupC,cACjBuE,EAAgC,QAAbvQ,GAAoC,MAAdv9B,KAAKpS,KAEpD,GAAIoS,KAAKi0B,eAAgB,CACvB,IAAM8Z,EAAa/tC,KAAKoyB,gBAAgB,GAAKpyB,KAAKuI,KAC5CylC,EAAchuC,KAAKqI,MAAQrI,KAAKoyB,gBAAgBpyB,KAAK0C,MAAM/e,OAAS,GACtE0lD,EAAc,EACdC,EAAe,EAIfuE,EACEC,GACFzE,EAAcr5C,EAAMy3C,EAAMj+B,MAC1B8/B,EAAev6C,EAAMrD,EAAK0gB,SAE1Bi9B,EAAct6C,EAAM04C,EAAMr7B,OAC1Bk9B,EAAet5C,EAAMtE,EAAK8d,OAET,UAAVvc,EACTq8C,EAAe59C,EAAK8d,MACD,QAAVvc,EACTo8C,EAAc5B,EAAMj+B,MACD,UAAVvc,IACTo8C,EAAc5B,EAAMj+B,MAAQ,EAC5B8/B,EAAe59C,EAAK8d,MAAQ,GAI9BxJ,KAAKqpC,YAAcliD,KAAK6B,KAAKqgD,EAAc0E,EAAa5lC,GAAWnI,KAAKwJ,OAASxJ,KAAKwJ,MAAQukC,GAAa,GAC3G/tC,KAAKspC,aAAeniD,KAAK6B,KAAKsgD,EAAe0E,EAAc7lC,GAAWnI,KAAKwJ,OAASxJ,KAAKwJ,MAAQwkC,GAAc,EAChH,KAAM,CACL,IAAI7E,EAAaz9C,EAAK0gB,OAAS,EAC3Bg9B,EAAgB3B,EAAMr7B,OAAS,EAErB,UAAVnf,GACFk8C,EAAa,EACbC,EAAgB3B,EAAMr7B,QACH,QAAVnf,IACTk8C,EAAaz9C,EAAK0gB,OAClBg9B,EAAgB,GAGlBppC,KAAKmpC,WAAaA,EAAahhC,EAC/BnI,KAAKopC,cAAgBA,EAAgBjhC,CACtC,CACF,+BAMDylC,WACM5tC,KAAKkpC,WACPlpC,KAAKkpC,SAAS3gC,KAAOphB,KAAK6B,IAAIgX,KAAKqpC,YAAarpC,KAAKkpC,SAAS3gC,MAC9DvI,KAAKkpC,SAAS9gC,IAAMjhB,KAAK6B,IAAIgX,KAAKmpC,WAAYnpC,KAAKkpC,SAAS9gC,KAC5DpI,KAAKkpC,SAAS7gC,MAAQlhB,KAAK6B,IAAIgX,KAAKspC,aAActpC,KAAKkpC,SAAS7gC,OAChErI,KAAKkpC,SAAS5gC,OAASnhB,KAAK6B,IAAIgX,KAAKopC,cAAeppC,KAAKkpC,SAAS5gC,QAErE,yBAED0jC,WACE9pD,EAAK8d,KAAKjb,QAAQinD,SAAU,CAAChsC,MAC9B,6BAMDi0B,WACE,MAAyBj0B,KAAKjb,QAAvB6I,EAAP,EAAOA,KAAM2vC,EAAb,EAAaA,SACb,MAAoB,QAAbA,GAAmC,WAAbA,GAAkC,MAAT3vC,CACvD,2BAIDqgD,WACE,OAAOjuC,KAAKjb,QAAQ86C,QACrB,sCAMD4L,SAAsB/oC,GAMpB,IAAIlf,EAAGO,EACP,IANAic,KAAKusC,8BAELvsC,KAAKwsC,mBAAmB9pC,GAInBlf,EAAI,EAAGO,EAAO2e,EAAM/e,OAAQH,EAAIO,EAAMP,IACrC9B,EAAcghB,EAAMlf,GAAG4qC,SACzB1rB,EAAMvW,OAAO3I,EAAG,GAChBO,IACAP,KAIJwc,KAAKysC,4BACN,+BAMDK,WACE,IAAID,EAAa7sC,KAAK2pC,YAEtB,IAAKkD,EAAY,CACf,IAAMlC,EAAa3qC,KAAKjb,QAAQ2d,MAAMioC,WAClCjoC,EAAQ1C,KAAK0C,MACbioC,EAAajoC,EAAM/e,SACrB+e,EAAQ4lC,GAAO5lC,EAAOioC,IAGxB3qC,KAAK2pC,YAAckD,EAAa7sC,KAAKkuC,mBAAmBxrC,EAAOA,EAAM/e,OACtE,CAED,OAAOkpD,CACR,mCAQDqB,SAAmBxrC,EAAO/e,GACxB,IAKIH,EAAGkb,EAAG4M,EAAM8iB,EAAO+f,EAAUC,EAAYjjC,EAAOpG,EAAYyE,EAAO4C,EAAQiiC,EALxEnpC,EAAkClF,KAAlCkF,IAAwBopC,EAAUtuC,KAA7B4pC,kBACN2E,EAAS,GACTC,EAAU,GACZC,EAAkB,EAClBC,EAAmB,EAGvB,IAAKlrD,EAAI,EAAGA,EAAIG,IAAUH,EAAG,CAQ3B,GAPA4qC,EAAQ1rB,EAAMlf,GAAG4qC,MACjB+f,EAAWnuC,KAAK2uC,wBAAwBnrD,GACxC0hB,EAAIN,KAAOwpC,EAAaD,EAASrjC,OACjCK,EAAQmjC,EAAOF,GAAcE,EAAOF,IAAe,CAACzjC,KAAM,CAAC,EAAGC,GAAI,IAClE7F,EAAaopC,EAASppC,WACtByE,EAAQ4C,EAAS,EAEZ1qB,EAAc0sC,IAAWxsC,EAAQwsC,IAG/B,GAAIxsC,EAAQwsC,GAEjB,IAAK1vB,EAAI,EAAG4M,EAAO8iB,EAAMzqC,OAAQ+a,EAAI4M,IAAQ5M,EAGtChd,EAFL2sD,EAAcjgB,EAAM1vB,KAEgB9c,EAAQysD,KAC1C7kC,EAAQkB,GAAaxF,EAAKiG,EAAMR,KAAMQ,EAAMP,GAAIpB,EAAO6kC,GACvDjiC,GAAUrH,QATdyE,EAAQkB,GAAaxF,EAAKiG,EAAMR,KAAMQ,EAAMP,GAAIpB,EAAO4kB,GACvDhiB,EAASrH,EAYXwpC,EAAOroD,KAAKsjB,GACZglC,EAAQtoD,KAAKkmB,GACbqiC,EAAkBtnD,KAAK6B,IAAIwgB,EAAOilC,GAClCC,EAAmBvnD,KAAK6B,IAAIojB,EAAQsiC,EACrC,EAtwBL,SAAwBJ,EAAQ3qD,GAC9BN,EAAKirD,GAAQ,SAACnjC,GACZ,IAEI3nB,EAFEonB,EAAKO,EAAMP,GACXc,EAAQd,EAAGjnB,OAAS,EAE1B,GAAI+nB,EAAQ/nB,EAAQ,CAClB,IAAKH,EAAI,EAAGA,EAAIkoB,IAASloB,SAChB2nB,EAAMR,KAAKC,EAAGpnB,IAEvBonB,EAAGze,OAAO,EAAGuf,EACd,CACF,GACF,CA2vBGN,CAAekjC,EAAQ3qD,GAEvB,IAAMqpD,EAASuB,EAAO1pD,QAAQ4pD,GACxBvB,EAAUsB,EAAQ3pD,QAAQ6pD,GAE1BE,EAAU,SAACC,GAAD,MAAU,CAACrlC,MAAO+kC,EAAOM,IAAQ,EAAGziC,OAAQoiC,EAAQK,IAAQ,EAA5D,EAEhB,MAAO,CACLpH,MAAOmH,EAAQ,GACfljD,KAAMkjD,EAAQjrD,EAAS,GACvBqpD,OAAQ4B,EAAQ5B,GAChBE,QAAS0B,EAAQ1B,GACjBqB,OAAAA,EACAC,QAAAA,EAEH,iCAODngB,SAAiB1sC,GACf,OAAOA,CACR,iCASDqM,SAAiBrM,EAAOwC,GACtB,OAAOopC,GACR,iCAQDuhB,SAAiBljC,GAAS,gCAQ1BwmB,SAAgBjuC,GACd,IAAMue,EAAQ1C,KAAK0C,MACnB,OAAIve,EAAQ,GAAKA,EAAQue,EAAM/e,OAAS,EAC/B,KAEFqc,KAAKhS,iBAAiB0U,EAAMve,GAAOxC,MAC3C,mCAQDk0C,SAAmBkZ,GACb/uC,KAAKo9B,iBACP2R,EAAU,EAAIA,GAGhB,IAAMnjC,EAAQ5L,KAAKi1B,YAAc8Z,EAAU/uC,KAAKkyB,QAChD,OxCxtBKjnC,GwCwtBc+U,KAAKmsC,eAAiBxgC,GAAY3L,KAAK4C,MAAOgJ,EAAO,GAAKA,GxCxtBpD,MAAO,MwCytBjC,mCAMDojC,SAAmBpjC,GACjB,IAAMmjC,GAAWnjC,EAAQ5L,KAAKi1B,aAAej1B,KAAKkyB,QAClD,OAAOlyB,KAAKo9B,eAAiB,EAAI2R,EAAUA,CAC5C,6BAOD/a,WACE,OAAOh0B,KAAKhS,iBAAiBgS,KAAKivC,eACnC,6BAKDA,WACE,IAAOlmD,EAAYiX,KAAZjX,IAAKC,EAAOgX,KAAPhX,IAEZ,OAAOD,EAAM,GAAKC,EAAM,EAAIA,EAC1BD,EAAM,GAAKC,EAAM,EAAID,EACrB,CACH,2BAKDkjB,SAAW9nB,GACT,IAAMue,EAAQ1C,KAAK0C,OAAS,GAE5B,GAAIve,GAAS,GAAKA,EAAQue,EAAM/e,OAAQ,CACtC,IAAM++B,EAAOhgB,EAAMve,GACnB,OAAOu+B,EAAKkH,WACblH,EAAKkH,SA50BV,SAA2B/T,EAAQ1xB,EAAOu+B,GACxC,OAAOpQ,GAAcuD,EAAQ,CAC3B6M,KAAAA,EACAv+B,MAAAA,EACArC,KAAM,QAET,CAs0BoBotD,CAAkBlvC,KAAKiM,aAAc9nB,EAAOu+B,GAC5D,CACD,OAAO1iB,KAAK4pB,WACZ5pB,KAAK4pB,SAr1BAtX,GAq1B8BtS,KAAK4C,MAAMqJ,aAr1BnB,CAC3BjG,MAo1B4DhG,KAn1B5Dle,KAAM,UAo1BP,0BAMDglD,WACE,IAAMqI,EAAcnvC,KAAKjb,QAAQ2d,MAG3B0sC,EAAMnmD,GAAU+W,KAAKupC,eACrBv5C,EAAM7I,KAAKa,IAAIb,KAAK6I,IAAIo/C,IACxBrgD,EAAM5H,KAAKa,IAAIb,KAAK4H,IAAIqgD,IAExBvC,EAAa7sC,KAAK8sC,iBAClB3kC,EAAUgnC,EAAYllC,iBAAmB,EACzC/W,EAAI25C,EAAaA,EAAWG,OAAOxjC,MAAQrB,EAAU,EACrD7W,EAAIu7C,EAAaA,EAAWK,QAAQ9gC,OAASjE,EAAU,EAG7D,OAAOnI,KAAKi0B,eACR3iC,EAAItB,EAAMkD,EAAInE,EAAMmE,EAAIlD,EAAMsB,EAAIvC,EAClCuC,EAAIvC,EAAMmE,EAAIlD,EAAMsB,EAAItB,EAAMkD,EAAInE,CACvC,2BAMD69C,WACE,IAAMpkC,EAAUxI,KAAKjb,QAAQyjB,QAE7B,MAAgB,SAAZA,IACOA,EAGJxI,KAAK8nB,0BAA0BnkC,OAAS,CAChD,sCAKD0rD,SAAsB3gB,GACpB,IAiBI4gB,EAAa9rD,EAAGolD,EAAW2G,EAC3BC,EAAKC,EAAKC,EAAKC,EAAKC,EAAIC,EAAIC,EAAIC,EAlB9BniD,EAAOoS,KAAKpS,KACZgV,EAAQ5C,KAAK4C,MACb7d,EAAUib,KAAKjb,QACd8jB,EAA0B9jB,EAA1B8jB,KAAM00B,EAAoBx4C,EAApBw4C,SAAUl0B,EAAUtkB,EAAVskB,OACjBZ,EAASI,EAAKJ,OACdwrB,EAAej0B,KAAKi0B,eAEpB+b,EADQhwC,KAAK0C,MACO/e,QAAU8kB,EAAS,EAAI,GAC3CwnC,EAAKpH,GAAkBhgC,GACvBvc,EAAQ,GAER4jD,EAAa7mC,EAAOiL,WAAWtU,KAAKiM,cACpCkkC,EAAYD,EAAW1nC,QAAU0nC,EAAW1mC,MAAQ,EACpD4mC,EAAgBD,EAAY,EAC5BE,EAAmB,SAASzkC,GAChC,OAAOD,GAAY/I,EAAOgJ,EAAOukC,EAClC,EAID,GAAiB,QAAb5S,EACF+R,EAAce,EAAiBrwC,KAAKsI,QACpCmnC,EAAMzvC,KAAKsI,OAAS2nC,EACpBN,EAAML,EAAcc,EACpBP,EAAKQ,EAAiB3hB,EAAUtmB,KAAOgoC,EACvCL,EAAKrhB,EAAUpmB,YACV,GAAiB,WAAbi1B,EACT+R,EAAce,EAAiBrwC,KAAKoI,KACpCynC,EAAKnhB,EAAUtmB,IACf2nC,EAAKM,EAAiB3hB,EAAUpmB,QAAU8nC,EAC1CX,EAAMH,EAAcc,EACpBT,EAAM3vC,KAAKoI,IAAM6nC,OACZ,GAAiB,SAAb1S,EACT+R,EAAce,EAAiBrwC,KAAKqI,OACpCmnC,EAAMxvC,KAAKqI,MAAQ4nC,EACnBP,EAAMJ,EAAcc,EACpBR,EAAKS,EAAiB3hB,EAAUnmB,MAAQ6nC,EACxCN,EAAKphB,EAAUrmB,WACV,GAAiB,UAAbk1B,EACT+R,EAAce,EAAiBrwC,KAAKuI,MACpCqnC,EAAKlhB,EAAUnmB,KACfunC,EAAKO,EAAiB3hB,EAAUrmB,OAAS+nC,EACzCZ,EAAMF,EAAcc,EACpBV,EAAM1vC,KAAKuI,KAAO0nC,OACb,GAAa,MAATriD,EAAc,CACvB,GAAiB,WAAb2vC,EACF+R,EAAce,GAAkB3hB,EAAUtmB,IAAMsmB,EAAUpmB,QAAU,EAAI,SACnE,GAAIlmB,EAASm7C,GAAW,CAC7B,IAAM+S,EAAiBvuD,OAAO2B,KAAK65C,GAAU,GACvC57C,EAAQ47C,EAAS+S,GACvBhB,EAAce,EAAiBrwC,KAAK4C,MAAMqD,OAAOqqC,GAAgBtiD,iBAAiBrM,GACnF,CAEDkuD,EAAKnhB,EAAUtmB,IACf2nC,EAAKrhB,EAAUpmB,OAEfqnC,GADAF,EAAMH,EAAcc,GACRH,CACb,MAAM,GAAa,MAATriD,EAAc,CACvB,GAAiB,WAAb2vC,EACF+R,EAAce,GAAkB3hB,EAAUnmB,KAAOmmB,EAAUrmB,OAAS,QAC/D,GAAIjmB,EAASm7C,GAAW,CAC7B,IAAM+S,EAAiBvuD,OAAO2B,KAAK65C,GAAU,GACvC57C,EAAQ47C,EAAS+S,GACvBhB,EAAce,EAAiBrwC,KAAK4C,MAAMqD,OAAOqqC,GAAgBtiD,iBAAiBrM,GACnF,CAGD+tD,GADAF,EAAMF,EAAcc,GACRH,EACZL,EAAKlhB,EAAUnmB,KACfunC,EAAKphB,EAAUrmB,KAChB,CAED,IAAMkoC,EAAQ7tD,EAAeqC,EAAQ2d,MAAM0kC,cAAe4I,GACpDQ,EAAOrpD,KAAK6B,IAAI,EAAG7B,KAAKwgD,KAAKqI,EAAcO,IACjD,IAAK/sD,EAAI,EAAGA,EAAIwsD,EAAaxsD,GAAKgtD,EAAM,CACtC,IAAMjsC,EAAUvE,KAAKiM,WAAWzoB,GAC1BitD,EAAc5nC,EAAKyL,WAAW/P,GAC9BmsC,EAAoBrnC,EAAOiL,WAAW/P,GAEtCuE,EAAY2nC,EAAY3nC,UACxB6nC,EAAYF,EAAYrwC,MACxB8gB,EAAawvB,EAAkBpnC,MAAQ,GACvC6X,EAAmBuvB,EAAkBnnC,WAErCL,EAAYunC,EAAYvnC,UACxBE,EAAYqnC,EAAYrnC,UACxBwnC,EAAiBH,EAAYG,gBAAkB,GAC/CC,EAAuBJ,EAAYI,0BAKvBh+C,KAHlB+1C,EAAYH,GAAoBzoC,KAAMxc,EAAGilB,MAOzC8mC,EAAmB5jC,GAAY/I,EAAOgmC,EAAW9/B,GAE7CmrB,EACFub,EAAME,EAAME,EAAKE,EAAKP,EAEtBE,EAAME,EAAME,EAAKE,EAAKR,EAGxBjjD,EAAMpG,KAAK,CACTspD,IAAAA,EACAC,IAAAA,EACAC,IAAAA,EACAC,IAAAA,EACAC,GAAAA,EACAC,GAAAA,EACAC,GAAAA,EACAC,GAAAA,EACAvmC,MAAOV,EACP1I,MAAOuwC,EACPzvB,WAAAA,EACAC,iBAAAA,EACAjY,UAAAA,EACAE,UAAAA,EACAwnC,eAAAA,EACAC,qBAAAA,IAEH,CAKD,OAHA7wC,KAAKiqC,aAAe+F,EACpBhwC,KAAKkqC,aAAeoF,EAEbhjD,CACR,mCAKDwkD,SAAmBpiB,GACjB,IAWIlrC,EAAGO,EAAYqqC,EAAOzoC,EAAGE,EAAGiqB,EAAWlE,EAAOhH,EAAMG,EAAYgsC,EAAWC,EAXzEpjD,EAAOoS,KAAKpS,KACZ7I,EAAUib,KAAKjb,QACdw4C,EAAgCx4C,EAAhCw4C,SAAiB4R,EAAepqD,EAAtB2d,MACXuxB,EAAej0B,KAAKi0B,eACpBvxB,EAAQ1C,KAAK0C,MACZzV,EAAsCkiD,EAAtCliD,MAAOqd,EAA+B6kC,EAA/B7kC,WAAYnC,EAAmBgnC,EAAnBhnC,QAAS0B,EAAUslC,EAAVtlC,OAC7BomC,EAAKpH,GAAkB9jD,EAAQ8jB,MAC/BooC,EAAiBhB,EAAK9nC,EACtB+oC,EAAkBrnC,GAAU1B,EAAU8oC,EACtCpkC,GAAY5jB,GAAU+W,KAAKupC,eAC3Bj9C,EAAQ,GAEVyjB,EAAe,SAEnB,GAAiB,QAAbwtB,EACF13C,EAAIma,KAAKsI,OAAS4oC,EAClBphC,EAAY9P,KAAKmxC,+BACZ,GAAiB,WAAb5T,EACT13C,EAAIma,KAAKoI,IAAM8oC,EACfphC,EAAY9P,KAAKmxC,+BACZ,GAAiB,SAAb5T,EAAqB,CAC9B,IAAMz9B,EAAME,KAAKoxC,wBAAwBnB,GACzCngC,EAAYhQ,EAAIgQ,UAChBnqB,EAAIma,EAAIna,CACT,MAAM,GAAiB,UAAb43C,EAAsB,CAC/B,IAAMz9B,EAAME,KAAKoxC,wBAAwBnB,GACzCngC,EAAYhQ,EAAIgQ,UAChBnqB,EAAIma,EAAIna,CACT,MAAM,GAAa,MAATiI,EAAc,CACvB,GAAiB,WAAb2vC,EACF13C,GAAM6oC,EAAUtmB,IAAMsmB,EAAUpmB,QAAU,EAAK2oC,OAC1C,GAAI7uD,EAASm7C,GAAW,CAC7B,IAAM+S,EAAiBvuD,OAAO2B,KAAK65C,GAAU,GACvC57C,EAAQ47C,EAAS+S,GACvBzqD,EAAIma,KAAK4C,MAAMqD,OAAOqqC,GAAgBtiD,iBAAiBrM,GAASsvD,CACjE,CACDnhC,EAAY9P,KAAKmxC,yBAClB,MAAM,GAAa,MAATvjD,EAAc,CACvB,GAAiB,WAAb2vC,EACF53C,GAAM+oC,EAAUnmB,KAAOmmB,EAAUrmB,OAAS,EAAK4oC,OAC1C,GAAI7uD,EAASm7C,GAAW,CAC7B,IAAM+S,EAAiBvuD,OAAO2B,KAAK65C,GAAU,GACvC57C,EAAQ47C,EAAS+S,GACvB3qD,EAAIqa,KAAK4C,MAAMqD,OAAOqqC,GAAgBtiD,iBAAiBrM,EACxD,CACDmuB,EAAY9P,KAAKoxC,wBAAwBnB,GAAIngC,SAC9C,CAEY,MAATliB,IACY,UAAVX,EACF8iB,EAAe,MACI,QAAV9iB,IACT8iB,EAAe,WAInB,IAAM88B,EAAa7sC,KAAK8sC,iBACxB,IAAKtpD,EAAI,EAAGO,EAAO2e,EAAM/e,OAAQH,EAAIO,IAAQP,EAAG,CAE9C4qC,EADO1rB,EAAMlf,GACA4qC,MAEb,IAAMqiB,EAActB,EAAY76B,WAAWtU,KAAKiM,WAAWzoB,IAC3DooB,EAAQ5L,KAAKoyB,gBAAgB5uC,GAAK2rD,EAAYjlC,YAE9CnF,GADAH,EAAO5E,KAAK2uC,wBAAwBnrD,IAClBuhB,WAElB,IAAMssC,GADNN,EAAYnvD,EAAQwsC,GAASA,EAAMzqC,OAAS,GACd,EACxByc,EAAQqwC,EAAYrwC,MACpB+O,EAAcshC,EAAY1mC,gBAC1BmF,EAAcuhC,EAAY3mC,gBAC5BwnC,EAAgBxhC,EAEhBmkB,GACFtuC,EAAIimB,EAEc,UAAdkE,IAEAwhC,EADE9tD,IAAMO,EAAO,EACEic,KAAKjb,QAAQxB,QAAoB,OAAV,QACzB,IAANC,EACQwc,KAAKjb,QAAQxB,QAAmB,QAAT,OAExB,UAMhBytD,EAFa,QAAbzT,EACiB,SAAfjzB,GAAsC,IAAbuC,GACbkkC,EAAYhsC,EAAaA,EAAa,EAC5B,WAAfuF,GACKuiC,EAAWK,QAAQ9gC,OAAS,EAAIilC,EAAYtsC,EAAaA,GAEzD8nC,EAAWK,QAAQ9gC,OAASrH,EAAa,EAItC,SAAfuF,GAAsC,IAAbuC,EACd9H,EAAa,EACF,WAAfuF,EACIuiC,EAAWK,QAAQ9gC,OAAS,EAAIilC,EAAYtsC,EAE5C8nC,EAAWK,QAAQ9gC,OAAS2kC,EAAYhsC,EAGrD8E,IACFmnC,IAAe,GAEA,IAAbnkC,GAAmB4jC,EAAYlmC,oBACjC5kB,GAAMof,EAAa,EAAK5d,KAAK4H,IAAI8d,MAGnChnB,EAAI+lB,EACJolC,GAAc,EAAID,GAAahsC,EAAa,GAG9C,IAAIsK,OAAQ,EAEZ,GAAIohC,EAAYlmC,kBAAmB,CACjC,IAAMgnC,EAAe3/B,GAAU6+B,EAAYhmC,iBACrC2B,EAASygC,EAAW2B,QAAQhrD,GAC5BgmB,EAAQqjC,EAAW0B,OAAO/qD,GAE5B4kB,EAAM4oC,EAAaO,EAAanpC,IAChCG,EAAO,EAAIgpC,EAAahpC,KAE5B,OAAQwH,GACR,IAAK,SACH3H,GAAOgE,EAAS,EAChB,MACF,IAAK,SACHhE,GAAOgE,EAMT,OAAQ0D,GACR,IAAK,SACHvH,GAAQiB,EAAQ,EAChB,MACF,IAAK,QACHjB,GAAQiB,EAMV6F,EAAW,CACT9G,KAAAA,EACAH,IAAAA,EACAoB,MAAOA,EAAQ+nC,EAAa/nC,MAC5B4C,OAAQA,EAASmlC,EAAanlC,OAE9BhM,MAAOqwC,EAAYjmC,cAEtB,CAEDle,EAAMpG,KAAK,CACT2mB,SAAAA,EACAuhB,MAAAA,EACAxpB,KAAAA,EACAxE,MAAAA,EACA+O,YAAAA,EACAD,YAAAA,EACA8hC,WAAAA,EACAlhC,UAAWwhC,EACXvhC,aAAAA,EACAH,YAAa,CAACjqB,EAAGE,GACjBwpB,SAAAA,GAEH,CAED,OAAO/iB,CACR,wCAED6kD,WACE,MAA0BnxC,KAAKjb,QAAxBw4C,EAAP,EAAOA,SAAU76B,EAAjB,EAAiBA,MAGjB,IAFkBzZ,GAAU+W,KAAKupC,eAG/B,MAAoB,QAAbhM,EAAqB,OAAS,QAGvC,IAAItwC,EAAQ,SAUZ,MARoB,UAAhByV,EAAMzV,MACRA,EAAQ,OACiB,QAAhByV,EAAMzV,MACfA,EAAQ,QACiB,UAAhByV,EAAMzV,QACfA,EAAQ,SAGHA,CACR,wCAEDmkD,SAAwBnB,GACtB,IAKIngC,EACAnqB,EANJ,EAAyDqa,KAAKjb,QAAvDw4C,EAAP,EAAOA,SAAP,IAAiB76B,MAAQ4H,EAAzB,EAAyBA,WAAYT,EAArC,EAAqCA,OAAQ1B,EAA7C,EAA6CA,QAEvC8oC,EAAiBhB,EAAK9nC,EACtB6kC,EAFahtC,KAAK8sC,iBAEEE,OAAOxjC,MA6DjC,MAxDiB,SAAb+zB,EACE1zB,GACFlkB,EAAIqa,KAAKqI,MAAQF,EAEE,SAAfmC,EACFwF,EAAY,OACY,WAAfxF,GACTwF,EAAY,SACZnqB,GAAMqnD,EAAS,IAEfl9B,EAAY,QACZnqB,GAAKqnD,KAGPrnD,EAAIqa,KAAKqI,MAAQ4oC,EAEE,SAAf3mC,EACFwF,EAAY,QACY,WAAfxF,GACTwF,EAAY,SACZnqB,GAAMqnD,EAAS,IAEfl9B,EAAY,OACZnqB,EAAIqa,KAAKuI,OAGS,UAAbg1B,EACL1zB,GACFlkB,EAAIqa,KAAKuI,KAAOJ,EAEG,SAAfmC,EACFwF,EAAY,QACY,WAAfxF,GACTwF,EAAY,SACZnqB,GAAMqnD,EAAS,IAEfl9B,EAAY,OACZnqB,GAAKqnD,KAGPrnD,EAAIqa,KAAKuI,KAAO0oC,EAEG,SAAf3mC,EACFwF,EAAY,OACY,WAAfxF,GACTwF,EAAY,SACZnqB,GAAKqnD,EAAS,IAEdl9B,EAAY,QACZnqB,EAAIqa,KAAKqI,QAIbyH,EAAY,QAGP,CAACA,UAAAA,EAAWnqB,EAAAA,EACpB,kCAKD6rD,WACE,IAAIxxC,KAAKjb,QAAQ2d,MAAMmH,OAAvB,CAIA,IAAMjH,EAAQ5C,KAAK4C,MACb26B,EAAWv9B,KAAKjb,QAAQw4C,SAE9B,MAAiB,SAAbA,GAAoC,UAAbA,EAClB,CAACn1B,IAAK,EAAGG,KAAMvI,KAAKuI,KAAMD,OAAQ1F,EAAMwJ,OAAQ/D,MAAOrI,KAAKqI,OAClD,QAAbk1B,GAAmC,WAAbA,EACnB,CAACn1B,IAAKpI,KAAKoI,IAAKG,KAAM,EAAGD,OAAQtI,KAAKsI,OAAQD,MAAOzF,EAAM4G,YADlE,CAPD,CAUF,+BAKDioC,WACE,IAAOvsC,EAA6DlF,KAA7DkF,IAAef,EAA8CnE,KAAxDjb,QAAUof,gBAAkBoE,EAA4BvI,KAA5BuI,KAAMH,EAAsBpI,KAAtBoI,IAAKoB,EAAiBxJ,KAAjBwJ,MAAO4C,EAAUpM,KAAVoM,OACtDjI,IACFe,EAAImG,OACJnG,EAAI2K,UAAY1L,EAChBe,EAAIwL,SAASnI,EAAMH,EAAKoB,EAAO4C,GAC/BlH,EAAIuG,UAEP,qCAEDuqB,SAAqBr0C,GACnB,IAAMknB,EAAO7I,KAAKjb,QAAQ8jB,KAC1B,IAAK7I,KAAK4sC,eAAiB/jC,EAAKL,QAC9B,OAAO,EAET,IACMrkB,EADQ6b,KAAK0C,MACCgvC,WAAU7iD,SAAAA,GAAAA,OAAKA,EAAElN,QAAUA,CAAjBkN,IAC9B,OAAI1K,GAAS,EACE0kB,EAAKyL,WAAWtU,KAAKiM,WAAW9nB,IACjC2kB,UAEP,CACR,yBAKD6oC,SAASjjB,GACP,IAGIlrC,EAAGO,EAHD8kB,EAAO7I,KAAKjb,QAAQ8jB,KACpB3D,EAAMlF,KAAKkF,IACX5Y,EAAQ0T,KAAKypC,iBAAmBzpC,KAAKypC,eAAiBzpC,KAAKqvC,sBAAsB3gB,IAGjFkjB,EAAW,SAACj+C,EAAIC,EAAIkR,GACnBA,EAAM0E,OAAU1E,EAAM1E,QAG3B8E,EAAImG,OACJnG,EAAI4D,UAAYhE,EAAM0E,MACtBtE,EAAIqK,YAAczK,EAAM1E,MACxB8E,EAAI2sC,YAAY/sC,EAAMoc,YAAc,IACpChc,EAAI4sC,eAAiBhtC,EAAMqc,iBAE3Bjc,EAAIgI,YACJhI,EAAIoI,OAAO3Z,EAAGhO,EAAGgO,EAAG9N,GACpBqf,EAAIqI,OAAO3Z,EAAGjO,EAAGiO,EAAG/N,GACpBqf,EAAI0I,SACJ1I,EAAIuG,UACL,EAED,GAAI5C,EAAKL,QACP,IAAKhlB,EAAI,EAAGO,EAAOuI,EAAM3I,OAAQH,EAAIO,IAAQP,EAAG,CAC9C,IAAMwD,EAAOsF,EAAM9I,GAEfqlB,EAAKE,iBACP6oC,EACE,CAACjsD,EAAGqB,EAAK4oD,GAAI/pD,EAAGmB,EAAK6oD,IACrB,CAAClqD,EAAGqB,EAAK8oD,GAAIjqD,EAAGmB,EAAK+oD,IACrB/oD,GAIA6hB,EAAKG,WACP4oC,EACE,CAACjsD,EAAGqB,EAAKwoD,IAAK3pD,EAAGmB,EAAKyoD,KACtB,CAAC9pD,EAAGqB,EAAK0oD,IAAK7pD,EAAGmB,EAAK2oD,KACtB,CACEvvC,MAAOpZ,EAAKoiB,UACZI,MAAOxiB,EAAKkiB,UACZgY,WAAYl6B,EAAK4pD,eACjBzvB,iBAAkBn6B,EAAK6pD,sBAI9B,CAEJ,2BAKDkB,WACE,IAAOnvC,EAAuC5C,KAAvC4C,MAAOsC,EAAgClF,KAAhCkF,IAAd,EAA8ClF,KAA3Bjb,QAAUskB,EAA7B,EAA6BA,OAAQR,EAArC,EAAqCA,KAC/BqnC,EAAa7mC,EAAOiL,WAAWtU,KAAKiM,cACpCkkC,EAAY9mC,EAAOb,QAAU0nC,EAAW1mC,MAAQ,EACtD,GAAK2mC,EAAL,CAGA,IAEIP,EAAIE,EAAID,EAAIE,EAFViC,EAAgBnpC,EAAKyL,WAAWtU,KAAKiM,WAAW,IAAInD,UACpDwmC,EAActvC,KAAKkqC,aAGrBlqC,KAAKi0B,gBACP2b,EAAKjkC,GAAY/I,EAAO5C,KAAKuI,KAAM4nC,GAAaA,EAAY,EAC5DL,EAAKnkC,GAAY/I,EAAO5C,KAAKqI,MAAO2pC,GAAiBA,EAAgB,EACrEnC,EAAKE,EAAKT,IAEVO,EAAKlkC,GAAY/I,EAAO5C,KAAKoI,IAAK+nC,GAAaA,EAAY,EAC3DJ,EAAKpkC,GAAY/I,EAAO5C,KAAKsI,OAAQ0pC,GAAiBA,EAAgB,EACtEpC,EAAKE,EAAKR,GAEZpqC,EAAImG,OACJnG,EAAI4D,UAAYonC,EAAW1mC,MAC3BtE,EAAIqK,YAAc2gC,EAAW9vC,MAE7B8E,EAAIgI,YACJhI,EAAIoI,OAAOsiC,EAAIC,GACf3qC,EAAIqI,OAAOuiC,EAAIC,GACf7qC,EAAI0I,SAEJ1I,EAAIuG,SAvBH,CAwBF,2BAKDwmC,SAAWvjB,GAGT,GAFoB1uB,KAAKjb,QAAQ2d,MAEhB8F,QAAjB,CAIA,IAAMtD,EAAMlF,KAAKkF,IAEX6I,EAAO/N,KAAKwxC,oBACdzjC,GACFE,GAAS/I,EAAK6I,GAGhB,IACIvqB,EAAGO,EADDuI,EAAQ0T,KAAK0pC,cAAgB1pC,KAAK0pC,YAAc1pC,KAAK8wC,mBAAmBpiB,IAG9E,IAAKlrC,EAAI,EAAGO,EAAOuI,EAAM3I,OAAQH,EAAIO,IAAQP,EAAG,CAC9C,IAAMwD,EAAOsF,EAAM9I,GACb2qD,EAAWnnD,EAAK4d,KAItBkK,GAAW5J,EAHGle,EAAKonC,MAGI,EADfpnC,EAAKgqD,WACgB7C,EAAUnnD,EACxC,CAEG+mB,GACFI,GAAWjJ,EAtBZ,CAwBF,0BAKDgtC,WACE,IAAOhtC,EAA4ClF,KAA5CkF,IAAP,EAAmDlF,KAAvCjb,QAAUw4C,EAAtB,EAAsBA,SAAU9zB,EAAhC,EAAgCA,MAAOlmB,EAAvC,EAAuCA,QAEvC,GAAKkmB,EAAMjB,QAAX,CAIA,IAAM5D,EAAOiN,GAAOpI,EAAM7E,MACpBuD,EAAUyJ,GAAUnI,EAAMtB,SAC1Blb,EAAQwc,EAAMxc,MAChBwb,EAAS7D,EAAKG,WAAa,EAEd,WAAbw4B,GAAsC,WAAbA,GAAyBn7C,EAASm7C,IAC7D90B,GAAUN,EAAQG,OACd1mB,EAAQ6nB,EAAMC,QAChBjB,GAAU7D,EAAKG,YAAc0E,EAAMC,KAAK/lB,OAAS,KAGnD8kB,GAAUN,EAAQC,IAGpB,MAx7CJ,SAAmBpC,EAAOyC,EAAQ80B,EAAUtwC,GAC1C,IAGIwiB,EAAU0iC,EAAQC,EAHfhqC,EAAmCpC,EAAnCoC,IAAKG,EAA8BvC,EAA9BuC,KAAMD,EAAwBtC,EAAxBsC,OAAQD,EAAgBrC,EAAhBqC,MAAOzF,EAASoD,EAATpD,MAC1B8rB,EAAqB9rB,EAArB8rB,UAAWzoB,EAAUrD,EAAVqD,OACd4G,EAAW,EAETT,EAAS9D,EAASF,EAClBoB,EAAQnB,EAAQE,EAEtB,GAAIvC,EAAMiuB,eAAgB,CAGxB,GAFAke,EAASjlD,GAAeD,EAAOsb,EAAMF,GAEjCjmB,EAASm7C,GAAW,CACtB,IAAM+S,EAAiBvuD,OAAO2B,KAAK65C,GAAU,GACvC57C,EAAQ47C,EAAS+S,GACvB8B,EAASnsC,EAAOqqC,GAAgBtiD,iBAAiBrM,GAASyqB,EAAS3D,CACpE,MACC2pC,EADsB,WAAb7U,GACC7O,EAAUpmB,OAASomB,EAAUtmB,KAAO,EAAIgE,EAAS3D,EAElD4/B,GAAeriC,EAAOu3B,EAAU90B,GAE3CgH,EAAWpH,EAAQE,CACpB,KAAM,CACL,GAAInmB,EAASm7C,GAAW,CACtB,IAAM+S,EAAiBvuD,OAAO2B,KAAK65C,GAAU,GACvC57C,EAAQ47C,EAAS+S,GACvB6B,EAASlsC,EAAOqqC,GAAgBtiD,iBAAiBrM,GAAS6nB,EAAQf,CACnE,MACC0pC,EADsB,WAAb5U,GACC7O,EAAUnmB,KAAOmmB,EAAUrmB,OAAS,EAAImB,EAAQf,EAEjD4/B,GAAeriC,EAAOu3B,EAAU90B,GAE3C2pC,EAASllD,GAAeD,EAAOqb,EAAQF,GACvCyE,EAAwB,SAAb0wB,GAAuB91C,EAAUA,CAC7C,CACD,MAAO,CAAC0qD,OAAAA,EAAQC,OAAAA,EAAQ3iC,SAAAA,EAAU5C,SAAAA,EACnC,CAq5CgDwlC,CAAUryC,KAAMyI,EAAQ80B,EAAUtwC,GAAxEklD,EAAP,EAAOA,OAAQC,EAAf,EAAeA,OAAQ3iC,EAAvB,EAAuBA,SAAU5C,EAAjC,EAAiCA,SAEjCiC,GAAW5J,EAAKuE,EAAMC,KAAM,EAAG,EAAG9E,EAAM,CACtCxE,MAAOqJ,EAAMrJ,MACbqP,SAAAA,EACA5C,SAAAA,EACAiD,UAAWi5B,GAAW97C,EAAOswC,EAAUh6C,GACvCwsB,aAAc,SACdH,YAAa,CAACuiC,EAAQC,IAxBvB,CA0BF,qBAED7vB,SAAKmM,GACE1uB,KAAK4sC,eAIV5sC,KAAKyxC,iBACLzxC,KAAK2xC,SAASjjB,GACd1uB,KAAK+xC,aACL/xC,KAAKkyC,YACLlyC,KAAKiyC,WAAWvjB,GACjB,wBAMD6S,WAAU,WACFvyB,EAAOhP,KAAKjb,QACZutD,EAAKtjC,EAAKtM,OAASsM,EAAKtM,MAAM8+B,GAAK,EACnC+Q,EAAK7vD,EAAessB,EAAKnG,MAAQmG,EAAKnG,KAAK24B,GAAI,GAC/CgR,EAAK9vD,EAAessB,EAAK3F,QAAU2F,EAAK3F,OAAOm4B,EAAG,GAExD,OAAKxhC,KAAK4sC,cAAgB5sC,KAAKuiB,OAAS0mB,EAAMjnD,UAAUugC,KAUjD,CAAC,CACNif,EAAG+Q,EACHhwB,KAAM,SAACmM,GACL,EAAK+iB,iBACL,EAAKE,SAASjjB,GACd,EAAKwjB,WACN,GACA,CACD1Q,EAAGgR,EACHjwB,KAAM,WACJ,EAAKwvB,YACN,GACA,CACDvQ,EAAG8Q,EACH/vB,KAAM,SAACmM,GACL,EAAKujB,WAAWvjB,EACjB,IAxBM,CAAC,CACN8S,EAAG8Q,EACH/vB,KAAM,SAACmM,GACL,EAAKnM,KAAKmM,EACX,GAsBN,wCAOD5G,SAAwBhmC,GACtB,IAGI0B,EAAGO,EAHDumD,EAAQtqC,KAAK4C,MAAM66B,+BACnBgV,EAASzyC,KAAKpS,KAAO,SACrB6sB,EAAS,GAGf,IAAKj3B,EAAI,EAAGO,EAAOumD,EAAM3mD,OAAQH,EAAIO,IAAQP,EAAG,CAC9C,IAAM4J,EAAOk9C,EAAM9mD,GACf4J,EAAKqlD,KAAYzyC,KAAKve,IAAQK,GAAQsL,EAAKtL,OAASA,GACtD24B,EAAOv0B,KAAKkH,EAEf,CACD,OAAOqtB,CACR,wCAODk0B,SAAwBxqD,GAEtB,OAAO0tB,GADM7R,KAAKjb,QAAQ2d,MAAM4R,WAAWtU,KAAKiM,WAAW9nB,IACxCygB,KACpB,2BAKD8tC,WACE,IAAMC,EAAW3yC,KAAK2uC,wBAAwB,GAAG5pC,WACjD,OAAQ/E,KAAKi0B,eAAiBj0B,KAAKwJ,MAAQxJ,KAAKoM,QAAUumC,CAC3D,OAv/CkB1J,CAAczC,IC9JdoM,GAAAA,WACnB7uC,SAAAA,EAAYjiB,EAAM+hB,EAAOwC,IAAU,eACjCrG,KAAKle,KAAOA,EACZke,KAAK6D,MAAQA,EACb7D,KAAKqG,SAAWA,EAChBrG,KAAK1T,MAAQvK,OAAOyC,OAAO,KAC5B,yCAEDquD,SAAU/wD,GACR,OAAOC,OAAOC,UAAU8wD,cAAc5wD,KAAK8d,KAAKle,KAAKE,UAAWF,EAAKE,UACtE,yBAMD+wD,SAAS/rD,GACP,IACIgsD,EADExzC,EAAQzd,OAAOyxB,eAAexsB,IA0FxC,SAA2BwY,GACzB,MAAO,OAAQA,GAAS,aAAcA,CACvC,EAzFOyzC,CAAkBzzC,KAEpBwzC,EAAchzC,KAAK+yC,SAASvzC,IAG9B,IAAMlT,EAAQ0T,KAAK1T,MACb7K,EAAKuF,EAAKvF,GACVoiB,EAAQ7D,KAAK6D,MAAQ,IAAMpiB,EAEjC,IAAKA,EACH,MAAM,IAAIgzB,MAAM,2BAA6BztB,GAG/C,OAAIvF,KAAM6K,IAKVA,EAAM7K,GAAMuF,EAsChB,SAA0BA,EAAM6c,EAAOmvC,GAErC,IAAME,EAAehuD,EAAMnD,OAAOyC,OAAO,MAAO,CAC9CwuD,EAAc1rC,GAASrF,IAAI+wC,GAAe,CAAC,EAC3C1rC,GAASrF,IAAI4B,GACb7c,EAAKsgB,WAGPA,GAAS/a,IAAIsX,EAAOqvC,GAEhBlsD,EAAKmsD,eASX,SAAuBtvC,EAAOuvC,GAC5BrxD,OAAO2B,KAAK0vD,GAAQhnD,SAAQtD,SAAAA,GAC1B,IAAMuqD,EAAgBvqD,EAAS9C,MAAM,KAC/BstD,EAAaD,EAAc1wB,MAC3B4wB,EAAc,CAAC1vC,GAAOkuB,OAAOshB,GAAe3+B,KAAK,KACjD3uB,EAAQqtD,EAAOtqD,GAAU9C,MAAM,KAC/BygB,EAAa1gB,EAAM48B,MACnBnc,EAAczgB,EAAM2uB,KAAK,KAC/BpN,GAAShB,MAAMitC,EAAaD,EAAY9sC,EAAaC,EACtD,GACF,CAlBG+sC,CAAc3vC,EAAO7c,EAAKmsD,eAGxBnsD,EAAKyc,aACP6D,GAASlB,SAASvC,EAAO7c,EAAKyc,YAEjC,CAtDGgwC,CAAiBzsD,EAAM6c,EAAOmvC,GAC1BhzC,KAAKqG,UACPiB,GAASjB,SAASrf,EAAKvF,GAAIuF,EAAKwc,YANzBK,CAUV,oBAMD5B,SAAIxgB,GACF,OAAOue,KAAK1T,MAAM7K,EACnB,2BAKDiyD,SAAW1sD,GACT,IAAMsF,EAAQ0T,KAAK1T,MACb7K,EAAKuF,EAAKvF,GACVoiB,EAAQ7D,KAAK6D,MAEfpiB,KAAM6K,UACDA,EAAM7K,GAGXoiB,GAASpiB,KAAM6lB,GAASzD,YACnByD,GAASzD,GAAOpiB,GACnBue,KAAKqG,iBACA7C,GAAU/hB,GAGtB,OAzEkBmxD,OCGRe,GAAAA,WACX5vC,SAAAA,KAAc,eACZ/D,KAAK4zC,YAAc,IAAIhB,GAAc3pB,GAAmB,YAAY,GACpEjpB,KAAK0E,SAAW,IAAIkuC,GAAcpM,GAAS,YAC3CxmC,KAAK8F,QAAU,IAAI8sC,GAAc7wD,OAAQ,WACzCie,KAAKiG,OAAS,IAAI2sC,GAAc3J,GAAO,UAGvCjpC,KAAK6zC,iBAAmB,CAAC7zC,KAAK4zC,YAAa5zC,KAAKiG,OAAQjG,KAAK0E,SAC9D,mCAKDjY,WAAa,2BAANvJ,EAAM,yBAANA,EAAM,gBACX8c,KAAK8zC,MAAM,WAAY5wD,EACxB,uBAEDsgC,WAAgB,2BAANtgC,EAAM,yBAANA,EAAM,gBACd8c,KAAK8zC,MAAM,aAAc5wD,EAC1B,+BAKD6wD,WAAwB,2BAAN7wD,EAAM,yBAANA,EAAM,gBACtB8c,KAAK8zC,MAAM,WAAY5wD,EAAM8c,KAAK4zC,YACnC,4BAKDzpB,WAAqB,2BAANjnC,EAAM,yBAANA,EAAM,gBACnB8c,KAAK8zC,MAAM,WAAY5wD,EAAM8c,KAAK0E,SACnC,2BAKDsvC,WAAoB,2BAAN9wD,EAAM,yBAANA,EAAM,gBAClB8c,KAAK8zC,MAAM,WAAY5wD,EAAM8c,KAAK8F,QACnC,0BAKDmuC,WAAmB,2BAAN/wD,EAAM,yBAANA,EAAM,gBACjB8c,KAAK8zC,MAAM,WAAY5wD,EAAM8c,KAAKiG,OACnC,8BAMDiuC,SAAczyD,GACZ,OAAOue,KAAKm0C,KAAK1yD,EAAIue,KAAK4zC,YAAa,aACxC,2BAMDrX,SAAW96C,GACT,OAAOue,KAAKm0C,KAAK1yD,EAAIue,KAAK0E,SAAU,UACrC,0BAMD0vC,SAAU3yD,GACR,OAAOue,KAAKm0C,KAAK1yD,EAAIue,KAAK8F,QAAS,SACpC,yBAMDuuC,SAAS5yD,GACP,OAAOue,KAAKm0C,KAAK1yD,EAAIue,KAAKiG,OAAQ,QACnC,kCAKDquC,WAA2B,2BAANpxD,EAAM,yBAANA,EAAM,gBACzB8c,KAAK8zC,MAAM,aAAc5wD,EAAM8c,KAAK4zC,YACrC,+BAKDW,WAAwB,2BAANrxD,EAAM,yBAANA,EAAM,gBACtB8c,KAAK8zC,MAAM,aAAc5wD,EAAM8c,KAAK0E,SACrC,8BAKD8vC,WAAuB,2BAANtxD,EAAM,yBAANA,EAAM,gBACrB8c,KAAK8zC,MAAM,aAAc5wD,EAAM8c,KAAK8F,QACrC,6BAKD2uC,WAAsB,2BAANvxD,EAAM,yBAANA,EAAM,gBACpB8c,KAAK8zC,MAAM,aAAc5wD,EAAM8c,KAAKiG,OACrC,sBAKD6tC,SAAMzuB,EAAQniC,EAAMwxD,GAAe,YACjC,OAAIxxD,GAAMkJ,SAAQuoD,SAAAA,GAChB,IAAMC,EAAMF,GAAiB,EAAKG,oBAAoBF,GAClDD,GAAiBE,EAAI/B,UAAU8B,IAASC,IAAQ,EAAK9uC,SAAW6uC,EAAIlzD,GACtE,EAAKqzD,MAAMzvB,EAAQuvB,EAAKD,GAMxBtxD,EAAKsxD,GAAK3tD,SAAAA,GAOR,IAAM+tD,EAAUL,GAAiB,EAAKG,oBAAoB7tD,GAC1D,EAAK8tD,MAAMzvB,EAAQ0vB,EAAS/tD,EAC7B,GAEJ,GACF,sBAKD8tD,SAAMzvB,EAAQiX,EAAU0Y,GACtB,IAAMC,EAAc3uD,EAAY++B,GAChCnjC,EAAK8yD,EAAU,SAAWC,GAAc,GAAID,GAC5C1Y,EAASjX,GAAQ2vB,GACjB9yD,EAAK8yD,EAAU,QAAUC,GAAc,GAAID,EAC5C,oCAKDH,SAAoB/yD,GAClB,IAAK,IAAI0B,EAAI,EAAGA,EAAIwc,KAAK6zC,iBAAiBlwD,OAAQH,IAAK,CACrD,IAAMoxD,EAAM50C,KAAK6zC,iBAAiBrwD,GAClC,GAAIoxD,EAAI/B,UAAU/wD,GAChB,OAAO8yD,CAEV,CAED,OAAO50C,KAAK8F,OACb,qBAKDquC,SAAK1yD,EAAIizD,EAAe5yD,GACtB,IAAMkF,EAAO0tD,EAAczyC,IAAIxgB,GAC/B,QAAaoR,IAAT7L,EACF,MAAM,IAAIytB,MAAM,IAAMhzB,EAAK,yBAA2BK,EAAO,KAE/D,OAAOkF,CACR,OA1KU2sD,GA+Kb,GAA+B,IAAIA,GCtKduB,GAAAA,WACnBnxC,SAAAA,KAAc,eACZ/D,KAAKm1C,MAAQ,EACd,sCAYDC,SAAOxyC,EAAOyyC,EAAMnyD,EAAM+xB,GACX,eAATogC,IACFr1C,KAAKm1C,MAAQn1C,KAAKs1C,mBAAmB1yC,GAAO,GAC5C5C,KAAK0hB,QAAQ1hB,KAAKm1C,MAAOvyC,EAAO,YAGlC,IAAMa,EAAcwR,EAASjV,KAAKgE,aAAapB,GAAOqS,OAAOA,GAAUjV,KAAKgE,aAAapB,GACnF6X,EAASza,KAAK0hB,QAAQje,EAAab,EAAOyyC,EAAMnyD,GAMtD,MAJa,iBAATmyD,IACFr1C,KAAK0hB,QAAQje,EAAab,EAAO,QACjC5C,KAAK0hB,QAAQ1hB,KAAKm1C,MAAOvyC,EAAO,cAE3B6X,CACR,wBAKDiH,SAAQje,EAAab,EAAOyyC,EAAMnyD,GAChCA,EAAOA,GAAQ,CAAC,EADsB,gBAEbugB,GAFa,IAEtC,IAAK,EAAL,qBAAsC,KAA3B8xC,EAA2B,QAC9BC,EAASD,EAAWC,OAG1B,IAA6C,IAAzCC,EAFWD,EAAOH,GACP,CAACzyC,EAAO1f,EAAMqyD,EAAWxwD,SACPywD,IAAqBtyD,EAAKwyD,WACzD,OAAO,CAEV,CATqC,+BAWtC,OAAO,CACR,2BAEDC,WAMOj0D,EAAcse,KAAK4xB,UACtB5xB,KAAK41C,UAAY51C,KAAK4xB,OACtB5xB,KAAK4xB,YAAS/+B,EAEjB,6BAMDmR,SAAapB,GACX,GAAI5C,KAAK4xB,OACP,OAAO5xB,KAAK4xB,OAGd,IAAMnuB,EAAczD,KAAK4xB,OAAS5xB,KAAKs1C,mBAAmB1yC,GAI1D,OAFA5C,KAAK61C,oBAAoBjzC,GAElBa,CACR,mCAED6xC,SAAmB1yC,EAAOyjB,GACxB,IAAMd,EAAS3iB,GAASA,EAAM2iB,OACxBxgC,EAAUrC,EAAe6iC,EAAOxgC,SAAWwgC,EAAOxgC,QAAQ+gB,QAAS,CAAC,GACpEA,EAqBV,SAAoByf,GAIlB,IAHA,IAAMuwB,EAAW,CAAC,EACZhwC,EAAU,GACVpiB,EAAO3B,OAAO2B,KAAK44C,GAASx2B,QAAQxZ,OACjC9I,EAAI,EAAGA,EAAIE,EAAKC,OAAQH,IAC/BsiB,EAAQ5f,KAAKo2C,GAAS8X,UAAU1wD,EAAKF,KAIvC,IADA,IAAMwjB,EAAQue,EAAOzf,SAAW,GACvBtiB,EAAI,EAAGA,EAAIwjB,EAAMrjB,OAAQH,IAAK,CACrC,IAAMgyD,EAASxuC,EAAMxjB,IAEY,IAA7BsiB,EAAQjhB,QAAQ2wD,KAClB1vC,EAAQ5f,KAAKsvD,GACbM,EAASN,EAAO/zD,KAAM,EAEzB,CAED,MAAO,CAACqkB,QAAAA,EAASgwC,SAAAA,EAClB,CAxCmBC,CAAWxwB,GAE3B,OAAmB,IAAZxgC,GAAsBshC,EAkDjC,SAA2BzjB,EAA3B,EAAuD7d,EAASshC,GAAK,MAAlCvgB,EAAkC,EAAlCA,QAASgwC,EAAyB,EAAzBA,SACpCr7B,EAAS,GACTlW,EAAU3B,EAAMqJ,aAF6C,UAI9CnG,GAJ8C,IAInE,IAAK,EAAL,qBAA8B,KAAnB0vC,EAAmB,QACtB/zD,EAAK+zD,EAAO/zD,GACZutB,EAAOgnC,GAAQjxD,EAAQtD,GAAK4kC,GACrB,OAATrX,GAGJyL,EAAOv0B,KAAK,CACVsvD,OAAAA,EACAzwD,QAASkxD,GAAWrzC,EAAM2iB,OAAQ,CAACiwB,OAAAA,EAAQxuC,MAAO8uC,EAASr0D,IAAMutB,EAAMzK,IAE1E,CAdkE,+BAgBnE,OAAOkW,CACR,CAnE2Cy7B,CAAkBtzC,EAAOkD,EAAS/gB,EAASshC,GAAhD,EACpC,oCAMDwvB,SAAoBjzC,GAClB,IAAMuzC,EAAsBn2C,KAAK41C,WAAa,GACxCnyC,EAAczD,KAAK4xB,OACnBiL,EAAO,SAACh2C,EAAGC,GAAJ,OAAUD,EAAEouB,QAAOtvB,SAAAA,GAAAA,OAAMmB,EAAEsvD,MAAKvwD,SAAAA,GAAAA,OAAKF,EAAE6vD,OAAO/zD,KAAOoE,EAAE2vD,OAAO/zD,EAA9BoE,GAAbF,GAAnB,EACbqa,KAAK0hB,QAAQmb,EAAKsZ,EAAqB1yC,GAAcb,EAAO,QAC5D5C,KAAK0hB,QAAQmb,EAAKp5B,EAAa0yC,GAAsBvzC,EAAO,QAC7D,OA9FkBsyC,GAyHrB,SAASc,GAAQjxD,EAASshC,GACxB,OAAKA,IAAmB,IAAZthC,GAGI,IAAZA,EACK,CAAC,EAEHA,EALE,IAMV,CAqBD,SAASkxD,GAAW1wB,EAApB,EAA6CvW,EAAMzK,GAAS,IAA/BixC,EAA+B,EAA/BA,OAAQxuC,EAAuB,EAAvBA,MAC7BtjB,EAAO6hC,EAAO8wB,gBAAgBb,GAC9B/iC,EAAS8S,EAAOiH,gBAAgBxd,EAAMtrB,GAK5C,OAJIsjB,GAASwuC,EAAOluC,UAElBmL,EAAOvsB,KAAKsvD,EAAOluC,UAEdie,EAAOkH,eAAeha,EAAQlO,EAAS,CAAC,IAAK,CAElDgR,YAAY,EACZC,WAAW,EACXH,SAAS,GAEZ,CClLM,SAASihC,GAAax0D,EAAMiD,GACjC,IAAMwxD,EAAkBjvC,GAASjD,SAASviB,IAAS,CAAC,EAEpD,QADwBiD,EAAQsf,UAAY,CAAC,GAAGviB,IAAS,CAAC,GACpCujB,WAAatgB,EAAQsgB,WAAakxC,EAAgBlxC,WAAa,GACtF,CAyBM,SAASmxC,GAAc/0D,EAAIg1D,GAChC,GAAW,MAAPh1D,GAAqB,MAAPA,GAAqB,MAAPA,EAC9B,OAAOA,EAXX,IAA0B87C,EAkBxB,GAJA97C,EAAKg1D,EAAa7oD,OAbD,SADO2vC,EAeFkZ,EAAalZ,WAdI,WAAbA,EACjB,IAEQ,SAAbA,GAAoC,UAAbA,EAClB,SADT,IAYK97C,EAAGkC,OAAS,GAAK6yD,GAAc/0D,EAAG,GAAG0d,cAAes3C,GAGvD,OAAOh1D,EAGT,MAAM,IAAIgzB,MAAJ,oCAAuClO,KAAvC,uDACP,CA8CD,SAASmwC,GAAYnxB,GACnB,IAAMxgC,EAAUwgC,EAAOxgC,UAAYwgC,EAAOxgC,QAAU,CAAC,GAErDA,EAAQ+gB,QAAUpjB,EAAeqC,EAAQ+gB,QAAS,CAAC,GACnD/gB,EAAQkhB,OAhDV,SAA0Bsf,EAAQxgC,GAChC,IAAM4xD,EAAgBnzC,GAAU+hB,EAAOzjC,OAAS,CAACmkB,OAAQ,CAAC,GACpD2wC,EAAe7xD,EAAQkhB,QAAU,CAAC,EAClC4wC,EAAiBP,GAAa/wB,EAAOzjC,KAAMiD,GAC3CkhB,EAASlkB,OAAOyC,OAAO,MAqC7B,OAlCAzC,OAAO2B,KAAKkzD,GAAcxqD,SAAQ3K,SAAAA,GAChC,IAAMq1D,EAAYF,EAAan1D,GAC/B,IAAKW,EAAS00D,GACZ,OAAO/kC,QAAQglC,MAARhlC,0CAAAA,OAAwDtwB,IAEjE,GAAIq1D,EAAU5iC,OACZ,OAAOnC,QAAQC,KAARD,kDAAAA,OAA+DtwB,IAExE,IAAMmM,EAAO4oD,GAAc/0D,EAAIq1D,GACzBE,EA7CV,SAAmCppD,EAAMyX,GACvC,OAAOzX,IAASyX,EAAY,UAAY,SACzC,CA2CqB4xC,CAA0BrpD,EAAMipD,GAC5CK,EAAsBP,EAAc1wC,QAAU,CAAC,EACrDA,EAAOxkB,GAAM6D,EAAQvD,OAAOyC,OAAO,MAAO,CAAC,CAACoJ,KAAAA,GAAOkpD,EAAWI,EAAoBtpD,GAAOspD,EAAoBF,IAC9G,IAGDzxB,EAAO5a,KAAKtG,SAASjY,SAAQk+B,SAAAA,GAC3B,IAAMxoC,EAAOwoC,EAAQxoC,MAAQyjC,EAAOzjC,KAC9BujB,EAAYilB,EAAQjlB,WAAaixC,GAAax0D,EAAMiD,GAEpDmyD,GADkB1zC,GAAU1hB,IAAS,CAAC,GACAmkB,QAAU,CAAC,EACvDlkB,OAAO2B,KAAKwzD,GAAqB9qD,SAAQ+qD,SAAAA,GACvC,IAAMvpD,EAnEZ,SAAmCnM,EAAI4jB,GACrC,IAAIzX,EAAOnM,EAMX,MALW,YAAPA,EACFmM,EAAOyX,EACS,YAAP5jB,IACTmM,EAAqB,MAAdyX,EAAoB,IAAM,KAE5BzX,CACR,CA2DkBwpD,CAA0BD,EAAW9xC,GAC5C5jB,EAAK6oC,EAAQ18B,EAAO,WAAaA,EACvCqY,EAAOxkB,GAAMwkB,EAAOxkB,IAAOM,OAAOyC,OAAO,MACzCc,EAAQ2gB,EAAOxkB,GAAK,CAAC,CAACmM,KAAAA,GAAOgpD,EAAan1D,GAAKy1D,EAAoBC,IACpE,GACF,IAGDp1D,OAAO2B,KAAKuiB,GAAQ7Z,SAAQxH,SAAAA,GAC1B,IAAMohB,EAAQC,EAAOrhB,GACrBU,EAAQ0gB,EAAO,CAACsB,GAASrB,OAAOD,EAAMlkB,MAAOwlB,GAAStB,OACvD,IAEMC,CACR,CAMkBoxC,CAAiB9xB,EAAQxgC,EAC3C,CAED,SAASuyD,GAAS3sC,GAIhB,OAHAA,EAAOA,GAAQ,CAAC,GACXtG,SAAWsG,EAAKtG,UAAY,GACjCsG,EAAKmiB,OAASniB,EAAKmiB,QAAU,GACtBniB,CACR,CAWD,IAAM4sC,GAAW,IAAI91C,IACf+1C,GAAa,IAAIhrD,IAEvB,SAASirD,GAAW51C,EAAU61C,GAC5B,IAAIh0D,EAAO6zD,GAASt1C,IAAIJ,GAMxB,OALKne,IACHA,EAAOg0D,IACPH,GAAShrD,IAAIsV,EAAUne,GACvB8zD,GAAW/qD,IAAI/I,IAEVA,CACR,CAED,IAAMi0D,GAAa,SAACprD,EAAKnG,EAAKxB,GAC5B,IAAMoqB,EAAO3oB,EAAiBD,EAAKxB,QACtBiO,IAATmc,GACFziB,EAAIE,IAAIuiB,EAEX,EAEoB4oC,GAAAA,WACnB7zC,SAAAA,EAAYwhB,IAAQ,eAClBvlB,KAAK63C,QA/BT,SAAoBtyB,GAMlB,OALAA,EAASA,GAAU,CAAC,GACb5a,KAAO2sC,GAAS/xB,EAAO5a,MAE9B+rC,GAAYnxB,GAELA,CACR,CAwBkBuyB,CAAWvyB,GAC1BvlB,KAAK+3C,YAAc,IAAIt2C,IACvBzB,KAAKg4C,eAAiB,IAAIv2C,GAC3B,sCAED,WACE,OAAOzB,KAAK63C,QAAQrzC,QACrB,mBAED,WACE,OAAOxE,KAAK63C,QAAQ/1D,IACrB,MAED,SAASA,GACPke,KAAK63C,QAAQ/1D,KAAOA,CACrB,mBAED,WACE,OAAOke,KAAK63C,QAAQltC,IACrB,MAED,SAASA,GACP3K,KAAK63C,QAAQltC,KAAO2sC,GAAS3sC,EAC9B,sBAED,WACE,OAAO3K,KAAK63C,QAAQ9yD,OACrB,MAED,SAAYA,GACVib,KAAK63C,QAAQ9yD,QAAUA,CACxB,sBAED,WACE,OAAOib,KAAK63C,QAAQ/xC,OACrB,uBAED+e,WACE,IAAMU,EAASvlB,KAAK63C,QACpB73C,KAAKi4C,aACLvB,GAAYnxB,EACb,2BAED0yB,WACEj4C,KAAK+3C,YAAYG,QACjBl4C,KAAKg4C,eAAeE,OACrB,iCAQD3rB,SAAiB4rB,GACf,OAAOV,GAAWU,GAChB,iBAAM,CAAC,CAAC,YAAD,OACOA,GACZ,IAFF,GAIH,0CASD1oB,SAA0B0oB,EAAa3oB,GACrC,OAAOioB,GAAW,GAAD,OAAIU,EAAJ,uBAA8B3oB,IAC7C,iBAAM,CACJ,CAAC,YAAD,OACc2oB,EADd,wBACyC3oB,GADzC,sBAEiBA,IAGjB,CAAC,YAAD,OACc2oB,GACZ,IARJ,GAWH,wCAUD/oB,SAAwB+oB,EAAajpB,GACnC,OAAOuoB,GAAW,GAAD,OAAIU,EAAJ,YAAmBjpB,IAClC,iBAAM,CAAC,CAAC,YAAD,OACOipB,EADP,qBAC+BjpB,GAD/B,mBAEOipB,GAFP,mBAGOjpB,GACZ,IAJF,GAMH,gCAODmnB,SAAgBb,GACd,IAAM/zD,EAAK+zD,EAAO/zD,GACZK,EAAOke,KAAKle,KAClB,OAAO21D,GAAW,GAAD,OAAI31D,EAAJ,mBAAmBL,IAClC,iBAAM,CAAC,CAAC,WAAF,OACOA,IADP,eAED+zD,EAAO4C,wBAA0B,KAFtC,GAIH,8BAKDC,SAAcC,EAAWC,GACvB,IAAMR,EAAc/3C,KAAK+3C,YACrB5sC,EAAQ4sC,EAAY91C,IAAIq2C,GAK5B,OAJKntC,IAASotC,IACZptC,EAAQ,IAAI1J,IACZs2C,EAAYxrD,IAAI+rD,EAAWntC,IAEtBA,CACR,gCAQDqhB,SAAgB8rB,EAAWE,EAAUD,GACnC,IAAOxzD,EAAiBib,KAAjBjb,QAASjD,EAAQke,KAARle,KACVqpB,EAAQnL,KAAKq4C,cAAcC,EAAWC,GACtCxvB,EAAS5d,EAAMlJ,IAAIu2C,GACzB,GAAIzvB,EACF,OAAOA,EAGT,IAAMtW,EAAS,IAAIjmB,IAEnBgsD,EAASpsD,SAAQ1I,SAAAA,GACX40D,IACF7lC,EAAOhmB,IAAI6rD,GACX50D,EAAK0I,SAAQxH,SAAAA,GAAAA,OAAO+yD,GAAWllC,EAAQ6lC,EAAW1zD,EAArCA,KAEflB,EAAK0I,SAAQxH,SAAAA,GAAAA,OAAO+yD,GAAWllC,EAAQ1tB,EAASH,EAAnCA,IACblB,EAAK0I,SAAQxH,SAAAA,GAAAA,OAAO+yD,GAAWllC,EAAQjP,GAAU1hB,IAAS,CAAC,EAAG8C,EAAjDA,IACblB,EAAK0I,SAAQxH,SAAAA,GAAAA,OAAO+yD,GAAWllC,EAAQnL,GAAU1iB,EAApCA,IACblB,EAAK0I,SAAQxH,SAAAA,GAAAA,OAAO+yD,GAAWllC,EAAQhP,GAAa7e,EAAvCA,GACd,IAED,IAAMiE,EAAQhH,MAAM6K,KAAK+lB,GAOzB,OANqB,IAAjB5pB,EAAMlF,QACRkF,EAAM3C,KAAKnE,OAAOyC,OAAO,OAEvBgzD,GAAWvwD,IAAIuxD,IACjBrtC,EAAM5e,IAAIisD,EAAU3vD,GAEfA,CACR,kCAMD4vD,WACE,IAAO1zD,EAAiBib,KAAjBjb,QAASjD,EAAQke,KAARle,KAEhB,MAAO,CACLiD,EACAye,GAAU1hB,IAAS,CAAC,EACpBwlB,GAASjD,SAASviB,IAAS,CAAC,EAC5B,CAACA,KAAAA,GACDwlB,GACA7D,GAEH,oCASD4rB,SAAoB5c,EAAQ1e,EAAOwQ,GAA0B,IAAjBmO,EAAiB,uDAAN,CAAC,IAChD+H,EAAS,CAACuL,SAAS,GACzB,EAAgC0yB,GAAY14C,KAAKg4C,eAAgBvlC,EAAQC,GAAlEwC,EAAP,EAAOA,SAAUyjC,EAAjB,EAAiBA,YACb5zD,EAAUmwB,EACd,GAAI0jC,GAAY1jC,EAAUnhB,GAAQ,CAChC0mB,EAAOuL,SAAU,EACjBzhB,EAAU5d,EAAW4d,GAAWA,IAAYA,EAE5C,IAAMs0C,EAAc74C,KAAKysB,eAAeha,EAAQlO,EAASo0C,GACzD5zD,EAAU8uB,GAAeqB,EAAU3Q,EAASs0C,EAC7C,CAV0D,gBAYxC9kD,GAZwC,IAY3D,IAAK,EAAL,qBAA0B,KAAf0d,EAAe,QACxBgJ,EAAOhJ,GAAQ1sB,EAAQ0sB,EACxB,CAd0D,+BAe3D,OAAOgJ,CACR,+BAQDgS,SAAeha,EAAQlO,GAA8C,IAArCmO,EAAqC,uDAA1B,CAAC,IAAKsB,EAAoB,uCACnE,EAAmB0kC,GAAY14C,KAAKg4C,eAAgBvlC,EAAQC,GAArDwC,EAAP,EAAOA,SACP,OAAO9yB,EAASmiB,GACZsP,GAAeqB,EAAU3Q,OAAS1R,EAAWmhB,GAC7CkB,CACL,OA9NkB0iC,GAiOrB,SAASc,GAAYI,EAAermC,EAAQC,GAC1C,IAAIvH,EAAQ2tC,EAAc72C,IAAIwQ,GACzBtH,IACHA,EAAQ,IAAI1J,IACZq3C,EAAcvsD,IAAIkmB,EAAQtH,IAE5B,IAAMtJ,EAAW6Q,EAASgC,OACtBqU,EAAS5d,EAAMlJ,IAAIJ,GAClBknB,IAEHA,EAAS,CACP7T,SAFe1C,GAAgBC,EAAQC,GAGvCimC,YAAajmC,EAASuC,QAAOzrB,SAAAA,GAAAA,OAAMA,EAAE2V,cAAcoE,SAAS,QAA/B/Z,KAE/B2hB,EAAM5e,IAAIsV,EAAUknB,IAEtB,OAAOA,CACR,CAED,IAAMgwB,GAAcp3D,SAAAA,GAAAA,OAASS,EAAST,IACjCI,OAAO6jC,oBAAoBjkC,GAAOuhC,QAAO,SAACC,EAAKv+B,GAAN,OAAcu+B,GAAOx8B,EAAWhF,EAAMiD,GAAtC,IAA6C,EADvEjD,EAGpB,SAASi3D,GAAY9kC,EAAO/f,GAC1B,IADiC,EACjC,EAAoCiQ,GAAa8P,GAA1CU,EAAP,EAAOA,aAAcO,EAArB,EAAqBA,YADY,UAGdhhB,GAHc,IAGjC,IAAK,EAAL,qBAA0B,KAAf0d,EAAe,QAClB8D,EAAaf,EAAa/C,GAC1B+D,EAAYT,EAAYtD,GACxB9vB,GAAS6zB,GAAaD,IAAezB,EAAMrC,GACjD,GAAK8D,IAAe5uB,EAAWhF,IAAUo3D,GAAYp3D,KAC/C6zB,GAAa5zB,EAAQD,GACzB,OAAO,CAEV,CAXgC,+BAYjC,OAAO,CACR,KCxXKq3D,GAAkB,CAAC,MAAO,SAAU,OAAQ,QAAS,aAC3D,SAASC,GAAqB1b,EAAU3vC,GACtC,MAAoB,QAAb2vC,GAAmC,WAAbA,IAAiE,IAAvCyb,GAAgBn0D,QAAQ04C,IAA6B,MAAT3vC,CACpG,CAED,SAASsrD,GAAcC,EAAIC,GACzB,OAAO,SAASvyD,EAAGC,GACjB,OAAOD,EAAEsyD,KAAQryD,EAAEqyD,GACftyD,EAAEuyD,GAAMtyD,EAAEsyD,GACVvyD,EAAEsyD,GAAMryD,EAAEqyD,EACf,CACF,CAED,SAASE,GAAqB90C,GAC5B,IAAM3B,EAAQ2B,EAAQ3B,MAChB8iB,EAAmB9iB,EAAM7d,QAAQmf,UAEvCtB,EAAM0pC,cAAc,eACpBmJ,EAAa/vB,GAAoBA,EAAiB4zB,WAAY,CAAC/0C,GAAU3B,EAC1E,CAED,SAAS22C,GAAoBh1C,GAC3B,IAAM3B,EAAQ2B,EAAQ3B,MAChB8iB,EAAmB9iB,EAAM7d,QAAQmf,UACvCuxC,EAAa/vB,GAAoBA,EAAiB8zB,WAAY,CAACj1C,GAAU3B,EAC1E,CAMD,SAAS62C,GAAUzyD,GAYjB,OAXIuyB,MAAqC,kBAATvyB,EAC9BA,EAAOwyB,SAASkgC,eAAe1yD,GACtBA,GAAQA,EAAKrD,SAEtBqD,EAAOA,EAAK,IAGVA,GAAQA,EAAKglB,SAEfhlB,EAAOA,EAAKglB,QAEPhlB,CACR,CAED,IAAM2yD,GAAY,CAAC,EACbC,GAAW,SAACh1D,GAChB,IAAMonB,EAASytC,GAAU70D,GACzB,OAAO7C,OAAOwgB,OAAOo3C,IAAW1kC,QAAO,SAAC/iB,GAAD,OAAOA,EAAE8Z,SAAWA,CAApB,IAA4B2W,KACpE,EAED,SAASk3B,GAAgBzzD,EAAKqE,EAAOqmC,GAEnC,IADA,IACA,MADa/uC,OAAO2B,KAAK0C,GACzB,eAAwB,CAAnB,IAAMxB,EAAG,KACNk1D,GAAUl1D,EAChB,GAAIk1D,GAAUrvD,EAAO,CACnB,IAAM9I,EAAQyE,EAAIxB,UACXwB,EAAIxB,IACPksC,EAAO,GAAKgpB,EAASrvD,KACvBrE,EAAI0zD,EAAShpB,GAAQnvC,EAExB,CACF,CACF,KA+BKo4D,GAAAA,WAoBJh2C,SAAAA,EAAY/c,EAAMgzD,GAAY,2BAC5B,IAAMz0B,EAASvlB,KAAKulB,OAAS,IAAIqyB,GAAOoC,GAClCC,EAAgBR,GAAUzyD,GAC1BkzD,EAAgBN,GAASK,GAC/B,GAAIC,EACF,MAAM,IAAIzlC,MACR,4CAA+CylC,EAAcz4D,GAA7D,kDACgDy4D,EAAcluC,OAAOvqB,GAAK,oBAI9E,IAAMsD,EAAUwgC,EAAOkH,eAAelH,EAAOkzB,oBAAqBz4C,KAAKiM,cAEvEjM,KAAKwE,SAAW,IAAK+gB,EAAO/gB,UC/IzB,SAAyBwH,GAC9B,OAAKuN,MAAiD,qBAApB4gC,iBAAmCnuC,aAAkBmuC,gBAC9EpX,GAEF2C,EACR,CD0I2C0U,CAAgBH,IACxDj6C,KAAKwE,SAASs+B,aAAavd,GAE3B,IAAMhhB,EAAUvE,KAAKwE,SAASm+B,eAAesX,EAAel1D,EAAQg3B,aAC9D/P,EAASzH,GAAWA,EAAQyH,OAC5BI,EAASJ,GAAUA,EAAOI,OAC1B5C,EAAQwC,GAAUA,EAAOxC,MAE/BxJ,KAAKve,GAAKD,IACVwe,KAAKkF,IAAMX,EACXvE,KAAKgM,OAASA,EACdhM,KAAKwJ,MAAQA,EACbxJ,KAAKoM,OAASA,EACdpM,KAAKq6C,SAAWt1D,EAIhBib,KAAKs6C,aAAet6C,KAAK+b,YACzB/b,KAAKuhC,QAAU,GACfvhC,KAAKu6C,UAAY,GACjBv6C,KAAKkoB,aAAUr1B,EACfmN,KAAKihC,MAAQ,GACbjhC,KAAK6L,6BAA0BhZ,EAC/BmN,KAAK0uB,eAAY77B,EACjBmN,KAAKwiB,QAAU,GACfxiB,KAAKw6C,gBAAa3nD,EAClBmN,KAAKy6C,WAAa,CAAC,EAEnBz6C,KAAK06C,0BAAuB7nD,EAC5BmN,KAAK26C,gBAAkB,GACvB36C,KAAKiG,OAAS,CAAC,EACfjG,KAAK46C,SAAW,IAAI1F,GACpBl1C,KAAKomC,SAAW,CAAC,EACjBpmC,KAAK66C,eAAiB,CAAC,EACvB76C,KAAK86C,UAAW,EAChB96C,KAAK6vB,yBAAsBh9B,EAC3BmN,KAAK4pB,cAAW/2B,EAChBmN,KAAK+6C,U3C5IF,SAA4C93D,EAA8BskB,GAC/E,IAAIyzC,EACJ,OAAO,WAAyB,2BAAb93D,EAAa,yBAAbA,EAAa,gBAO9B,OANIqkB,GACF0zC,aAAaD,GACbA,EAAUE,WAAWj4D,EAAIskB,EAAOrkB,IAEhCD,EAAGG,MAAwB4c,KAAM9c,GAE5BqkB,CACR,CACF,C2CiIoB4zC,EAAS51C,SAAAA,GAAAA,OAAQ,EAAKsf,OAAOtf,EAApBA,GAA2BxgB,EAAQq2D,aAAe,GAC5Ep7C,KAAKkxB,aAAe,GAGpByoB,GAAU35C,KAAKve,IAAMue,KAEhBuE,GAAYyH,GASjBwa,GAASxD,OAAOhjB,KAAM,WAAYq5C,IAClC7yB,GAASxD,OAAOhjB,KAAM,WAAYu5C,IAElCv5C,KAAKq7C,cACDr7C,KAAK86C,UACP96C,KAAK6kB,UATL9S,QAAQglC,MAAM,oEAWjB,yCAED,WACE,MAAmF/2C,KAA5Ejb,QAAUg3B,EAAjB,EAAiBA,YAAarW,EAA9B,EAA8BA,oBAAsB8D,EAA+BxJ,KAA/BwJ,MAAO4C,EAAwBpM,KAAxBoM,OAAQkuC,EAAgBt6C,KAAhBs6C,aACnE,OAAK54D,EAAcq6B,GAKfrW,GAAuB40C,EAElBA,EAIFluC,EAAS5C,EAAQ4C,EAAS,KATxB2P,CAUV,mBAED,WACE,OAAO/b,KAAKulB,OAAO5a,IACpB,MAED,SAASA,GACP3K,KAAKulB,OAAO5a,KAAOA,CACpB,sBAED,WACE,OAAO3K,KAAKq6C,QACb,MAED,SAAYt1D,GACVib,KAAKulB,OAAOxgC,QAAUA,CACvB,uBAED,WACE,OAAOu3C,EACR,4BAKD+e,WAeE,OAbAr7C,KAAKssC,cAAc,cAEftsC,KAAKjb,QAAQghB,WACf/F,KAAK6H,SAEL6U,GAAY1c,KAAMA,KAAKjb,QAAQuf,kBAGjCtE,KAAKs7C,aAGLt7C,KAAKssC,cAAc,aAEZtsC,IACR,sBAEDk4C,WAEE,OADAnsC,GAAY/L,KAAKgM,OAAQhM,KAAKkF,KACvBlF,IACR,qBAEDsjB,WAEE,OADAkD,GAASlD,KAAKtjB,MACPA,IACR,uBAOD6H,SAAO2B,EAAO4C,GACPoa,GAASlE,QAAQtiB,MAGpBA,KAAKu7C,kBAAoB,CAAC/xC,MAAAA,EAAO4C,OAAAA,GAFjCpM,KAAKw7C,QAAQhyC,EAAO4C,EAIvB,wBAEDovC,SAAQhyC,EAAO4C,GACb,IAAMrnB,EAAUib,KAAKjb,QACfinB,EAAShM,KAAKgM,OACd+P,EAAch3B,EAAQ2gB,qBAAuB1F,KAAK+b,YAClD0/B,EAAUz7C,KAAKwE,SAASoX,eAAe5P,EAAQxC,EAAO4C,EAAQ2P,GAC9D2/B,EAAW32D,EAAQuf,kBAAoBtE,KAAKwE,SAASC,sBACrDc,EAAOvF,KAAKwJ,MAAQ,SAAW,SAErCxJ,KAAKwJ,MAAQiyC,EAAQjyC,MACrBxJ,KAAKoM,OAASqvC,EAAQrvC,OACtBpM,KAAKs6C,aAAet6C,KAAK+b,YACpBW,GAAY1c,KAAM07C,GAAU,KAIjC17C,KAAKssC,cAAc,SAAU,CAACvlD,KAAM00D,IAEpChG,EAAa1wD,EAAQ42D,SAAU,CAAC37C,KAAMy7C,GAAUz7C,MAE5CA,KAAK86C,UACH96C,KAAK+6C,UAAUx1C,IAEjBvF,KAAK47C,SAGV,oCAEDC,WAIEx4D,EAHgB2c,KAAKjb,QACSkhB,QAAU,CAAC,GAErB,SAAC61C,EAAarJ,GAChCqJ,EAAYr6D,GAAKgxD,CAClB,GACF,oCAKDsJ,WAAsB,WACdh3D,EAAUib,KAAKjb,QACfi3D,EAAYj3D,EAAQkhB,OACpBA,EAASjG,KAAKiG,OACdg2C,EAAUl6D,OAAO2B,KAAKuiB,GAAQid,QAAO,SAAC98B,EAAK3E,GAE/C,OADA2E,EAAI3E,IAAM,EACH2E,CACR,GAAE,CAAC,GACAkG,EAAQ,GAER0vD,IACF1vD,EAAQA,EAAMylC,OACZhwC,OAAO2B,KAAKs4D,GAAW13D,KAAI,SAAC7C,GAC1B,IAAMg1D,EAAeuF,EAAUv6D,GACzBmM,EAAO4oD,GAAc/0D,EAAIg1D,GACzByF,EAAoB,MAATtuD,EACXqmC,EAAwB,MAATrmC,EACrB,MAAO,CACL7I,QAAS0xD,EACT0F,UAAWD,EAAW,YAAcjoB,EAAe,SAAW,OAC9DmoB,MAAOF,EAAW,eAAiBjoB,EAAe,WAAa,SAElE,MAIL5wC,EAAKiJ,GAAO,SAACtF,GACX,IAAMyvD,EAAezvD,EAAKjC,QACpBtD,EAAKg1D,EAAah1D,GAClBmM,EAAO4oD,GAAc/0D,EAAIg1D,GACzB4F,EAAY35D,EAAe+zD,EAAa30D,KAAMkF,EAAKo1D,YAE3BvpD,IAA1B4jD,EAAalZ,UAA0B0b,GAAqBxC,EAAalZ,SAAU3vC,KAAUqrD,GAAqBjyD,EAAKm1D,aACzH1F,EAAalZ,SAAWv2C,EAAKm1D,WAG/BF,EAAQx6D,IAAM,EACd,IAAIukB,EAAQ,KACRvkB,KAAMwkB,GAAUA,EAAOxkB,GAAIK,OAASu6D,EACtCr2C,EAAQC,EAAOxkB,IAGfukB,EAAQ,IADWs2B,GAAS+X,SAASgI,GAC7B,CAAe,CACrB56D,GAAAA,EACAK,KAAMu6D,EACNn3C,IAAK,EAAKA,IACVtC,MAAO,IAETqD,EAAOD,EAAMvkB,IAAMukB,GAGrBA,EAAM22B,KAAK8Z,EAAc1xD,EAC1B,IAED1B,EAAK44D,GAAS,SAACK,EAAY76D,GACpB66D,UACIr2C,EAAOxkB,EAEjB,IAED4B,EAAK4iB,GAAQ,SAACD,GACZo5B,GAAkB,EAAMp5B,EAAOA,EAAMjhB,SACrCq6C,GAAe,EAAMp5B,EACtB,GACF,gCAKDu2C,WACE,IAAM11B,EAAW7mB,KAAKu6C,UAChB5pB,EAAU3wB,KAAK2K,KAAKtG,SAAS1gB,OAC7B+sC,EAAU7J,EAASljC,OAGzB,GADAkjC,EAASmL,MAAK,SAACnrC,EAAGC,GAAJ,OAAUD,EAAE1C,MAAQ2C,EAAE3C,KAAtB,IACVusC,EAAUC,EAAS,CACrB,IAAK,IAAIntC,EAAImtC,EAASntC,EAAIktC,IAAWltC,EACnCwc,KAAKw8C,oBAAoBh5D,GAE3BqjC,EAAS16B,OAAOwkC,EAASD,EAAUC,EACpC,CACD3wB,KAAK26C,gBAAkB9zB,EAAS1kC,MAAM,GAAG6vC,KAAKknB,GAAc,QAAS,SACtE,4CAKDuD,WAA8B,WACV51B,EAA8B7mB,KAAzCu6C,UAA4Bl2C,EAAarE,KAApB2K,KAAOtG,SAC/BwiB,EAASljC,OAAS0gB,EAAS1gB,eACtBqc,KAAKkoB,QAEdrB,EAASz6B,SAAQ,SAACgB,EAAMjJ,GACmC,IAArDkgB,EAAS4Q,QAAOtvB,SAAAA,GAAAA,OAAKA,IAAMyH,EAAKitC,QAAhB10C,IAA0BhC,QAC5C,EAAK64D,oBAAoBr4D,EAE5B,GACF,yCAEDu4D,WACE,IAEIl5D,EAAGO,EAFD44D,EAAiB,GACjBt4C,EAAWrE,KAAK2K,KAAKtG,SAK3B,IAFArE,KAAKy8C,8BAEAj5D,EAAI,EAAGO,EAAOsgB,EAAS1gB,OAAQH,EAAIO,EAAMP,IAAK,CACjD,IAAM8mC,EAAUjmB,EAAS7gB,GACrB4J,EAAO4S,KAAKqrB,eAAe7nC,GACzB1B,EAAOwoC,EAAQxoC,MAAQke,KAAKulB,OAAOzjC,KAazC,GAXIsL,EAAKtL,MAAQsL,EAAKtL,OAASA,IAC7Bke,KAAKw8C,oBAAoBh5D,GACzB4J,EAAO4S,KAAKqrB,eAAe7nC,IAE7B4J,EAAKtL,KAAOA,EACZsL,EAAKiY,UAAYilB,EAAQjlB,WAAaixC,GAAax0D,EAAMke,KAAKjb,SAC9DqI,EAAKwvD,MAAQtyB,EAAQsyB,OAAS,EAC9BxvD,EAAKjJ,MAAQX,EACb4J,EAAKghC,MAAQ,GAAK9D,EAAQ8D,MAC1BhhC,EAAK4a,QAAUhI,KAAKq3B,iBAAiB7zC,GAEjC4J,EAAK46B,WACP56B,EAAK46B,WAAWqC,YAAY7mC,GAC5B4J,EAAK46B,WAAWiC,iBACX,CACL,IAAM4yB,EAAkBvgB,GAAS4X,cAAcpyD,GAC/C,EAA8CwlB,GAASjD,SAASviB,GAAzDgoC,EAAP,EAAOA,mBAAoBC,EAA3B,EAA2BA,gBAC3BhoC,OAAO4M,OAAOkuD,EAAiB,CAC7B9yB,gBAAiBuS,GAASC,WAAWxS,GACrCD,mBAAoBA,GAAsBwS,GAASC,WAAWzS,KAEhE18B,EAAK46B,WAAa,IAAI60B,EAAgB78C,KAAMxc,GAC5Cm5D,EAAez2D,KAAKkH,EAAK46B,WAC1B,CACF,CAGD,OADAhoB,KAAKu8C,kBACEI,CACR,+BAMDG,WAAiB,WACfz5D,EAAK2c,KAAK2K,KAAKtG,UAAU,SAACimB,EAASpmC,GACjC,EAAKmnC,eAAennC,GAAc8jC,WAAWwD,OAC9C,GAAExrB,KACJ,sBAKDwrB,WACExrB,KAAK88C,iBACL98C,KAAKssC,cAAc,QACpB,uBAEDznB,SAAOtf,GACL,IAAMggB,EAASvlB,KAAKulB,OAEpBA,EAAOV,SACP,IAAM9/B,EAAUib,KAAKq6C,SAAW90B,EAAOkH,eAAelH,EAAOkzB,oBAAqBz4C,KAAKiM,cACjF8wC,EAAgB/8C,KAAK6vB,qBAAuB9qC,EAAQmf,UAU1D,GARAlE,KAAKg9C,gBACLh9C,KAAKi9C,sBACLj9C,KAAKk9C,uBAILl9C,KAAK46C,SAASjF,cAEuD,IAAjE31C,KAAKssC,cAAc,eAAgB,CAAC/mC,KAAAA,EAAMmwC,YAAY,IAA1D,CAKA,IAAMiH,EAAiB38C,KAAK08C,2BAE5B18C,KAAKssC,cAAc,wBAInB,IADA,IAAI5K,EAAa,EACRl+C,EAAI,EAAGO,EAAOic,KAAK2K,KAAKtG,SAAS1gB,OAAQH,EAAIO,EAAMP,IAAK,CAC/D,IAAOwkC,EAAchoB,KAAKqrB,eAAe7nC,GAAlCwkC,WACDwD,GAASuxB,IAAyD,IAAxCJ,EAAe93D,QAAQmjC,GAGvDA,EAAWiE,sBAAsBT,GACjCkW,EAAav6C,KAAK6B,KAAKg/B,EAAWkG,iBAAkBwT,EACrD,CACDA,EAAa1hC,KAAKm9C,YAAcp4D,EAAQu6C,OAAOp3B,YAAcw5B,EAAa,EAC1E1hC,KAAKo9C,cAAc1b,GAGdqb,GAGH15D,EAAKs5D,GAAgB,SAAC30B,GACpBA,EAAWwD,OACZ,IAGHxrB,KAAKq9C,gBAAgB93C,GAGrBvF,KAAKssC,cAAc,cAAe,CAAC/mC,KAAAA,IAEnCvF,KAAKuhC,QAAQvP,KAAKknB,GAAc,IAAK,SAGrC,IAAO12B,EAAuBxiB,KAAvBwiB,QAASg4B,EAAcx6C,KAAdw6C,WACZA,EACFx6C,KAAKs9C,cAAc9C,GAAY,GACtBh4B,EAAQ7+B,QACjBqc,KAAKu9C,mBAAmB/6B,EAASA,GAAS,GAG5CxiB,KAAK47C,QA5CJ,CA6CF,8BAKDoB,WAAgB,WACd35D,EAAK2c,KAAKiG,QAAQ,SAACD,GACjBo5B,GAAkB,EAAMp5B,EACzB,IAEDhG,KAAK67C,sBACL77C,KAAK+7C,qBACN,oCAKDkB,WACE,IAAMl4D,EAAUib,KAAKjb,QACfy4D,EAAiB,IAAIhxD,IAAIzK,OAAO2B,KAAKsc,KAAKy6C,aAC1CgD,EAAY,IAAIjxD,IAAIzH,EAAQ4f,QAE7B/d,EAAU42D,EAAgBC,MAAgBz9C,KAAK06C,uBAAyB31D,EAAQghB,aAEnF/F,KAAK09C,eACL19C,KAAKs7C,aAER,qCAKD4B,WACE,IADqB,EACdrC,EAAkB76C,KAAlB66C,eACD8C,EAAU39C,KAAK49C,0BAA4B,GAF5B,UAGgBD,GAHhB,IAGrB,IAAK,EAAL,qBAA8C,eAAlCt4B,EAAkC,EAAlCA,OAAQ56B,EAA0B,EAA1BA,MAAO+C,EAAmB,EAAnBA,MAEzBqsD,GAAgBgB,EAAgBpwD,EADR,oBAAX46B,GAAgC73B,EAAQA,EAEtD,CANoB,+BAOtB,uCAKDowD,WACE,IAAM1sB,EAAelxB,KAAKkxB,aAC1B,GAAKA,GAAiBA,EAAavtC,OAAnC,CAIAqc,KAAKkxB,aAAe,GASpB,IARA,IAAM2sB,EAAe79C,KAAK2K,KAAKtG,SAAS1gB,OAClCm6D,EAAU,SAACjP,GAAD,OAAS,IAAIriD,IAC3B0kC,EACGjc,QAAO/iB,SAAAA,GAAAA,OAAKA,EAAE,KAAO28C,CAAd38C,IACP5N,KAAI,SAAC4N,EAAG1O,GAAJ,OAAUA,EAAI,IAAM0O,EAAE/F,OAAO,GAAGuoB,KAAK,IAArC,IAHO,EAMVqpC,EAAYD,EAAQ,GACjBt6D,EAAI,EAAGA,EAAIq6D,EAAcr6D,IAChC,IAAKoD,EAAUm3D,EAAWD,EAAQt6D,IAChC,OAGJ,OAAO3B,MAAM6K,KAAKqxD,GACfz5D,KAAI4N,SAAAA,GAAAA,OAAKA,EAAElM,MAAM,IAAbkM,IACJ5N,KAAIuC,SAAAA,GAAAA,MAAM,CAACw+B,OAAQx+B,EAAE,GAAI4D,OAAQ5D,EAAE,GAAI2G,OAAQ3G,EAAE,GAA7CA,GAlBN,CAmBF,8BAODu2D,SAAc1b,GAAY,WACxB,IAA+D,IAA3D1hC,KAAKssC,cAAc,eAAgB,CAACoJ,YAAY,IAApD,CAIAtW,GAAep/B,KAAMA,KAAKwJ,MAAOxJ,KAAKoM,OAAQs1B,GAE9C,IAAM3zB,EAAO/N,KAAK0uB,UACZsvB,EAASjwC,EAAKvE,OAAS,GAAKuE,EAAK3B,QAAU,EAEjDpM,KAAKuhC,QAAU,GACfl+C,EAAK2c,KAAKihC,OAAO,SAAC7lB,GAAQ,MACpB4iC,GAA2B,cAAjB5iC,EAAImiB,WAOdniB,EAAIqK,WACNrK,EAAIqK,aAEN,IAAK8b,SAAQr7C,KAAb,gBAAqBk1B,EAAImmB,YAC1B,GAAEvhC,MAEHA,KAAKuhC,QAAQn1C,SAAQ,SAACpF,EAAM7C,GAC1B6C,EAAKi3D,KAAO95D,CACb,IAED6b,KAAKssC,cAAc,cA1BlB,CA2BF,gCAOD+Q,SAAgB93C,GACd,IAA6E,IAAzEvF,KAAKssC,cAAc,uBAAwB,CAAC/mC,KAAAA,EAAMmwC,YAAY,IAAlE,CAIA,IAAK,IAAIlyD,EAAI,EAAGO,EAAOic,KAAK2K,KAAKtG,SAAS1gB,OAAQH,EAAIO,IAAQP,EAC5Dwc,KAAKqrB,eAAe7nC,GAAGwkC,WAAWvC,YAGpC,IAAK,IAAIjiC,EAAI,EAAGO,EAAOic,KAAK2K,KAAKtG,SAAS1gB,OAAQH,EAAIO,IAAQP,EAC5Dwc,KAAKk+C,eAAe16D,EAAGmD,EAAW4e,GAAQA,EAAK,CAACrhB,aAAcV,IAAM+hB,GAGtEvF,KAAKssC,cAAc,sBAAuB,CAAC/mC,KAAAA,GAV1C,CAWF,+BAOD24C,SAAe/5D,EAAOohB,GACpB,IAAMnY,EAAO4S,KAAKqrB,eAAelnC,GAC3BjB,EAAO,CAACkK,KAAAA,EAAMjJ,MAAAA,EAAOohB,KAAAA,EAAMmwC,YAAY,IAEW,IAApD11C,KAAKssC,cAAc,sBAAuBppD,KAI9CkK,EAAK46B,WAAW9F,QAAQ3c,GAExBriB,EAAKwyD,YAAa,EAClB11C,KAAKssC,cAAc,qBAAsBppD,GAC1C,uBAED04D,YACiE,IAA3D57C,KAAKssC,cAAc,eAAgB,CAACoJ,YAAY,MAIhDlvB,GAASv/B,IAAI+Y,MACXA,KAAK86C,WAAat0B,GAASlE,QAAQtiB,OACrCwmB,GAAS/7B,MAAMuV,OAGjBA,KAAKuiB,OACL82B,GAAqB,CAACz2C,MAAO5C,QAEhC,qBAEDuiB,WACE,IAAI/+B,EACJ,GAAIwc,KAAKu7C,kBAAmB,CAC1B,MAAwBv7C,KAAKu7C,kBAAtB/xC,EAAP,EAAOA,MAAO4C,EAAd,EAAcA,OACdpM,KAAKw7C,QAAQhyC,EAAO4C,GACpBpM,KAAKu7C,kBAAoB,IAC1B,CAGD,GAFAv7C,KAAKk4C,UAEDl4C,KAAKwJ,OAAS,GAAKxJ,KAAKoM,QAAU,KAIuB,IAAzDpM,KAAKssC,cAAc,aAAc,CAACoJ,YAAY,IAAlD,CAOA,IAAMyI,EAASn+C,KAAKuhC,QACpB,IAAK/9C,EAAI,EAAGA,EAAI26D,EAAOx6D,QAAUw6D,EAAO36D,GAAGg+C,GAAK,IAAKh+C,EACnD26D,EAAO36D,GAAG++B,KAAKviB,KAAK0uB,WAMtB,IAHA1uB,KAAKo+C,gBAGE56D,EAAI26D,EAAOx6D,SAAUH,EAC1B26D,EAAO36D,GAAG++B,KAAKviB,KAAK0uB,WAGtB1uB,KAAKssC,cAAc,YAjBlB,CAkBF,uCAKDxlB,SAAuBF,GACrB,IAEIpjC,EAAGO,EAFD8iC,EAAW7mB,KAAK26C,gBAChBlgC,EAAS,GAGf,IAAKj3B,EAAI,EAAGO,EAAO8iC,EAASljC,OAAQH,EAAIO,IAAQP,EAAG,CACjD,IAAM4J,EAAOy5B,EAASrjC,GACjBojC,IAAiBx5B,EAAK4a,SACzByS,EAAOv0B,KAAKkH,EAEf,CAED,OAAOqtB,CACR,6CAMDgjB,WACE,OAAOz9B,KAAK8mB,wBAAuB,EACpC,8BAODs3B,WACE,IAAqE,IAAjEp+C,KAAKssC,cAAc,qBAAsB,CAACoJ,YAAY,IAA1D,CAKA,IADA,IAAM7uB,EAAW7mB,KAAKy9B,+BACbj6C,EAAIqjC,EAASljC,OAAS,EAAGH,GAAK,IAAKA,EAC1Cwc,KAAKq+C,aAAax3B,EAASrjC,IAG7Bwc,KAAKssC,cAAc,oBAPlB,CAQF,6BAOD+R,SAAajxD,GACX,IAAM8X,EAAMlF,KAAKkF,IACXgJ,EAAO9gB,EAAKkhC,MACZgwB,GAAWpwC,EAAKqgB,SAChBxgB,EAvrBV,SAAwB3gB,GACtB,IAAOc,EAAkBd,EAAlBc,OAAQC,EAAUf,EAAVe,OACf,GAAID,GAAUC,EACZ,MAAO,CACLoa,KAAMra,EAAOqa,KACbF,MAAOna,EAAOma,MACdD,IAAKja,EAAOia,IACZE,OAAQna,EAAOma,OAGpB,CA6qBgBi2C,CAAenxD,IAAS4S,KAAK0uB,UACpCxrC,EAAO,CACXkK,KAAAA,EACAjJ,MAAOiJ,EAAKjJ,MACZuxD,YAAY,IAGwC,IAAlD11C,KAAKssC,cAAc,oBAAqBppD,KAIxCo7D,GACFrwC,GAAS/I,EAAK,CACZqD,MAAoB,IAAd2F,EAAK3F,KAAiB,EAAIwF,EAAKxF,KAAO2F,EAAK3F,KACjDF,OAAsB,IAAf6F,EAAK7F,MAAkBrI,KAAKwJ,MAAQuE,EAAK1F,MAAQ6F,EAAK7F,MAC7DD,KAAkB,IAAb8F,EAAK9F,IAAgB,EAAI2F,EAAK3F,IAAM8F,EAAK9F,IAC9CE,QAAwB,IAAhB4F,EAAK5F,OAAmBtI,KAAKoM,OAAS2B,EAAKzF,OAAS4F,EAAK5F,SAIrElb,EAAK46B,WAAWzF,OAEZ+7B,GACFnwC,GAAWjJ,GAGbhiB,EAAKwyD,YAAa,EAClB11C,KAAKssC,cAAc,mBAAoBppD,GACxC,8BAOD06C,SAAc9vB,GACZ,OAAOD,GAAeC,EAAO9N,KAAK0uB,UAAW1uB,KAAKm9C,YACnD,0CAEDqB,SAA0Bj1D,EAAGgc,EAAMxgB,EAAS44C,GAC1C,IAAMtY,EAASo5B,GAAY5f,MAAMt5B,GACjC,MAAsB,oBAAX8f,EACFA,EAAOrlB,KAAMzW,EAAGxE,EAAS44C,GAG3B,EACR,+BAEDtS,SAAennC,GACb,IAAMomC,EAAUtqB,KAAK2K,KAAKtG,SAASngB,GAC7B2iC,EAAW7mB,KAAKu6C,UAClBntD,EAAOy5B,EAAS5R,QAAOtvB,SAAAA,GAAAA,OAAKA,GAAKA,EAAE00C,WAAa/P,CAAzB3kC,IAAkCg9B,MAoB7D,OAlBKv1B,IACHA,EAAO,CACLtL,KAAM,KACN6oB,KAAM,GACN2f,QAAS,KACTtC,WAAY,KACZ2F,OAAQ,KACRjD,QAAS,KACTE,QAAS,KACTgyB,MAAOtyB,GAAWA,EAAQsyB,OAAS,EACnCz4D,MAAOD,EACPm2C,SAAU/P,EACV38B,QAAS,GACTF,SAAS,GAEXo5B,EAAS3gC,KAAKkH,IAGTA,CACR,2BAED6e,WACE,OAAOjM,KAAK4pB,WAAa5pB,KAAK4pB,SAAWtX,GAAc,KAAM,CAAC1P,MAAO5C,KAAMle,KAAM,UAClF,uCAEDs5C,WACE,OAAOp7B,KAAKy9B,+BAA+B95C,MAC5C,iCAED0zC,SAAiBnzC,GACf,IAAMomC,EAAUtqB,KAAK2K,KAAKtG,SAASngB,GACnC,IAAKomC,EACH,OAAO,EAGT,IAAMl9B,EAAO4S,KAAKqrB,eAAennC,GAIjC,MAA8B,mBAAhBkJ,EAAKugC,QAAwBvgC,EAAKugC,QAAUrD,EAAQqD,MACnE,qCAED+wB,SAAqBx6D,EAAc8jB,GACpBhI,KAAKqrB,eAAennC,GAC5BypC,QAAU3lB,CAChB,qCAEDmyB,SAAqBh2C,GACnB6b,KAAK66C,eAAe12D,IAAU6b,KAAK66C,eAAe12D,EACnD,kCAEDuxC,SAAkBvxC,GAChB,OAAQ6b,KAAK66C,eAAe12D,EAC7B,kCAKDw6D,SAAkBz6D,EAAc2qC,EAAW7mB,GACzC,IAAMzC,EAAOyC,EAAU,OAAS,OAC1B5a,EAAO4S,KAAKqrB,eAAennC,GAC3By9B,EAAQv0B,EAAK46B,WAAWuH,wBAAmB18B,EAAW0S,GAExD7e,EAAQmoC,IACVzhC,EAAKud,KAAKkkB,GAAWlB,QAAU3lB,EAC/BhI,KAAK6kB,WAEL7kB,KAAK0+C,qBAAqBx6D,EAAc8jB,GAExC2Z,EAAMkD,OAAOz3B,EAAM,CAAC4a,QAAAA,IACpBhI,KAAK6kB,QAAO,SAAC3f,GAAD,OAASA,EAAIhhB,eAAiBA,EAAeqhB,OAAO1S,CAApD,IAEf,qBAEDoV,SAAK/jB,EAAc2qC,GACjB7uB,KAAK2+C,kBAAkBz6D,EAAc2qC,GAAW,EACjD,qBAED/mB,SAAK5jB,EAAc2qC,GACjB7uB,KAAK2+C,kBAAkBz6D,EAAc2qC,GAAW,EACjD,oCAKD2tB,SAAoBt4D,GAClB,IAAMkJ,EAAO4S,KAAKu6C,UAAUr2D,GACxBkJ,GAAQA,EAAK46B,YACf56B,EAAK46B,WAAWyD,kBAEXzrB,KAAKu6C,UAAUr2D,EACvB,sBAED06D,WACE,IAAIp7D,EAAGO,EAIP,IAHAic,KAAKsjB,OACLkD,GAAShD,OAAOxjB,MAEXxc,EAAI,EAAGO,EAAOic,KAAK2K,KAAKtG,SAAS1gB,OAAQH,EAAIO,IAAQP,EACxDwc,KAAKw8C,oBAAoBh5D,EAE5B,wBAEDq7D,WACE7+C,KAAKssC,cAAc,iBACnB,IAAOtgC,EAAehM,KAAfgM,OAAQ9G,EAAOlF,KAAPkF,IAEflF,KAAK4+C,QACL5+C,KAAKulB,OAAO0yB,aAERjsC,IACFhM,KAAK09C,eACL3xC,GAAYC,EAAQ9G,GACpBlF,KAAKwE,SAASo+B,eAAe19B,GAC7BlF,KAAKgM,OAAS,KACdhM,KAAKkF,IAAM,aAGNy0C,GAAU35C,KAAKve,IAEtBue,KAAKssC,cAAc,eACpB,8BAEDwS,WAAuB,MACrB,OAAO,EAAA9+C,KAAKgM,QAAO+yC,UAAZ,kBACR,2BAKDzD,WACEt7C,KAAKg/C,iBACDh/C,KAAKjb,QAAQghB,WACf/F,KAAKi/C,uBAELj/C,KAAK86C,UAAW,CAEnB,+BAKDkE,WAAiB,WACT9yD,EAAY8T,KAAKy6C,WACjBj2C,EAAWxE,KAAKwE,SAOhBzY,EAAW,SAACxC,EAAG5D,EAAGE,GACtB0D,EAAE2xB,QAAUv1B,EACZ4D,EAAE4xB,QAAUt1B,EACZ,EAAKy3D,cAAc/zD,EACpB,EAEDlG,EAAK2c,KAAKjb,QAAQ4f,QAAQ,SAAC7iB,GAAD,OAXb,SAACA,EAAMiK,GAClByY,EAAS4Y,iBAAiB,EAAMt7B,EAAMiK,GACtCG,EAAUpK,GAAQiK,CACnB,CAQmCmzD,CAAKp9D,EAAMiK,EAArB,GAC3B,qCAKDkzD,WAAuB,WAChBj/C,KAAK06C,uBACR16C,KAAK06C,qBAAuB,CAAC,GAE/B,IAoBIyE,EApBEjzD,EAAY8T,KAAK06C,qBACjBl2C,EAAWxE,KAAKwE,SAEhB06C,EAAO,SAACp9D,EAAMiK,GAClByY,EAAS4Y,iBAAiB,EAAMt7B,EAAMiK,GACtCG,EAAUpK,GAAQiK,CACnB,EACKqzD,EAAU,SAACt9D,EAAMiK,GACjBG,EAAUpK,KACZ0iB,EAAS6Y,oBAAoB,EAAMv7B,EAAMiK,UAClCG,EAAUpK,GAEpB,EAEKiK,EAAW,SAACyd,EAAO4C,GACnB,EAAKJ,QACP,EAAKnE,OAAO2B,EAAO4C,EAEtB,EAGK0uC,EAAW,SAAXA,IACJsE,EAAQ,SAAUtE,GAElB,EAAKA,UAAW,EAChB,EAAKjzC,SAELq3C,EAAK,SAAUnzD,GACfmzD,EAAK,SAAUC,EAChB,EAEDA,EAAW,WACT,EAAKrE,UAAW,EAEhBsE,EAAQ,SAAUrzD,GAGlB,EAAK6yD,QACL,EAAKpD,QAAQ,EAAG,GAEhB0D,EAAK,SAAUpE,EAChB,EAEGt2C,EAASq+B,WAAW7iC,KAAKgM,QAC3B8uC,IAEAqE,GAEH,6BAKDzB,WAAe,WACbr6D,EAAK2c,KAAKy6C,YAAY,SAAC1uD,EAAUjK,GAC/B,EAAK0iB,SAAS6Y,oBAAoB,EAAMv7B,EAAMiK,EAC/C,IACDiU,KAAKy6C,WAAa,CAAC,EAEnBp3D,EAAK2c,KAAK06C,sBAAsB,SAAC3uD,EAAUjK,GACzC,EAAK0iB,SAAS6Y,oBAAoB,EAAMv7B,EAAMiK,EAC/C,IACDiU,KAAK06C,0BAAuB7nD,CAC7B,iCAEDwsD,SAAiB/yD,EAAOiZ,EAAM+hC,GAC5B,IACUtgD,EAAMxD,EAAGO,EADb4xB,EAAS2xB,EAAU,MAAQ,SAQjC,IALa,YAAT/hC,GACKvF,KAAKqrB,eAAe/+B,EAAM,GAAGpI,cAC/B8jC,WAAW,IAAMrS,EAAS,uBAG5BnyB,EAAI,EAAGO,EAAOuI,EAAM3I,OAAQH,EAAIO,IAAQP,EAAG,CAE9C,IAAMwkC,GADNhhC,EAAOsF,EAAM9I,KACcwc,KAAKqrB,eAAerkC,EAAK9C,cAAc8jC,WAC9DA,GACFA,EAAWrS,EAAS,cAAc3uB,EAAKkzB,QAASlzB,EAAK9C,aAAc8C,EAAK7C,MAE3E,CACF,kCAMDm7D,WACE,OAAOt/C,KAAKwiB,SAAW,EACxB,kCAMD+8B,SAAkBC,GAAgB,WAC1BC,EAAaz/C,KAAKwiB,SAAW,GAC7B5a,EAAS43C,EAAel7D,KAAI,YAA2B,IAAzBJ,EAAyB,EAAzBA,aAAcC,EAAW,EAAXA,MAC1CiJ,EAAO,EAAKi+B,eAAennC,GACjC,IAAKkJ,EACH,MAAM,IAAIqnB,MAAM,6BAA+BvwB,GAGjD,MAAO,CACLA,aAAAA,EACAg2B,QAAS9sB,EAAKud,KAAKxmB,GACnBA,MAAAA,EAEH,KACgBP,EAAegkB,EAAQ63C,KAGtCz/C,KAAKwiB,QAAU5a,EAEf5H,KAAKw6C,WAAa,KAClBx6C,KAAKu9C,mBAAmB31C,EAAQ63C,GAEnC,8BAWDnT,SAAc+I,EAAMnyD,EAAM+xB,GACxB,OAAOjV,KAAK46C,SAASxF,OAAOp1C,KAAMq1C,EAAMnyD,EAAM+xB,EAC/C,gCAODmV,SAAgBs1B,GACd,OAA6E,IAAtE1/C,KAAK46C,SAAShpB,OAAO3c,QAAOzrB,SAAAA,GAAAA,OAAKA,EAAEgsD,OAAO/zD,KAAOi+D,CAArBl2D,IAA+B7F,MACnE,mCAKD45D,SAAmB31C,EAAQ63C,EAAYE,GACrC,IAAMC,EAAe5/C,KAAKjb,QAAQigB,MAC5B63B,EAAO,SAACh2C,EAAGC,GAAJ,OAAUD,EAAEouB,QAAOtvB,SAAAA,GAAAA,OAAMmB,EAAEsvD,MAAKvwD,SAAAA,GAAAA,OAAKF,EAAEzB,eAAiB2B,EAAE3B,cAAgByB,EAAExB,QAAU0B,EAAE1B,KAAxD0B,GAAbF,GAAnB,EACPk6D,EAAchjB,EAAK4iB,EAAY73C,GAC/Bk4C,EAAYH,EAAS/3C,EAASi1B,EAAKj1B,EAAQ63C,GAE7CI,EAAYl8D,QACdqc,KAAKq/C,iBAAiBQ,EAAaD,EAAar6C,MAAM,GAGpDu6C,EAAUn8D,QAAUi8D,EAAar6C,MACnCvF,KAAKq/C,iBAAiBS,EAAWF,EAAar6C,MAAM,EAEvD,8BAKD+3C,SAAc/zD,EAAGo2D,GAAQ,WACjBz8D,EAAO,CACX03B,MAAOrxB,EACPo2D,OAAAA,EACAjK,YAAY,EACZqK,YAAa//C,KAAK49B,cAAcr0C,IAE5By2D,EAAc,SAACxK,GAAD,OAAaA,EAAOzwD,QAAQ4f,QAAU,EAAK5f,QAAQ4f,QAAQpB,SAASha,EAAEg8C,OAAOzjD,KAA7E,EAEpB,IAA6D,IAAzDke,KAAKssC,cAAc,cAAeppD,EAAM88D,GAA5C,CAIA,IAAMtxD,EAAUsR,KAAKigD,aAAa12D,EAAGo2D,EAAQz8D,EAAK68D,aASlD,OAPA78D,EAAKwyD,YAAa,EAClB11C,KAAKssC,cAAc,aAAcppD,EAAM88D,IAEnCtxD,GAAWxL,EAAKwL,UAClBsR,KAAK47C,SAGA57C,IAXN,CAYF,6BAUDigD,SAAa12D,EAAGo2D,EAAQI,GACtB,MAA4C//C,KAArCwiB,QAASi9B,OAAhB,MAA6B,GAA7B,EAAiC16D,EAAWib,KAAXjb,QAe3B44C,EAAmBgiB,EACnB/3C,EAAS5H,KAAKkgD,mBAAmB32D,EAAGk2D,EAAYM,EAAapiB,GAC7DwiB,E9ClzBH,SAAuB52D,GAC5B,MAAkB,YAAXA,EAAEzH,MAAiC,UAAXyH,EAAEzH,MAA+B,gBAAXyH,EAAEzH,IACxD,C8CgzBmBs+D,CAAc72D,GACxB82D,EAnnCV,SAA4B92D,EAAG82D,EAAWN,EAAaI,GACrD,OAAKJ,GAA0B,aAAXx2D,EAAEzH,KAGlBq+D,EACKE,EAEF92D,EALE,IAMV,CA2mCqB+2D,CAAmB/2D,EAAGyW,KAAKw6C,WAAYuF,EAAaI,GAElEJ,IAGF//C,KAAKw6C,WAAa,KAGlB/E,EAAa1wD,EAAQ4gB,QAAS,CAACpc,EAAGqe,EAAQ5H,MAAOA,MAE7CmgD,GACF1K,EAAa1wD,EAAQ6gB,QAAS,CAACrc,EAAGqe,EAAQ5H,MAAOA,OAIrD,IAAMtR,GAAW9K,EAAegkB,EAAQ63C,GAQxC,OAPI/wD,GAAWixD,KACb3/C,KAAKwiB,QAAU5a,EACf5H,KAAKu9C,mBAAmB31C,EAAQ63C,EAAYE,IAG9C3/C,KAAKw6C,WAAa6F,EAEX3xD,CACR,mCAUDwxD,SAAmB32D,EAAGk2D,EAAYM,EAAapiB,GAC7C,GAAe,aAAXp0C,EAAEzH,KACJ,MAAO,GAGT,IAAKi+D,EAEH,OAAON,EAGT,IAAMG,EAAe5/C,KAAKjb,QAAQigB,MAClC,OAAOhF,KAAKw+C,0BAA0Bj1D,EAAGq2D,EAAar6C,KAAMq6C,EAAcjiB,EAC3E,2BAloCD,WACErB,GAAS7vC,IAAT6vC,MAAAA,GAAQ,WACRikB,IACD,2BAED,WACEjkB,GAAS9Y,OAAT8Y,MAAAA,GAAQ,WACRikB,IACD,OAjBGxG,GA+oCN,SAASwG,KACP,OAAOl9D,EAAK02D,GAAMJ,WAAW,SAAC/2C,GAAD,OAAWA,EAAMg4C,SAASjF,YAA1B,GAC9B,SAjpCKoE,GAAAA,WAEczyC,YAFdyyC,GAAAA,YAGeJ,YAHfI,GAAAA,YAIev2C,YAJfu2C,GAAAA,WAKczd,YALdyd,GAAAA,2BAAAA,GAAAA,WAOcH,IA4oCpB,OAAeG,GEtuCf,SAASyG,GAAkBpzC,EAAiB0pB,EAAqBC,EAAqB0pB,GACpF,IAAM76D,EAPCyrB,GAOmBjE,EAAIroB,QAAQ27D,aAPN,CAAC,aAAc,WAAY,aAAc,aAQnEC,GAAiB5pB,EAAcD,GAAe,EAC9C8pB,EAAaz5D,KAAK4B,IAAI43D,EAAeF,EAAa3pB,EAAc,GAShE+pB,EAAoB,SAAChgD,GACzB,IAAMigD,GAAiB/pB,EAAc5vC,KAAK4B,IAAI43D,EAAe9/C,IAAQ4/C,EAAa,EAClF,OAAOx1D,GAAY4V,EAAK,EAAG1Z,KAAK4B,IAAI43D,EAAeG,GACpD,EAED,MAAO,CACLC,WAAYF,EAAkBj7D,EAAEm7D,YAChCC,SAAUH,EAAkBj7D,EAAEo7D,UAC9BC,WAAYh2D,GAAYrF,EAAEq7D,WAAY,EAAGL,GACzCM,SAAUj2D,GAAYrF,EAAEs7D,SAAU,EAAGN,GAExC,CAKD,SAASO,GAAW1uD,EAAW2uD,EAAez7D,EAAWE,GACvD,MAAO,CACLF,EAAGA,EAAI8M,EAAItL,KAAK6I,IAAIoxD,GACpBv7D,EAAGA,EAAI4M,EAAItL,KAAK4H,IAAIqyD,GAEvB,CAiBD,SAASC,GACPn8C,EACAgV,EACAzR,EACA8uB,EACA7sC,EACAoxC,GAEA,IAAOn2C,EAA6Du0B,EAA7Dv0B,EAAGE,EAA0Dq0B,EAA1Dr0B,EAAe4E,EAA2CyvB,EAAvD8d,WAAmBspB,EAAoCpnC,EAApConC,YAA0BC,EAAUrnC,EAAvB4c,YAEvCC,EAAc5vC,KAAK6B,IAAIkxB,EAAQ6c,YAAcQ,EAAU9uB,EAAS64C,EAAa,GAC7ExqB,EAAcyqB,EAAS,EAAIA,EAAShqB,EAAU9uB,EAAS64C,EAAc,EAEvEE,EAAgB,EACd5uD,EAAQlI,EAAMD,EAEpB,GAAI8sC,EAAS,CAIX,IAEMkqB,IAFuBF,EAAS,EAAIA,EAAShqB,EAAU,IAChCR,EAAc,EAAIA,EAAcQ,EAAU,IACI,EAE3EiqB,GAAiB5uD,GAD4B,IAAvB6uD,EAA2B7uD,EAAS6uD,GAAuBA,EAAqBlqB,GAAW3kC,IACvE,CAC3C,CAED,IACM8uD,GAAe9uD,EADRzL,KAAK6B,IAAI,KAAO4J,EAAQmkC,EAActuB,EAASvhB,GAAM6vC,GAC7B,EAC/BiB,EAAavtC,EAAQi3D,EAAcF,EACnCvpB,EAAWvtC,EAAMg3D,EAAcF,EACrC,EAAqDhB,GAAkBtmC,EAAS4c,EAAaC,EAAakB,EAAWD,GAA9G+oB,EAAP,EAAOA,WAAYC,EAAnB,EAAmBA,SAAUC,EAA7B,EAA6BA,WAAYC,EAAzC,EAAyCA,SAEnCS,EAA2B5qB,EAAcgqB,EACzCa,EAAyB7qB,EAAciqB,EACvCa,EAA0B7pB,EAAa+oB,EAAaY,EACpDG,EAAwB7pB,EAAW+oB,EAAWY,EAE9CG,EAA2BjrB,EAAcmqB,EACzCe,EAAyBlrB,EAAcoqB,EACvCe,EAA0BjqB,EAAaipB,EAAac,EACpDG,EAAwBjqB,EAAWipB,EAAWc,EAIpD,GAFA98C,EAAIgI,YAEA4uB,EAAU,CAEZ,IAAMqmB,GAAyBN,EAA0BC,GAAyB,EAKlF,GAJA58C,EAAIkI,IAAIznB,EAAGE,EAAGkxC,EAAa8qB,EAAyBM,GACpDj9C,EAAIkI,IAAIznB,EAAGE,EAAGkxC,EAAaorB,EAAuBL,GAG9Cd,EAAW,EAAG,CAChB,IAAMoB,EAAUjB,GAAWS,EAAwBE,EAAuBn8D,EAAGE,GAC7Eqf,EAAIkI,IAAIg1C,EAAQz8D,EAAGy8D,EAAQv8D,EAAGm7D,EAAUc,EAAuB7pB,EAAWxwC,EAC3E,CAGD,IAAM46D,EAAKlB,GAAWa,EAAwB/pB,EAAUtyC,EAAGE,GAI3D,GAHAqf,EAAIqI,OAAO80C,EAAG18D,EAAG08D,EAAGx8D,GAGhBq7D,EAAW,EAAG,CAChB,IAAMkB,EAAUjB,GAAWa,EAAwBE,EAAuBv8D,EAAGE,GAC7Eqf,EAAIkI,IAAIg1C,EAAQz8D,EAAGy8D,EAAQv8D,EAAGq7D,EAAUjpB,EAAWxwC,EAASy6D,EAAwB/6D,KAAKD,GAC1F,CAGD,IAAMo7D,GAA0BrqB,EAAYipB,EAAWpqB,GAAiBkB,EAAcipB,EAAanqB,IAAiB,EAKpH,GAJA5xB,EAAIkI,IAAIznB,EAAGE,EAAGixC,EAAamB,EAAYipB,EAAWpqB,EAAcwrB,GAAuB,GACvFp9C,EAAIkI,IAAIznB,EAAGE,EAAGixC,EAAawrB,EAAuBtqB,EAAcipB,EAAanqB,GAAc,GAGvFmqB,EAAa,EAAG,CAClB,IAAMmB,EAAUjB,GAAWY,EAA0BE,EAAyBt8D,EAAGE,GACjFqf,EAAIkI,IAAIg1C,EAAQz8D,EAAGy8D,EAAQv8D,EAAGo7D,EAAYgB,EAA0B96D,KAAKD,GAAI8wC,EAAavwC,EAC3F,CAGD,IAAM86D,EAAKpB,GAAWQ,EAA0B3pB,EAAYryC,EAAGE,GAI/D,GAHAqf,EAAIqI,OAAOg1C,EAAG58D,EAAG48D,EAAG18D,GAGhBk7D,EAAa,EAAG,CAClB,IAAMqB,EAAUjB,GAAWQ,EAA0BE,EAAyBl8D,EAAGE,GACjFqf,EAAIkI,IAAIg1C,EAAQz8D,EAAGy8D,EAAQv8D,EAAGk7D,EAAY/oB,EAAavwC,EAASo6D,EACjE,CACF,KAAM,CACL38C,EAAIoI,OAAO3nB,EAAGE,GAEd,IAAM28D,EAAcr7D,KAAK6I,IAAI6xD,GAA2B9qB,EAAcpxC,EAChE88D,EAAct7D,KAAK4H,IAAI8yD,GAA2B9qB,EAAclxC,EACtEqf,EAAIqI,OAAOi1C,EAAaC,GAExB,IAAMC,EAAYv7D,KAAK6I,IAAI8xD,GAAyB/qB,EAAcpxC,EAC5Dg9D,EAAYx7D,KAAK4H,IAAI+yD,GAAyB/qB,EAAclxC,EAClEqf,EAAIqI,OAAOm1C,EAAWC,EACvB,CAEDz9C,EAAImI,WACL,CAyBD,SAAS0kC,GACP7sC,EACAgV,EACAzR,EACA8uB,EACAuE,GAEA,IAAO8mB,EAAmD1oC,EAAnD0oC,YAAa5qB,EAAsC9d,EAAtC8d,WAAYb,EAA0Bjd,EAA1Bid,cAAepyC,EAAWm1B,EAAXn1B,QACxC4oB,EAAgC5oB,EAAhC4oB,YAAayT,EAAmBr8B,EAAnBq8B,gBACdyhC,EAAgC,UAAxB99D,EAAQ40C,YAEtB,GAAKhsB,EAAL,CAIIk1C,GACF39C,EAAI4D,UAA0B,EAAd6E,EAChBzI,EAAI49C,SAAW1hC,GAAmB,UAElClc,EAAI4D,UAAY6E,EAChBzI,EAAI49C,SAAW1hC,GAAmB,SAGpC,IAAI6W,EAAW/d,EAAQ+d,SACvB,GAAI2qB,EAAa,CACfvB,GAAQn8C,EAAKgV,EAASzR,EAAQ8uB,EAASU,EAAU6D,GACjD,IAAK,IAAIt4C,EAAI,EAAGA,EAAIo/D,IAAep/D,EACjC0hB,EAAI0I,SAEDjlB,MAAMwuC,KACTc,EAAWD,GAAcb,EAAgB/vC,GAAOA,GAEnD,CAEGy7D,GA1ON,SAAiB39C,EAA+BgV,EAAqB+d,GACnE,IAAOD,EAA2D9d,EAA3D8d,WAAYspB,EAA+CpnC,EAA/ConC,YAAa37D,EAAkCu0B,EAAlCv0B,EAAGE,EAA+Bq0B,EAA/Br0B,EAAGkxC,EAA4B7c,EAA5B6c,YAAaD,EAAe5c,EAAf4c,YAC/CisB,EAAczB,EAAcvqB,EAIhC7xB,EAAIgI,YACJhI,EAAIkI,IAAIznB,EAAGE,EAAGkxC,EAAaiB,EAAa+qB,EAAa9qB,EAAW8qB,GAC5DjsB,EAAcwqB,GAChByB,EAAczB,EAAcxqB,EAC5B5xB,EAAIkI,IAAIznB,EAAGE,EAAGixC,EAAamB,EAAW8qB,EAAa/qB,EAAa+qB,GAAa,IAE7E79C,EAAIkI,IAAIznB,EAAGE,EAAGy7D,EAAarpB,EAAWxwC,EAASuwC,EAAavwC,GAE9Dyd,EAAImI,YACJnI,EAAIgJ,MACL,CA2NG80C,CAAQ99C,EAAKgV,EAAS+d,GAGnB2qB,IACHvB,GAAQn8C,EAAKgV,EAASzR,EAAQ8uB,EAASU,EAAU6D,GACjD52B,EAAI0I,SA3BL,CA6BF,KAUoBq1C,GAAAA,SAAAA,iCA4BnBl/C,SAAAA,EAAYmgB,GAAK,6BACf,gBAEKn/B,aAAU8N,EACf,EAAKskC,mBAAgBtkC,EACrB,EAAKmlC,gBAAanlC,EAClB,EAAKolC,cAAWplC,EAChB,EAAKikC,iBAAcjkC,EACnB,EAAKkkC,iBAAclkC,EACnB,EAAKyuD,YAAc,EACnB,EAAKsB,YAAc,EAEf1+B,GACFniC,OAAO4M,QAAP5M,EAAAA,EAAAA,GAAAA,GAAoBmiC,GAbP,CAehB,uCAED2Z,SAAQqlB,EAAgBC,EAAgBxlB,GACtC,IACA,EAA0Bl0C,GADZuW,KAAKw+B,SAAS,CAAC,IAAK,KAAMb,GACW,CAACh4C,EAAGu9D,EAAQr9D,EAAGs9D,IAA3Dn5D,EAAP,EAAOA,MAAOE,EAAd,EAAcA,SACd,EAAwE8V,KAAKw+B,SAAS,CACpF,aACA,WACA,cACA,cACA,iBACCb,GANI3F,EAAP,EAAOA,WAAYC,EAAnB,EAAmBA,SAAUnB,EAA7B,EAA6BA,YAAaC,EAA1C,EAA0CA,YAAaI,EAAvD,EAAuDA,cAOjDisB,EAAUpjD,KAAKjb,QAAQwyC,QAAU,EAEjC8rB,EADiB3gE,EAAey0C,EAAec,EAAWD,IACxB5wC,GAAOoD,GAAcR,EAAOguC,EAAYC,GAC1EqrB,EAAep4D,GAAWhB,EAAU4sC,EAAcssB,EAASrsB,EAAcqsB,GAE/E,OAAQC,GAAiBC,CAC1B,+BAEDhlB,SAAeX,GACb,MAA+D39B,KAAKw+B,SAAS,CAC3E,IACA,IACA,aACA,WACA,cACA,cACA,iBACCb,GARIh4C,EAAP,EAAOA,EAAGE,EAAV,EAAUA,EAAGmyC,EAAb,EAAaA,WAAYC,EAAzB,EAAyBA,SAAUnB,EAAnC,EAAmCA,YAAaC,EAAhD,EAAgDA,YAShD,EAA0B/2B,KAAKjb,QAAxB0jB,EAAP,EAAOA,OACD86C,GAAavrB,EAAaC,GAAY,EACtCurB,GAAc1sB,EAAcC,EAFlC,EAAeQ,QAE2C9uB,GAAU,EACpE,MAAO,CACL9iB,EAAGA,EAAIwB,KAAK6I,IAAIuzD,GAAaC,EAC7B39D,EAAGA,EAAIsB,KAAK4H,IAAIw0D,GAAaC,EAEhC,gCAED/c,SAAgB9I,GACd,OAAO39B,KAAKs+B,eAAeX,EAC5B,qBAEDpb,SAAKrd,GACH,IAAOngB,EAA0Bib,KAA1Bjb,QAASoyC,EAAiBn3B,KAAjBm3B,cACV1uB,GAAU1jB,EAAQ0jB,QAAU,GAAK,EACjC8uB,GAAWxyC,EAAQwyC,SAAW,GAAK,EACnCuE,EAAW/2C,EAAQ+2C,SAIzB,GAHA97B,KAAKshD,YAAuC,UAAxBv8D,EAAQ40C,YAA2B,IAAO,EAC9D35B,KAAK4iD,YAAczrB,EAAgB/vC,EAAMD,KAAKoB,MAAM4uC,EAAgB/vC,GAAO,IAErD,IAAlB+vC,GAAuBn3B,KAAK82B,YAAc,GAAK92B,KAAK+2B,YAAc,GAAtE,CAIA7xB,EAAImG,OAEJ,IAAMk4C,GAAavjD,KAAKg4B,WAAah4B,KAAKi4B,UAAY,EACtD/yB,EAAI8H,UAAU7lB,KAAK6I,IAAIuzD,GAAa96C,EAAQthB,KAAK4H,IAAIw0D,GAAa96C,GAClE,IACMg7C,EAAeh7C,GADT,EAAIthB,KAAK4H,IAAI5H,KAAK4B,IAAI7B,EAAIiwC,GAAiB,KAGvDjyB,EAAI2K,UAAY9qB,EAAQof,gBACxBe,EAAIqK,YAAcxqB,EAAQqf,YArL9B,SACEc,EACAgV,EACAzR,EACA8uB,EACAuE,GAEA,IAAO8mB,EAA0C1oC,EAA1C0oC,YAAa5qB,EAA6B9d,EAA7B8d,WAAYb,EAAiBjd,EAAjBid,cAC5Bc,EAAW/d,EAAQ+d,SACvB,GAAI2qB,EAAa,CACfvB,GAAQn8C,EAAKgV,EAASzR,EAAQ8uB,EAASU,EAAU6D,GACjD,IAAK,IAAIt4C,EAAI,EAAGA,EAAIo/D,IAAep/D,EACjC0hB,EAAIwI,OAED/kB,MAAMwuC,KACTc,EAAWD,GAAcb,EAAgB/vC,GAAOA,GAEnD,CACDi6D,GAAQn8C,EAAKgV,EAASzR,EAAQ8uB,EAASU,EAAU6D,GACjD52B,EAAIwI,MAEL,CAkKGg2C,CAAQx+C,EAAKlF,KAAMyjD,EAAclsB,EAASuE,GAC1CiW,GAAW7sC,EAAKlF,KAAMyjD,EAAclsB,EAASuE,GAE7C52B,EAAIuG,SAfH,CAgBF,OAhHkBw3C,CAAmBzc,ICxPxC,SAASmd,GAASz+C,EAAKngB,GAA0B,IAAjB+f,EAAiB,uDAAT/f,EACtCmgB,EAAI0+C,QAAUlhE,EAAeoiB,EAAMmc,eAAgBl8B,EAAQk8B,gBAC3D/b,EAAI2sC,YAAYnvD,EAAeoiB,EAAMoc,WAAYn8B,EAAQm8B,aACzDhc,EAAI4sC,eAAiBpvD,EAAeoiB,EAAMqc,iBAAkBp8B,EAAQo8B,kBACpEjc,EAAI49C,SAAWpgE,EAAeoiB,EAAMsc,gBAAiBr8B,EAAQq8B,iBAC7Dlc,EAAI4D,UAAYpmB,EAAeoiB,EAAM6I,YAAa5oB,EAAQ4oB,aAC1DzI,EAAIqK,YAAc7sB,EAAeoiB,EAAMV,YAAarf,EAAQqf,YAC7D,CAED,SAASmJ,GAAOrI,EAAKmJ,EAAU9pB,GAC7B2gB,EAAIqI,OAAOhpB,EAAOoB,EAAGpB,EAAOsB,EAC7B,CAcD,SAASg+D,GAASx2D,EAAQgyB,GAAsB,IAAbggB,EAAa,uDAAJ,CAAC,EACrC7xC,EAAQH,EAAO1J,OACrB,EAA6D07C,EAAtD50C,MAAOq5D,OAAd,MAA4B,EAA5B,IAA6DzkB,EAA9B30C,IAAKq5D,OAApC,MAAgDv2D,EAAQ,EAAxD,EACcw2D,EAAiC3kC,EAAxC50B,MAA0Bw5D,EAAc5kC,EAAnB30B,IACtBD,EAAQtD,KAAK6B,IAAI86D,EAAaE,GAC9Bt5D,EAAMvD,KAAK4B,IAAIg7D,EAAWE,GAC1BC,EAAUJ,EAAcE,GAAgBD,EAAYC,GAAgBF,EAAcG,GAAcF,EAAYE,EAElH,MAAO,CACLz2D,MAAAA,EACA/C,MAAAA,EACAid,KAAM2X,EAAQ3X,KACd3jB,KAAM2G,EAAMD,IAAUy5D,EAAU12D,EAAQ9C,EAAMD,EAAQC,EAAMD,EAE/D,CAiBD,SAAS05D,GAAYj/C,EAAK6J,EAAMsQ,EAASggB,GACvC,IAKI77C,EAAGsqB,EAAOmL,EALP5rB,EAAmB0hB,EAAnB1hB,OAAQtI,EAAWgqB,EAAXhqB,QACf,EAAmC8+D,GAASx2D,EAAQgyB,EAASggB,GAAtD7xC,EAAP,EAAOA,MAAO/C,EAAd,EAAcA,MAAOid,EAArB,EAAqBA,KAAM3jB,EAA3B,EAA2BA,KACrBqgE,EA9CR,SAAuBr/D,GACrB,OAAIA,EAAQs/D,QACHj2C,GAGLrpB,EAAQm0B,SAA8C,aAAnCn0B,EAAQ+zB,uBACtBtK,GAGFjB,EACR,CAoCoB+2C,CAAcv/D,GAEjC,EAA6Bs6C,GAAU,CAAC,EAAxC,IAAKvO,KAAAA,OAAL,SAAkBvtC,EAAlB,EAAkBA,QAGlB,IAAKC,EAAI,EAAGA,GAAKO,IAAQP,GACvBsqB,EAAQzgB,GAAQ5C,GAASlH,EAAUQ,EAAOP,EAAIA,IAAMgK,IAE1CqpB,OAGCia,GACT5rB,EAAIoI,OAAOQ,EAAMnoB,EAAGmoB,EAAMjoB,GAC1BirC,GAAO,GAEPszB,EAAWl/C,EAAK+T,EAAMnL,EAAOvqB,EAASwB,EAAQs/D,SAGhDprC,EAAOnL,GAQT,OALIpG,GAEF08C,EAAWl/C,EAAK+T,EADhBnL,EAAQzgB,GAAQ5C,GAASlH,EAAUQ,EAAO,IAAMyJ,GACnBjK,EAASwB,EAAQs/D,WAGvC38C,CACV,CAiBD,SAAS68C,GAAgBr/C,EAAK6J,EAAMsQ,EAASggB,GAC3C,IAKI77C,EAAGsqB,EAAO02C,EAAO7rB,EAAMF,EAAMgsB,EAL3Bp3D,EAAS0hB,EAAK1hB,OACpB,EAA6Bw2D,GAASx2D,EAAQgyB,EAASggB,GAAhD7xC,EAAP,EAAOA,MAAO/C,EAAd,EAAcA,MAAO1G,EAArB,EAAqBA,KACrB,EAA+Bs7C,GAAU,CAAC,EAA1C,IAAOvO,KAAAA,OAAP,SAAoBvtC,EAApB,EAAoBA,QAChBmhE,EAAO,EACPC,EAAS,EAGPC,EAAa,SAACzgE,GAAD,OAAYsG,GAASlH,EAAUQ,EAAOI,EAAQA,IAAUqJ,CAAxD,EACbq3D,EAAQ,WACRlsB,IAASF,IAEXvzB,EAAIqI,OAAOm3C,EAAMjsB,GACjBvzB,EAAIqI,OAAOm3C,EAAM/rB,GAGjBzzB,EAAIqI,OAAOm3C,EAAMD,GAEpB,EAOD,IALI3zB,IACFhjB,EAAQzgB,EAAOu3D,EAAW,IAC1B1/C,EAAIoI,OAAOQ,EAAMnoB,EAAGmoB,EAAMjoB,IAGvBrC,EAAI,EAAGA,GAAKO,IAAQP,EAGvB,KAFAsqB,EAAQzgB,EAAOu3D,EAAWphE,KAEhBqzB,KAAV,CAKA,IAAMlxB,EAAImoB,EAAMnoB,EACVE,EAAIioB,EAAMjoB,EACVi/D,EAAa,EAAJn/D,EAEXm/D,IAAWN,GAET3+D,EAAI8yC,EACNA,EAAO9yC,EACEA,EAAI4yC,IACbA,EAAO5yC,GAGT6+D,GAAQC,EAASD,EAAO/+D,KAAOg/D,IAE/BE,IAGA3/C,EAAIqI,OAAO5nB,EAAGE,GAEd2+D,EAAQM,EACRH,EAAS,EACThsB,EAAOF,EAAO5yC,GAGhB4+D,EAAQ5+D,CA1BP,CA4BHg/D,GACD,CAOD,SAASE,GAAkBh2C,GACzB,IAAMC,EAAOD,EAAKhqB,QACZm8B,EAAalS,EAAKkS,YAAclS,EAAKkS,WAAWv9B,OAEtD,OADqBorB,EAAKurB,aAAevrB,EAAKwV,QAAUvV,EAAKkK,SAA2C,aAAhClK,EAAK8J,yBAA0C9J,EAAKq1C,UAAYnjC,EACnHqjC,GAAkBJ,EACxC,SDyEoBlB,GAAAA,KAEP,eAFOA,GAAAA,WAID,CAChBtpB,YAAa,SACbv1B,YAAa,OACbgd,qBAAiBvuB,EACjB6tD,aAAc,EACd/yC,YAAa,EACblF,OAAQ,EACR8uB,QAAS,EACTvtC,WAAO6I,EACPipC,UAAU,YAbOmnB,GAAAA,gBAgBI,CACrB9+C,gBAAiB,oBC/CrB,IAAM6gD,GAA8B,oBAAXC,OAEzB,SAAS1iC,GAAKrd,EAAK6J,EAAMtkB,EAAO+C,GAC1Bw3D,KAAcj2C,EAAKhqB,QAAQs6B,QA7BjC,SAA6Bna,EAAK6J,EAAMtkB,EAAO+C,GAC7C,IAAI03D,EAAOn2C,EAAKo2C,MACXD,IACHA,EAAOn2C,EAAKo2C,MAAQ,IAAIF,OACpBl2C,EAAKm2C,KAAKA,EAAMz6D,EAAO+C,IACzB03D,EAAK73C,aAGTs2C,GAASz+C,EAAK6J,EAAKhqB,SACnBmgB,EAAI0I,OAAOs3C,EACZ,CAoBGE,CAAoBlgD,EAAK6J,EAAMtkB,EAAO+C,GAlB1C,SAA0B0X,EAAK6J,EAAMtkB,EAAO+C,GAC1C,IADiD,EAC1CuyB,EAAqBhR,EAArBgR,SAAUh7B,EAAWgqB,EAAXhqB,QACXsgE,EAAgBN,GAAkBh2C,GAFS,UAI3BgR,GAJ2B,IAIjD,IAAK,EAAL,qBAAgC,KAArBV,EAAqB,QAC9BskC,GAASz+C,EAAKngB,EAASs6B,EAAQva,OAC/BI,EAAIgI,YACAm4C,EAAcngD,EAAK6J,EAAMsQ,EAAS,CAAC50B,MAAAA,EAAOC,IAAKD,EAAQ+C,EAAQ,KACjE0X,EAAImI,YAENnI,EAAI0I,QACL,CAXgD,+BAYlD,CAQG03C,CAAiBpgD,EAAK6J,EAAMtkB,EAAO+C,EAEtC,KAEoB+3D,GAAAA,SAAAA,iCAoCnBxhD,SAAAA,EAAYmgB,GAAK,6BACf,gBAEKqW,UAAW,EAChB,EAAKx1C,aAAU8N,EACf,EAAKutB,YAASvtB,EACd,EAAK0xB,WAAQ1xB,EACb,EAAKqpC,eAAYrpC,EACjB,EAAKsyD,WAAQtyD,EACb,EAAK2yD,aAAU3yD,EACf,EAAK4yD,eAAY5yD,EACjB,EAAKynC,YAAa,EAClB,EAAKorB,gBAAiB,EACtB,EAAKnlC,mBAAgB1tB,EAEjBqxB,GACFniC,OAAO4M,QAAP5M,EAAAA,EAAAA,GAAAA,GAAoBmiC,GAhBP,CAkBhB,mDAED4W,SAAoBpM,EAAWrpB,GAC7B,IAAMtgB,EAAUib,KAAKjb,QACrB,IAAKA,EAAQm0B,SAA8C,aAAnCn0B,EAAQ+zB,0BAA2C/zB,EAAQs/D,UAAYrkD,KAAK0lD,eAAgB,CAClH,IAAMh+C,EAAO3iB,EAAQ8zB,SAAW7Y,KAAKukB,MAAQvkB,KAAKk8B,UAClDvjB,GAA2B3Y,KAAKwlD,QAASzgE,EAAS2pC,EAAWhnB,EAAMrC,GACnErF,KAAK0lD,gBAAiB,CACvB,CACF,qBASD,WACE,OAAO1lD,KAAKwlD,OACb,MATD,SAAWn4D,GACT2S,KAAKwlD,QAAUn4D,SACR2S,KAAKylD,iBACLzlD,KAAKmlD,MACZnlD,KAAK0lD,gBAAiB,CACvB,uBAMD,WACE,OAAO1lD,KAAKylD,YAAczlD,KAAKylD,U7BhF5B,SAA0B12C,EAAMmR,GACrC,IAAM7yB,EAAS0hB,EAAK1hB,OACdwrB,EAAW9J,EAAKhqB,QAAQ8zB,SACxBrrB,EAAQH,EAAO1J,OAErB,IAAK6J,EACH,MAAO,GAGT,IAAMka,IAASqH,EAAKwV,MACpB,EA3FF,SAAyBl3B,EAAQG,EAAOka,EAAMmR,GAC5C,IAAIpuB,EAAQ,EACRC,EAAM8C,EAAQ,EAElB,GAAIka,IAASmR,EAEX,KAAOpuB,EAAQ+C,IAAUH,EAAO5C,GAAOosB,MACrCpsB,IAKJ,KAAOA,EAAQ+C,GAASH,EAAO5C,GAAOosB,MACpCpsB,IAWF,IAPAA,GAAS+C,EAELka,IAEFhd,GAAOD,GAGFC,EAAMD,GAAS4C,EAAO3C,EAAM8C,GAAOqpB,MACxCnsB,IAMF,MAAO,CAACD,MAAAA,EAAOC,IAFfA,GAAO8C,EAGR,CA2DsBm4D,CAAgBt4D,EAAQG,EAAOka,EAAMmR,GAAnDpuB,EAAP,EAAOA,MAAOC,EAAd,EAAcA,IAEd,OACSu1B,GAAclR,GADN,IAAb8J,EACyB,CAAC,CAACpuB,MAAAA,EAAOC,IAAAA,EAAKgd,KAAAA,IArD7C,SAAuBra,EAAQ5C,EAAOzB,EAAK0e,GACzC,IAIIhd,EAJE8C,EAAQH,EAAO1J,OACf82B,EAAS,GACX/uB,EAAOjB,EACPwuB,EAAO5rB,EAAO5C,GAGlB,IAAKC,EAAMD,EAAQ,EAAGC,GAAO1B,IAAO0B,EAAK,CACvC,IAAM04B,EAAM/1B,EAAO3C,EAAM8C,GACrB41B,EAAIvM,MAAQuM,EAAIE,KACbrK,EAAKpC,OACRnP,GAAO,EACP+S,EAAOv0B,KAAK,CAACuE,MAAOA,EAAQ+C,EAAO9C,KAAMA,EAAM,GAAK8C,EAAOka,KAAAA,IAE3Djd,EAAQiB,EAAO03B,EAAIE,KAAO54B,EAAM,OAGlCgB,EAAOhB,EACHuuB,EAAKpC,OACPpsB,EAAQC,IAGZuuB,EAAOmK,CACR,CAMD,OAJa,OAAT13B,GACF+uB,EAAOv0B,KAAK,CAACuE,MAAOA,EAAQ+C,EAAO9C,IAAKgB,EAAO8B,EAAOka,KAAAA,IAGjD+S,CACR,CA4B4BmrC,CAAcv4D,EAAQ5C,EAFrCC,EAAMD,EAAQC,EAAM8C,EAAQ9C,IACjBqkB,EAAKmtB,WAAuB,IAAVzxC,GAAeC,IAAQ8C,EAAQ,GAJrBH,EAAQ6yB,EAM5D,C6B6D8C2lC,CAAiB7lD,KAAMA,KAAKjb,QAAQs6B,SAChF,sBAMDooB,WACE,IAAM1nB,EAAW/f,KAAK+f,SAChB1yB,EAAS2S,KAAK3S,OACpB,OAAO0yB,EAASp8B,QAAU0J,EAAO0yB,EAAS,GAAGt1B,MAC9C,qBAMDiB,WACE,IAAMq0B,EAAW/f,KAAK+f,SAChB1yB,EAAS2S,KAAK3S,OACdG,EAAQuyB,EAASp8B,OACvB,OAAO6J,GAASH,EAAO0yB,EAASvyB,EAAQ,GAAG9C,IAC5C,4BASDkW,SAAYkN,EAAOhlB,GACjB,IAAM/D,EAAUib,KAAKjb,QACfpD,EAAQmsB,EAAMhlB,GACduE,EAAS2S,KAAK3S,OACd0yB,EAAWD,GAAe9f,KAAM,CAAClX,SAAAA,EAAU2B,MAAO9I,EAAO+I,IAAK/I,IAEpE,GAAKo+B,EAASp8B,OAAd,CAIA,IAEIH,EAAGO,EAFD02B,EAAS,GACTqrC,EAvKV,SAAiC/gE,GAC/B,OAAIA,EAAQs/D,QACH1mC,GAGL54B,EAAQm0B,SAA8C,aAAnCn0B,EAAQ+zB,uBACtB8E,GAGFF,EACR,CA6JwBqoC,CAAwBhhE,GAE7C,IAAKvB,EAAI,EAAGO,EAAOg8B,EAASp8B,OAAQH,EAAIO,IAAQP,EAAG,CACjD,MAAqBu8B,EAASv8B,GAAvBiH,EAAP,EAAOA,MAAOC,EAAd,EAAcA,IACRiJ,EAAKtG,EAAO5C,GACZmJ,EAAKvG,EAAO3C,GAClB,GAAIiJ,IAAOC,EAAX,CAIA,IACMoyD,EAAeF,EAAanyD,EAAIC,EAD5BzM,KAAKa,KAAKrG,EAAQgS,EAAG7K,KAAc8K,EAAG9K,GAAY6K,EAAG7K,KAClB/D,EAAQs/D,SACrD2B,EAAal9D,GAAYglB,EAAMhlB,GAC/B2xB,EAAOv0B,KAAK8/D,EAJX,MAFCvrC,EAAOv0B,KAAKyN,EAOf,CACD,OAAyB,IAAlB8mB,EAAO92B,OAAe82B,EAAO,GAAKA,CAlBxC,CAmBF,4BAgBD0pC,SAAYj/C,EAAKma,EAASggB,GAExB,OADsB0lB,GAAkB/kD,KACjCqlD,CAAcngD,EAAKlF,KAAMqf,EAASggB,EAC1C,qBASD6lB,SAAKhgD,EAAKza,EAAO+C,GACf,IAAMuyB,EAAW/f,KAAK+f,SAChBslC,EAAgBN,GAAkB/kD,MACpC0H,EAAO1H,KAAKukB,MAEhB95B,EAAQA,GAAS,EACjB+C,EAAQA,GAAUwS,KAAK3S,OAAO1J,OAAS8G,EANjB,gBAQAs1B,GARA,IAQtB,IAAK,EAAL,qBAAgC,CAC9BrY,GAAQ29C,EAAcngD,EAAKlF,KADG,QACY,CAACvV,MAAAA,EAAOC,IAAKD,EAAQ+C,EAAQ,GACxE,CAVqB,+BAWtB,QAASka,CACV,qBASD6a,SAAKrd,EAAKwpB,EAAWjkC,EAAO+C,GAC1B,IAAMzI,EAAUib,KAAKjb,SAAW,CAAC,GAClBib,KAAK3S,QAAU,IAEnB1J,QAAUoB,EAAQ4oB,cAC3BzI,EAAImG,OAEJkX,GAAKrd,EAAKlF,KAAMvV,EAAO+C,GAEvB0X,EAAIuG,WAGFzL,KAAKu6B,WAEPv6B,KAAK0lD,gBAAiB,EACtB1lD,KAAKmlD,WAAQtyD,EAEhB,OAzMkB0yD,CAAoB/e,ICrOzC,SAAS3I,GAAQtgB,EAAkB7C,EAAa9sB,EAAiB+vC,GAC/D,IAAM54C,EAAUw4B,EAAGx4B,QACJpD,EAAS47B,EAAGihB,SAAS,CAAC5wC,GAAO+vC,GAApC/vC,GAER,OAAQzG,KAAKa,IAAI0yB,EAAM/4B,GAASoD,EAAQ+nB,OAAS/nB,EAAQkhE,SAC1D,SDgOoBV,GAAAA,KAEP,gBAFOA,GAAAA,WAOD,CAChBtkC,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBzT,YAAa,EACbwL,iBAAiB,EACjBL,uBAAwB,UACxBpL,MAAM,EACNmL,UAAU,EACVwrC,SAAS,EACTnrC,QAAS,YAlBQqsC,GAAAA,gBAwBI,CACrBphD,gBAAiB,kBACjBC,YAAa,wBA1BImhD,GAAAA,cA8BE,CACnBr+C,aAAa,EACbE,WAAY,SAACb,GAAD,MAAmB,eAATA,GAAkC,SAATA,CAAnC,QC5PK2/C,GAAAA,SAAAA,iCA6BnBniD,SAAAA,EAAYmgB,GAAK,6BACf,gBAEKn/B,aAAU8N,EACf,EAAK4jB,YAAS5jB,EACd,EAAKgkB,UAAOhkB,EACZ,EAAKywB,UAAOzwB,EAERqxB,GACFniC,OAAO4M,QAAP5M,EAAAA,EAAAA,GAAAA,GAAoBmiC,GATP,CAWhB,uCAED2Z,SAAQsoB,EAAgBC,EAAgBzoB,GACtC,IAAM54C,EAAUib,KAAKjb,QACrB,EAAeib,KAAKw+B,SAAS,CAAC,IAAK,KAAMb,GAAlCh4C,EAAP,EAAOA,EAAGE,EAAV,EAAUA,EACV,OAAQsB,KAAMmB,IAAI69D,EAASxgE,EAAG,GAAKwB,KAAKmB,IAAI89D,EAASvgE,EAAG,GAAMsB,KAAKmB,IAAIvD,EAAQkhE,UAAYlhE,EAAQ+nB,OAAQ,EAC5G,yBAEDu5C,SAASF,EAAgBxoB,GACvB,OAAOE,GAAQ79B,KAAMmmD,EAAQ,IAAKxoB,EACnC,yBAED2oB,SAASF,EAAgBzoB,GACvB,OAAOE,GAAQ79B,KAAMomD,EAAQ,IAAKzoB,EACnC,+BAEDW,SAAeX,GACb,MAAe39B,KAAKw+B,SAAS,CAAC,IAAK,KAAMb,GACzC,MAAO,CAACh4C,EADR,EAAOA,EACIE,EADX,EAAUA,EAEX,qBAEDkB,SAAKhC,GAEH,IAAI+nB,GADJ/nB,EAAUA,GAAWib,KAAKjb,SAAW,CAAC,GACjB+nB,QAAU,EAG/B,OAAgC,IAFhCA,EAAS3lB,KAAK6B,IAAI8jB,EAAQA,GAAU/nB,EAAQwhE,aAAe,KACvCz5C,GAAU/nB,EAAQ4oB,aAAe,GAEtD,qBAED4U,SAAKrd,EAA+B6I,GAClC,IAAMhpB,EAAUib,KAAKjb,QAEjBib,KAAK6W,MAAQ9xB,EAAQ+nB,OAAS,KAAQe,GAAe7N,KAAM+N,EAAM/N,KAAKjZ,KAAKhC,GAAW,KAI1FmgB,EAAIqK,YAAcxqB,EAAQqf,YAC1Bc,EAAI4D,UAAY/jB,EAAQ4oB,YACxBzI,EAAI2K,UAAY9qB,EAAQof,gBACxBkI,GAAUnH,EAAKngB,EAASib,KAAKra,EAAGqa,KAAKna,GACtC,yBAEDw3C,WACE,IAAMt4C,EAAUib,KAAKjb,SAAW,CAAC,EAEjC,OAAOA,EAAQ+nB,OAAS/nB,EAAQkhE,SACjC,OAtFkBC,CAAqB1f,ICL1C,SAASggB,GAAaC,EAAK9oB,GACzB,IAEIp1B,EAAMF,EAAOD,EAAKE,EAAQo+C,EAF9B,EAA6DD,EAAIjoB,SAAS,CAAC,IAAK,IAAK,OAAQ,QAAS,UAAWb,GAA1Gh4C,EAAP,EAAOA,EAAGE,EAAV,EAAUA,EAAGkmC,EAAb,EAAaA,KAAMviB,EAAnB,EAAmBA,MAAO4C,EAA1B,EAA0BA,OAkB1B,OAdIq6C,EAAItzB,YACNuzB,EAAOt6C,EAAS,EAChB7D,EAAOphB,KAAK4B,IAAIpD,EAAGomC,GACnB1jB,EAAQlhB,KAAK6B,IAAIrD,EAAGomC,GACpB3jB,EAAMviB,EAAI6gE,EACVp+C,EAASziB,EAAI6gE,IAGbn+C,EAAO5iB,GADP+gE,EAAOl9C,EAAQ,GAEfnB,EAAQ1iB,EAAI+gE,EACZt+C,EAAMjhB,KAAK4B,IAAIlD,EAAGkmC,GAClBzjB,EAASnhB,KAAK6B,IAAInD,EAAGkmC,IAGhB,CAACxjB,KAAAA,EAAMH,IAAAA,EAAKC,MAAAA,EAAOC,OAAAA,EAC3B,CAED,SAASq+C,GAAY9vC,EAAMl1B,EAAOoH,EAAKC,GACrC,OAAO6tB,EAAO,EAAI5rB,GAAYtJ,EAAOoH,EAAKC,EAC3C,CAkCD,SAAS49D,GAAcH,GACrB,IAAM99C,EAAS69C,GAAaC,GACtBj9C,EAAQb,EAAON,MAAQM,EAAOJ,KAC9B6D,EAASzD,EAAOL,OAASK,EAAOP,IAChCiB,EApCR,SAA0Bo9C,EAAKI,EAAMC,GACnC,IAAMnlE,EAAQ8kE,EAAI1hE,QAAQ4oB,YACpBkJ,EAAO4vC,EAAIvzB,cACXttC,EAAI8rB,GAAO/vB,GAEjB,MAAO,CACLkN,EAAG83D,GAAY9vC,EAAKzO,IAAKxiB,EAAEwiB,IAAK,EAAG0+C,GACnCr0D,EAAGk0D,GAAY9vC,EAAKxO,MAAOziB,EAAEyiB,MAAO,EAAGw+C,GACvC//D,EAAG6/D,GAAY9vC,EAAKvO,OAAQ1iB,EAAE0iB,OAAQ,EAAGw+C,GACzCz1D,EAAGs1D,GAAY9vC,EAAKtO,KAAM3iB,EAAE2iB,KAAM,EAAGs+C,GAExC,CAyBgBE,CAAiBN,EAAKj9C,EAAQ,EAAG4C,EAAS,GACnDU,EAxBR,SAA2B25C,EAAKI,EAAMC,GACpC,IAAOzzB,EAAsBozB,EAAIjoB,SAAS,CAAC,uBAApCnL,mBACD1xC,EAAQ8kE,EAAI1hE,QAAQ27D,aACpB96D,EAAI+rB,GAAchwB,GAClBqlE,EAAO7/D,KAAK4B,IAAI89D,EAAMC,GACtBjwC,EAAO4vC,EAAIvzB,cAIX+zB,EAAe5zB,GAAsBjxC,EAAST,GAEpD,MAAO,CACLivB,QAAS+1C,IAAaM,GAAgBpwC,EAAKzO,KAAOyO,EAAKtO,KAAM3iB,EAAEgrB,QAAS,EAAGo2C,GAC3Ej2C,SAAU41C,IAAaM,GAAgBpwC,EAAKzO,KAAOyO,EAAKxO,MAAOziB,EAAEmrB,SAAU,EAAGi2C,GAC9En2C,WAAY81C,IAAaM,GAAgBpwC,EAAKvO,QAAUuO,EAAKtO,KAAM3iB,EAAEirB,WAAY,EAAGm2C,GACpFl2C,YAAa61C,IAAaM,GAAgBpwC,EAAKvO,QAAUuO,EAAKxO,MAAOziB,EAAEkrB,YAAa,EAAGk2C,GAE1F,CAOgBxG,CAAkBiG,EAAKj9C,EAAQ,EAAG4C,EAAS,GAE1D,MAAO,CACL86C,MAAO,CACLvhE,EAAGgjB,EAAOJ,KACV1iB,EAAG8iB,EAAOP,IACVlV,EAAGsW,EACHlY,EAAG8a,EACHU,OAAAA,GAEF+1C,MAAO,CACLl9D,EAAGgjB,EAAOJ,KAAOc,EAAOhY,EACxBxL,EAAG8iB,EAAOP,IAAMiB,EAAOxa,EACvBqE,EAAGsW,EAAQH,EAAOhY,EAAIgY,EAAO5W,EAC7BnB,EAAG8a,EAAS/C,EAAOxa,EAAIwa,EAAOviB,EAC9BgmB,OAAQ,CACN8D,QAASzpB,KAAK6B,IAAI,EAAG8jB,EAAO8D,QAAUzpB,KAAK6B,IAAIqgB,EAAOxa,EAAGwa,EAAOhY,IAChE0f,SAAU5pB,KAAK6B,IAAI,EAAG8jB,EAAOiE,SAAW5pB,KAAK6B,IAAIqgB,EAAOxa,EAAGwa,EAAO5W,IAClEoe,WAAY1pB,KAAK6B,IAAI,EAAG8jB,EAAO+D,WAAa1pB,KAAK6B,IAAIqgB,EAAOviB,EAAGuiB,EAAOhY,IACtEyf,YAAa3pB,KAAK6B,IAAI,EAAG8jB,EAAOgE,YAAc3pB,KAAK6B,IAAIqgB,EAAOviB,EAAGuiB,EAAO5W,MAI/E,CAED,SAASorC,GAAQ4oB,EAAK9gE,EAAGE,EAAG83C,GAC1B,IAAMwpB,EAAc,OAANxhE,EACRyhE,EAAc,OAANvhE,EAER8iB,EAAS89C,KADEU,GAASC,IACSZ,GAAaC,EAAK9oB,GAErD,OAAOh1B,IACHw+C,GAASj8D,GAAWvF,EAAGgjB,EAAOJ,KAAMI,EAAON,UAC3C++C,GAASl8D,GAAWrF,EAAG8iB,EAAOP,IAAKO,EAAOL,QAC/C,CAWD,SAAS++C,GAAkBniD,EAAKuI,GAC9BvI,EAAIuI,KAAKA,EAAK9nB,EAAG8nB,EAAK5nB,EAAG4nB,EAAKva,EAAGua,EAAKnc,EACvC,CAED,SAASg2D,GAAY75C,EAAM85C,GAAsB,IAAdC,EAAc,uDAAJ,CAAC,EACtC7hE,EAAI8nB,EAAK9nB,IAAM6hE,EAAQ7hE,GAAK4hE,EAAS,EACrC1hE,EAAI4nB,EAAK5nB,IAAM2hE,EAAQ3hE,GAAK0hE,EAAS,EACrCr0D,GAAKua,EAAK9nB,EAAI8nB,EAAKva,IAAMs0D,EAAQ7hE,EAAI6hE,EAAQt0D,EAAIq0D,EAAS,GAAK5hE,EAC/D2L,GAAKmc,EAAK5nB,EAAI4nB,EAAKnc,IAAMk2D,EAAQ3hE,EAAI2hE,EAAQl2D,EAAIi2D,EAAS,GAAK1hE,EACrE,MAAO,CACLF,EAAG8nB,EAAK9nB,EAAIA,EACZE,EAAG4nB,EAAK5nB,EAAIA,EACZqN,EAAGua,EAAKva,EAAIA,EACZ5B,EAAGmc,EAAKnc,EAAIA,EACZwb,OAAQW,EAAKX,OAEhB,SDvHoBo5C,GAAAA,KAEP,iBAFOA,GAAAA,WAWD,CAChBv4C,YAAa,EACbs4C,UAAW,EACXrsB,iBAAkB,EAClB2sB,YAAa,EACb35C,WAAY,SACZE,OAAQ,EACRD,SAAU,YAlBOq5C,GAAAA,gBAwBI,CACrB/hD,gBAAiB,kBACjBC,YAAa,oBC+FIqjD,GAAAA,SAAAA,iCAuBnB1jD,SAAAA,EAAYmgB,GAAK,6BACf,gBAEKn/B,aAAU8N,EACf,EAAKsgC,gBAAatgC,EAClB,EAAKk5B,UAAOl5B,EACZ,EAAK2W,WAAQ3W,EACb,EAAKuZ,YAASvZ,EACd,EAAK8gC,mBAAgB9gC,EAEjBqxB,GACFniC,OAAO4M,QAAP5M,EAAAA,EAAAA,GAAAA,GAAoBmiC,GAXP,CAahB,oCAED3B,SAAKrd,GACH,IAlEe4H,EAkER6mB,EAA0D3zB,KAA1D2zB,cAAP,EAAiE3zB,KAA3Cjb,QAAUqf,EAAhC,EAAgCA,YAAaD,EAA7C,EAA6CA,gBAC7C,EAAuByiD,GAAc5mD,MAA9B6iD,EAAP,EAAOA,MAAOqE,EAAd,EAAcA,MACRQ,GApES56C,EAoEeo6C,EAAMp6C,QAnExB8D,SAAW9D,EAAOiE,UAAYjE,EAAO+D,YAAc/D,EAAOgE,YAmExBH,GAAqB02C,GAEnEniD,EAAImG,OAEA67C,EAAMh0D,IAAM2vD,EAAM3vD,GAAKg0D,EAAM51D,IAAMuxD,EAAMvxD,IAC3C4T,EAAIgI,YACJw6C,EAAYxiD,EAAKoiD,GAAYJ,EAAOvzB,EAAekvB,IACnD39C,EAAIgJ,OACJw5C,EAAYxiD,EAAKoiD,GAAYzE,GAAQlvB,EAAeuzB,IACpDhiD,EAAI2K,UAAYzL,EAChBc,EAAIwI,KAAK,YAGXxI,EAAIgI,YACJw6C,EAAYxiD,EAAKoiD,GAAYzE,EAAOlvB,IACpCzuB,EAAI2K,UAAY1L,EAChBe,EAAIwI,OAEJxI,EAAIuG,SACL,wBAEDoyB,SAAQsoB,EAAQC,EAAQzoB,GACtB,OAAOE,GAAQ79B,KAAMmmD,EAAQC,EAAQzoB,EACtC,yBAED0oB,SAASF,EAAQxoB,GACf,OAAOE,GAAQ79B,KAAMmmD,EAAQ,KAAMxoB,EACpC,yBAED2oB,SAASF,EAAQzoB,GACf,OAAOE,GAAQ79B,KAAM,KAAMomD,EAAQzoB,EACpC,+BAEDW,SAAeX,GACb,MAA0D39B,KAAKw+B,SAAS,CAAC,IAAK,IAAK,OAAQ,cAAeb,GAAnGh4C,EAAP,EAAOA,EAAGE,EAAV,EAAUA,EAAGkmC,EAAb,EAAaA,KAAMoH,EAAnB,EAAmBA,WACnB,MAAO,CACLxtC,EAAGwtC,GAAcxtC,EAAIomC,GAAQ,EAAIpmC,EACjCE,EAAGstC,EAAattC,GAAKA,EAAIkmC,GAAQ,EAEpC,yBAEDsR,SAASzvC,GACP,MAAgB,MAATA,EAAeoS,KAAKwJ,MAAQ,EAAIxJ,KAAKoM,OAAS,CACtD,OApFkBq7C,CAAmBjhB,YAAnBihB,GAAAA,KAEP,eAFOA,GAAAA,WAOD,CAChBv0B,cAAe,QACfvlB,YAAa,EACb+yC,aAAc,EACd/sB,cAAe,OACf/mB,gBAAY/Z,YAZK40D,GAAAA,gBAkBI,CACrBtjD,gBAAiB,kBACjBC,YAAa,gBC9GV,SAASujD,GAAW7+D,EAAU2+C,EAAO/7C,EAAMgc,GAChD,IAAIA,EAAJ,CAGA,IAAIjd,EAAQg9C,EAAM3+C,GACd4B,EAAMgB,EAAK5C,GAMf,MAJiB,UAAbA,IACF2B,EAAQF,GAAgBE,GACxBC,EAAMH,GAAgBG,IAEjB,CAAC5B,SAAAA,EAAU2B,MAAAA,EAAOC,IAAAA,EARxB,CASF,CAqBM,SAASk9D,GAAgBn9D,EAAOC,EAAK2C,GAC1C,KAAM3C,EAAMD,EAAOC,IAAO,CACxB,IAAMojB,EAAQzgB,EAAO3C,GACrB,IAAK/B,MAAMmlB,EAAMnoB,KAAOgD,MAAMmlB,EAAMjoB,GAClC,KAEH,CACD,OAAO6E,CACR,CAED,SAASm9D,GAAShhE,EAAGC,EAAG2qB,EAAMxuB,GAC5B,OAAI4D,GAAKC,EACA7D,EAAG4D,EAAE4qB,GAAO3qB,EAAE2qB,IAEhB5qB,EAAIA,EAAE4qB,GAAQ3qB,EAAIA,EAAE2qB,GAAQ,CACpC,CCnFM,SAASq2C,GAAoBC,EAAUh5C,GAC5C,IAAI1hB,EAAS,GACTk3B,GAAQ,EAUZ,OARI3iC,EAAQmmE,IACVxjC,GAAQ,EAERl3B,EAAS06D,GAET16D,EDwCG,SAA6B06D,EAAUh5C,GAC5C,MAA6Bg5C,GAAY,CAAC,EAA1C,IAAOpiE,EAAAA,OAAP,MAAW,KAAX,MAAiBE,EAAAA,OAAjB,MAAqB,KAArB,EACMmiE,EAAaj5C,EAAK1hB,OAClBA,EAAS,GAaf,OAZA0hB,EAAKgR,SAAS3zB,SAAQ,YAAkB,IAAhB3B,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAC7BA,EAAMk9D,GAAgBn9D,EAAOC,EAAKs9D,GAClC,IAAMvgB,EAAQugB,EAAWv9D,GACnBiB,EAAOs8D,EAAWt9D,GACd,OAAN7E,GACFwH,EAAOnH,KAAK,CAACP,EAAG8hD,EAAM9hD,EAAGE,EAAAA,IACzBwH,EAAOnH,KAAK,CAACP,EAAG+F,EAAK/F,EAAGE,EAAAA,KACT,OAANF,IACT0H,EAAOnH,KAAK,CAACP,EAAAA,EAAGE,EAAG4hD,EAAM5hD,IACzBwH,EAAOnH,KAAK,CAACP,EAAAA,EAAGE,EAAG6F,EAAK7F,IAE3B,IACMwH,CACR,CCzDY46D,CAAoBF,EAAUh5C,GAGlC1hB,EAAO1J,OAAS,IAAI4hE,GAAY,CACrCl4D,OAAAA,EACAtI,QAAS,CAACm0B,QAAS,GACnBqL,MAAAA,EACA2X,UAAW3X,IACR,IACN,CAEM,SAAS2jC,GAAiB7jE,GAC/B,OAAOA,IAA0B,IAAhBA,EAAOqpB,IACzB,CC5BM,SAASy6C,GAAehjE,EAAShB,EAAOikE,GAC7C,IAGI7jE,EAFAmpB,EADWvoB,EAAQhB,GACLupB,KACZ26C,EAAU,CAAClkE,GAGjB,IAAKikE,EACH,OAAO16C,EAGT,MAAgB,IAATA,IAA6C,IAA3B26C,EAAQxjE,QAAQ6oB,IAAc,CACrD,IAAKnrB,EAASmrB,GACZ,OAAOA,EAIT,KADAnpB,EAASY,EAAQuoB,IAEf,OAAO,EAGT,GAAInpB,EAAOyjB,QACT,OAAO0F,EAGT26C,EAAQniE,KAAKwnB,GACbA,EAAOnpB,EAAOmpB,IACf,CAED,OAAO,CACR,CAOM,SAAS46C,GAAYv5C,EAAM5qB,EAAOqJ,GAEvC,IAAMkgB,EAwER,SAAyBqB,GACvB,IAAMhqB,EAAUgqB,EAAKhqB,QACfwjE,EAAaxjE,EAAQ2oB,KACvBA,EAAOhrB,EAAe6lE,GAAcA,EAAWhkE,OAAQgkE,QAE9C11D,IAAT6a,IACFA,IAAS3oB,EAAQof,iBAGnB,IAAa,IAATuJ,GAA2B,OAATA,EACpB,OAAO,EAGT,IAAa,IAATA,EACF,MAAO,SAET,OAAOA,CACR,CAzFc86C,CAAgBz5C,GAE7B,GAAI3sB,EAASsrB,GACX,OAAO/kB,MAAM+kB,EAAK/rB,QAAiB+rB,EAGrC,IAAInpB,EAASxB,WAAW2qB,GAExB,OAAInrB,EAASgC,IAAW4C,KAAKoB,MAAMhE,KAAYA,EAOjD,SAA2BkkE,EAAStkE,EAAOI,EAAQiJ,GACjC,MAAZi7D,GAA+B,MAAZA,IACrBlkE,EAASJ,EAAQI,GAGnB,GAAIA,IAAWJ,GAASI,EAAS,GAAKA,GAAUiJ,EAC9C,OAAO,EAGT,OAAOjJ,CACR,CAhBUmkE,CAAkBh7C,EAAK,GAAIvpB,EAAOI,EAAQiJ,GAG5C,CAAC,SAAU,QAAS,MAAO,QAAS,SAAS3I,QAAQ6oB,IAAS,GAAKA,CAC3E,CCHD,SAASi7C,GAAet7D,EAAQu7D,EAAaC,GAE3C,IADA,IAAMC,EAAY,GACTpqD,EAAI,EAAGA,EAAImqD,EAAWllE,OAAQ+a,IAAK,CAC1C,IACA,EAA6BqqD,GADhBF,EAAWnqD,GACqBkqD,EAAa,KAAnDnhB,EAAP,EAAOA,MAAO/7C,EAAd,EAAcA,KAAMoiB,EAApB,EAAoBA,MAEpB,MAAKA,GAAU25B,GAAS/7C,GAGxB,GAAI+7C,EAGFqhB,EAAUE,QAAQl7C,QAGlB,GADAzgB,EAAOnH,KAAK4nB,IACPpiB,EAEH,KAGL,CACD2B,EAAOnH,KAAPmH,MAAAA,EAAey7D,EAChB,CAQD,SAASC,GAAUh6C,EAAM65C,EAAa9/D,GACpC,IAAMglB,EAAQiB,EAAKnO,YAAYgoD,EAAa9/D,GAC5C,IAAKglB,EACH,MAAO,CAAC,EAQV,IALA,IAAMm7C,EAAan7C,EAAMhlB,GACnBi3B,EAAWhR,EAAKgR,SAChBioC,EAAaj5C,EAAK1hB,OACpBo6C,GAAQ,EACR/7C,GAAO,EACFlI,EAAI,EAAGA,EAAIu8B,EAASp8B,OAAQH,IAAK,CACxC,IAAM67B,EAAUU,EAASv8B,GACnB0lE,EAAalB,EAAW3oC,EAAQ50B,OAAO3B,GACvCqgE,EAAYnB,EAAW3oC,EAAQ30B,KAAK5B,GAC1C,GAAIoC,GAAW+9D,EAAYC,EAAYC,GAAY,CACjD1hB,EAAQwhB,IAAeC,EACvBx9D,EAAOu9D,IAAeE,EACtB,KACD,CACF,CACD,MAAO,CAAC1hB,MAAAA,EAAO/7C,KAAAA,EAAMoiB,MAAAA,EACtB,KC1GYs7C,GAAAA,WACXrlD,SAAAA,EAAYiL,IAAM,eAChBhP,KAAKra,EAAIqpB,EAAKrpB,EACdqa,KAAKna,EAAImpB,EAAKnpB,EACdma,KAAK8M,OAASkC,EAAKlC,MACpB,2CAEDq3C,SAAYj/C,EAAKyD,EAAQqG,GACvB,IAAOrpB,EAAgBqa,KAAhBra,EAAGE,EAAama,KAAbna,EAAGinB,EAAU9M,KAAV8M,OAGb,OAFAnE,EAASA,GAAU,CAACle,MAAO,EAAGC,IAAKtD,GACnC8d,EAAIkI,IAAIznB,EAAGE,EAAGinB,EAAQnE,EAAOje,IAAKie,EAAOle,OAAO,IACxCukB,EAAKrG,MACd,4BAED/H,SAAYkN,GACV,IAAOnoB,EAAgBqa,KAAhBra,EAAGE,EAAama,KAAbna,EAAGinB,EAAU9M,KAAV8M,OACP9iB,EAAQ8jB,EAAM9jB,MACpB,MAAO,CACLrE,EAAGA,EAAIwB,KAAK6I,IAAIhG,GAAS8iB,EACzBjnB,EAAGA,EAAIsB,KAAK4H,IAAI/E,GAAS8iB,EACzB9iB,MAAAA,EAEH,OAtBUo/D,GCSN,SAAShzC,GAAW/xB,GACzB,IAAOue,EAAqBve,EAArBue,MAAO8K,EAAcrpB,EAAdqpB,KAAMqB,EAAQ1qB,EAAR0qB,KAEpB,GAAIxsB,EAASmrB,GACX,OAwBJ,SAAwB9K,EAAOze,GAC7B,IAAMiJ,EAAOwV,EAAMyoB,eAAelnC,GAElC,OADgBiJ,GAAQwV,EAAMy0B,iBAAiBlzC,GAC9BiJ,EAAKk9B,QAAU,IACjC,CA5BU++B,CAAezmD,EAAO8K,GAG/B,GAAa,UAATA,EACF,OFNG,SAAyBrpB,GAC9B,IAAO2hB,EAAsB3hB,EAAtB2hB,MAAO7hB,EAAeE,EAAfF,MAAO4qB,EAAQ1qB,EAAR0qB,KACf1hB,EAAS,GACT0yB,EAAWhR,EAAKgR,SAChBupC,EAAev6C,EAAK1hB,OACpBw7D,EAiBR,SAAuB7iD,EAAO7hB,GAI5B,IAHA,IAAMolE,EAAQ,GACRjf,EAAQtkC,EAAM8hB,wBAAwB,QAEnCtkC,EAAI,EAAGA,EAAI8mD,EAAM3mD,OAAQH,IAAK,CACrC,IAAM4J,EAAOk9C,EAAM9mD,GACnB,GAAI4J,EAAKjJ,QAAUA,EACjB,MAEGiJ,EAAKugC,QACR47B,EAAMP,QAAQ57D,EAAKk9B,QAEtB,CACD,OAAOi/B,CACR,CA/BoBC,CAAcxjD,EAAO7hB,GACxC0kE,EAAW3iE,KAAK4hE,GAAoB,CAACniE,EAAG,KAAME,EAAGmgB,EAAMsC,QAASyG,IAEhE,IAAK,IAAIvrB,EAAI,EAAGA,EAAIu8B,EAASp8B,OAAQH,IAEnC,IADA,IAAM67B,EAAUU,EAASv8B,GAChBkb,EAAI2gB,EAAQ50B,MAAOiU,GAAK2gB,EAAQ30B,IAAKgU,IAC5CiqD,GAAet7D,EAAQi8D,EAAa5qD,GAAImqD,GAG5C,OAAO,IAAItD,GAAY,CAACl4D,OAAAA,EAAQtI,QAAS,CAAC,GAC3C,CETU0kE,CAAgBplE,GAGzB,GAAa,UAATqpB,EACF,OAAO,EAGT,IAAMq6C,EAmBR,SAAyB1jE,GAGvB,IAFcA,EAAO2hB,OAAS,CAAC,GAErBo2B,yBACR,OAsBJ,SAAiC/3C,GAC/B,IAAO2hB,EAAe3hB,EAAf2hB,MAAO0H,EAAQrpB,EAARqpB,KACR3oB,EAAUihB,EAAMjhB,QAChBpB,EAASqiB,EAAM+mB,YAAYppC,OAC3B8G,EAAQ1F,EAAQxB,QAAUyiB,EAAMhd,IAAMgd,EAAMjd,IAC5CpH,EHuBD,SAAyB+rB,EAAM1H,EAAOusB,GAa3C,MAVa,UAAT7kB,EACM6kB,EACU,QAAT7kB,EACD1H,EAAMjhB,QAAQxB,QAAUyiB,EAAMjd,IAAMid,EAAMhd,IACzC5G,EAASsrB,GAEVA,EAAK/rB,MAELqkB,EAAMipC,cAGjB,CGrCeya,CAAgBh8C,EAAM1H,EAAOvb,GACrClG,EAAS,GAEf,GAAIQ,EAAQ8jB,KAAKizB,SAAU,CACzB,IAAMrH,EAASzuB,EAAMo2B,yBAAyB,EAAG3xC,GACjD,OAAO,IAAI2+D,GAAU,CACnBzjE,EAAG8uC,EAAO9uC,EACVE,EAAG4uC,EAAO5uC,EACVinB,OAAQ9G,EAAM41B,8BAA8Bj6C,IAE/C,CAED,IAAK,IAAI6B,EAAI,EAAGA,EAAIG,IAAUH,EAC5Be,EAAO2B,KAAK8f,EAAMo2B,yBAAyB54C,EAAG7B,IAEhD,OAAO4C,CACR,CA3CUolE,CAAwBtlE,GAEjC,OAIF,SAA+BA,GAC7B,MAA2BA,EAApB2hB,MAAAA,OAAP,MAAe,CAAC,EAAhB,EACM4F,EHqBD,SAAyB8B,EAAM1H,GACpC,IAAI4F,EAAQ,KAWZ,MAVa,UAAT8B,EACF9B,EAAQ5F,EAAMsC,OACI,QAAToF,EACT9B,EAAQ5F,EAAMoC,IACLhmB,EAASsrB,GAElB9B,EAAQ5F,EAAMhY,iBAAiB0f,EAAK/rB,OAC3BqkB,EAAMguB,eACfpoB,EAAQ5F,EAAMguB,gBAETpoB,CACR,CGlCeg+C,CADavlE,EAARqpB,KACiB1H,GAEpC,GAAIzjB,EAASqpB,GAAQ,CACnB,IAAMunB,EAAantB,EAAMiuB,eAEzB,MAAO,CACLtuC,EAAGwtC,EAAavnB,EAAQ,KACxB/lB,EAAGstC,EAAa,KAAOvnB,EAE1B,CAED,OAAO,IACR,CAlBQi+C,CAAsBxlE,EAC9B,CA1BkBylE,CAAgBzlE,GAEjC,OAAI0jE,aAAoBqB,GACfrB,EAGFD,GAAoBC,EAAUh5C,EACtC,CC9BM,SAASg7C,GAAU7kD,EAAK7gB,EAAQ0pB,GACrC,IAAMxpB,EAAS6xB,GAAW/xB,GACnB0qB,EAAqB1qB,EAArB0qB,KAAM/I,EAAe3hB,EAAf2hB,MAAOpY,EAAQvJ,EAARuJ,KACdo8D,EAAWj7C,EAAKhqB,QAChBwjE,EAAayB,EAASt8C,KACtBtN,EAAQ4pD,EAAS7lD,gBACvB,EAAuCokD,GAAc,CAAC,EAAtD,IAAO0B,MAAAA,OAAP,MAAe7pD,EAAf,MAAsBmpD,MAAAA,OAAtB,MAA8BnpD,EAA9B,EACI7b,GAAUwqB,EAAK1hB,OAAO1J,SACxBsqB,GAAS/I,EAAK6I,GAMlB,SAAgB7I,EAAKgf,GACnB,IAAOnV,EAA2CmV,EAA3CnV,KAAMxqB,EAAqC2/B,EAArC3/B,OAAQ0lE,EAA6B/lC,EAA7B+lC,MAAOV,EAAsBrlC,EAAtBqlC,MAAOx7C,EAAemW,EAAfnW,KAAM/H,EAASke,EAATle,MACnCld,EAAWimB,EAAKwV,MAAQ,QAAUL,EAAIt2B,KAE5CsX,EAAImG,OAEa,MAAbviB,GAAoBygE,IAAUU,IAChCC,GAAahlD,EAAK3gB,EAAQwpB,EAAK3F,KAC/BsF,GAAKxI,EAAK,CAAC6J,KAAAA,EAAMxqB,OAAAA,EAAQ6b,MAAO6pD,EAAOjkD,MAAAA,EAAOld,SAAAA,IAC9Coc,EAAIuG,UACJvG,EAAImG,OACJ6+C,GAAahlD,EAAK3gB,EAAQwpB,EAAKzF,SAEjCoF,GAAKxI,EAAK,CAAC6J,KAAAA,EAAMxqB,OAAAA,EAAQ6b,MAAOmpD,EAAOvjD,MAAAA,EAAOld,SAAAA,IAE9Coc,EAAIuG,SACL,CArBG0+C,CAAOjlD,EAAK,CAAC6J,KAAAA,EAAMxqB,OAAAA,EAAQ0lE,MAAAA,EAAOV,MAAAA,EAAOx7C,KAAAA,EAAM/H,MAAAA,EAAOpY,KAAAA,IACtDugB,GAAWjJ,GAEd,CAoBD,SAASglD,GAAahlD,EAAK3gB,EAAQ6lE,GACjC,IAAOrqC,EAAoBx7B,EAApBw7B,SAAU1yB,EAAU9I,EAAV8I,OACbo6C,GAAQ,EACR4iB,GAAW,EAEfnlD,EAAIgI,YALoC,gBAMlB6S,GANkB,IAMxC,IAAK,EAAL,qBAAgC,KAArBV,EAAqB,QACvB50B,EAAc40B,EAAd50B,MAAOC,EAAO20B,EAAP30B,IACRssB,EAAa3pB,EAAO5C,GACpBowC,EAAYxtC,EAAOu6D,GAAgBn9D,EAAOC,EAAK2C,IACjDo6C,GACFviC,EAAIoI,OAAO0J,EAAWrxB,EAAGqxB,EAAWnxB,GACpC4hD,GAAQ,IAERviC,EAAIqI,OAAOyJ,EAAWrxB,EAAGykE,GACzBllD,EAAIqI,OAAOyJ,EAAWrxB,EAAGqxB,EAAWnxB,KAEtCwkE,IAAa9lE,EAAO4/D,YAAYj/C,EAAKma,EAAS,CAACyR,KAAMu5B,KAEnDnlD,EAAImI,YAEJnI,EAAIqI,OAAOstB,EAAUl1C,EAAGykE,EAE3B,CAvBuC,+BAyBxCllD,EAAIqI,OAAOhpB,EAAOkjD,QAAQ9hD,EAAGykE,GAC7BllD,EAAImI,YACJnI,EAAIgJ,MACL,CAED,SAASR,GAAKxI,EAAKgf,GACjB,IADsB,EACfnV,EAAwCmV,EAAxCnV,KAAMxqB,EAAkC2/B,EAAlC3/B,OAAQuE,EAA0Bo7B,EAA1Bp7B,SAAUsX,EAAgB8jB,EAAhB9jB,MAAO4F,EAASke,EAATle,MAChC+Z,ENlED,SAAmBhR,EAAMxqB,EAAQuE,GACtC,IADgD,EAC1Ci3B,EAAWhR,EAAKgR,SAChB1yB,EAAS0hB,EAAK1hB,OACdi9D,EAAU/lE,EAAO8I,OACjBtH,EAAQ,GAJkC,UAM1Bg6B,GAN0B,IAMhD,IAAK,EAAL,qBAAgC,KAArBV,EAAqB,QACzB50B,EAAc40B,EAAd50B,MAAOC,EAAO20B,EAAP30B,IACZA,EAAMk9D,GAAgBn9D,EAAOC,EAAK2C,GAElC,IAAMsb,EAASg/C,GAAW7+D,EAAUuE,EAAO5C,GAAQ4C,EAAO3C,GAAM20B,EAAQ3X,MAExE,GAAKnjB,EAAOw7B,SAAZ,CAaA,IAnB8B,EAmBxBwqC,EAAiBzqC,GAAev7B,EAAQokB,GAnBhB,UAqBZ4hD,GArBY,IAqB9B,IAAK,EAAL,qBAAkC,OAAvBC,EAAuB,QAC1BC,EAAY9C,GAAW7+D,EAAUwhE,EAAQE,EAAI//D,OAAQ6/D,EAAQE,EAAI9/D,KAAM8/D,EAAI9iD,MAC3EgjD,EAActrC,GAAcC,EAAShyB,EAAQo9D,GAFnB,UAIPC,GAJO,IAIhC,IAAK,EAAL,qBAAsC,KAA3BC,EAA2B,QACpC5kE,EAAMG,KAAK,CACT7B,OAAQsmE,EACRpmE,OAAQimE,EACR//D,OAAO,UACJ3B,EAAW++D,GAASl/C,EAAQ8hD,EAAW,QAAStjE,KAAK6B,MAExD0B,KAAK,UACF5B,EAAW++D,GAASl/C,EAAQ8hD,EAAW,MAAOtjE,KAAK4B,OAGzD,CAf+B,+BAgBjC,CArC6B,+BAgB7B,MAPChD,EAAMG,KAAK,CACT7B,OAAQg7B,EACR96B,OAAQokB,EACRle,MAAO4C,EAAO5C,GACdC,IAAK2C,EAAO3C,IAyBjB,CA5C+C,+BA6ChD,OAAO3E,CACR,CMoBkB0/D,CAAU12C,EAAMxqB,EAAQuE,GAFnB,UAI+Bi3B,GAJ/B,IAItB,IAAK,EAAL,qBAA+D,eAA3C6qC,EAA2C,EAAnDvmE,OAAqBmmE,EAA8B,EAAtCjmE,OAAakG,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,IAC3C,EAAgDkgE,EAAzC9lD,MAAP,gBAA0C,CAAC,EAA3C,GAAeX,gBAAAA,OAAf,MAAiC/D,EAAjC,EACMyqD,GAAsB,IAAXtmE,EAEjB2gB,EAAImG,OACJnG,EAAI2K,UAAY1L,EAEhB2mD,GAAW5lD,EAAKc,EAAO6kD,GAAYlD,GAAW7+D,EAAU2B,EAAOC,IAE/Dwa,EAAIgI,YAEJ,IAAMm9C,IAAat7C,EAAKo1C,YAAYj/C,EAAK0lD,GAErCljD,OAAI,EACR,GAAImjD,EAAU,CACRR,EACFnlD,EAAImI,YAEJ09C,GAAmB7lD,EAAK3gB,EAAQmG,EAAK5B,GAGvC,IAAMkiE,IAAezmE,EAAO4/D,YAAYj/C,EAAKslD,EAAK,CAAC15B,KAAMu5B,EAAU9mE,SAAS,KAC5EmkB,EAAO2iD,GAAYW,IAEjBD,GAAmB7lD,EAAK3gB,EAAQkG,EAAO3B,EAE1C,CAEDoc,EAAImI,YACJnI,EAAIwI,KAAKhG,EAAO,UAAY,WAE5BxC,EAAIuG,SACL,CApCqB,+BAqCvB,CAED,SAASq/C,GAAW5lD,EAAKc,EAAO2C,GAC9B,MAAsB3C,EAAMpD,MAAM8rB,UAA3BtmB,EAAP,EAAOA,IAAKE,EAAZ,EAAYA,OACZ,EAA+BK,GAAU,CAAC,EAAnC7f,EAAP,EAAOA,SAAU2B,EAAjB,EAAiBA,MAAOC,EAAxB,EAAwBA,IACP,MAAb5B,IACFoc,EAAIgI,YACJhI,EAAIuI,KAAKhjB,EAAO2d,EAAK1d,EAAMD,EAAO6d,EAASF,GAC3ClD,EAAIgJ,OAEP,CAED,SAAS68C,GAAmB7lD,EAAK3gB,EAAQupB,EAAOhlB,GAC9C,IAAMmiE,EAAoB1mE,EAAOqc,YAAYkN,EAAOhlB,GAChDmiE,GACF/lD,EAAIqI,OAAO09C,EAAkBtlE,EAAGslE,EAAkBplE,EAErD,CC7GD,OAAe,CACbpE,GAAI,SAEJypE,oBAHa,SAGOtoD,EAAOuoD,EAAOpmE,GAChC,IAEIqI,EAAM5J,EAAGurB,EAAM1qB,EAFbmJ,GAASoV,EAAM+H,KAAKtG,UAAY,IAAI1gB,OACpCwB,EAAU,GAGhB,IAAK3B,EAAI,EAAGA,EAAIgK,IAAShK,EAGvBa,EAAS,MADT0qB,GADA3hB,EAAOwV,EAAMyoB,eAAe7nC,IAChB8mC,UAGAvb,EAAKhqB,SAAWgqB,aAAgBw2C,KAC1ClhE,EAAS,CACP2jB,QAASpF,EAAMy0B,iBAAiB7zC,GAChCW,MAAOX,EACPkqB,KAAM46C,GAAYv5C,EAAMvrB,EAAGgK,GAC3BoV,MAAAA,EACAhV,KAAMR,EAAK46B,WAAWjjC,QAAQsgB,UAC9BW,MAAO5Y,EAAKw6B,OACZ7Y,KAAAA,IAIJ3hB,EAAKg+D,QAAU/mE,EACfc,EAAQe,KAAK7B,GAGf,IAAKb,EAAI,EAAGA,EAAIgK,IAAShK,GACvBa,EAASc,EAAQ3B,MACc,IAAhBa,EAAOqpB,OAItBrpB,EAAOqpB,KAAOy6C,GAAehjE,EAAS3B,EAAGuB,EAAQqjE,WAEpD,EAEDiD,WAvCa,SAuCFzoD,EAAOuoD,EAAOpmE,GAIvB,IAHA,IAAMw9B,EAA4B,eAArBx9B,EAAQumE,SACfzkC,EAAWjkB,EAAM66B,+BACjB1vB,EAAOnL,EAAM8rB,UACVlrC,EAAIqjC,EAASljC,OAAS,EAAGH,GAAK,IAAKA,EAAG,CAC7C,IAAMa,EAASwiC,EAASrjC,GAAG4nE,QACtB/mE,IAILA,EAAO0qB,KAAK+rB,oBAAoB/sB,EAAM1pB,EAAOuJ,MACzC20B,GAAQl+B,EAAOqpB,MACjBq8C,GAAUnnD,EAAMsC,IAAK7gB,EAAQ0pB,GAEhC,CACF,EAEDw9C,mBAxDa,SAwDM3oD,EAAOuoD,EAAOpmE,GAC/B,GAAyB,uBAArBA,EAAQumE,SAKZ,IADA,IAAMzkC,EAAWjkB,EAAM66B,+BACdj6C,EAAIqjC,EAASljC,OAAS,EAAGH,GAAK,IAAKA,EAAG,CAC7C,IAAMa,EAASwiC,EAASrjC,GAAG4nE,QAEvBlD,GAAiB7jE,IACnB0lE,GAAUnnD,EAAMsC,IAAK7gB,EAAQue,EAAM8rB,UAEtC,CACF,EAED88B,kBAvEa,SAuEK5oD,EAAO1f,EAAM6B,GAC7B,IAAMV,EAASnB,EAAKkK,KAAKg+D,QAEpBlD,GAAiB7jE,IAAgC,sBAArBU,EAAQumE,UAIzCvB,GAAUnnD,EAAMsC,IAAK7gB,EAAQue,EAAM8rB,UACpC,EAEDpnB,SAAU,CACR8gD,WAAW,EACXkD,SAAU,sBCvERG,GAAa,SAACC,EAAW/Y,GAC7B,MAAkD+Y,EAA7CC,UAAAA,OAAL,MAAiBhZ,EAAjB,IAAkD+Y,EAAvBE,SAAAA,OAA3B,MAAsCjZ,EAAtC,EAOA,OALI+Y,EAAUG,gBACZF,EAAYxkE,KAAK4B,IAAI4iE,EAAWhZ,GAChCiZ,EAAWF,EAAUI,iBAAmB3kE,KAAK4B,IAAI6iE,EAAUjZ,IAGtD,CACLiZ,SAAAA,EACAD,UAAAA,EACAI,WAAY5kE,KAAK6B,IAAI2pD,EAAUgZ,GAElC,EAIYK,GAAAA,SAAAA,iCAKXjoD,SAAAA,EAAYwhB,GAAQ,6BAClB,gBAEK0mC,QAAS,EAGd,EAAKC,eAAiB,GAKtB,EAAKC,aAAe,KAGpB,EAAKC,cAAe,EAEpB,EAAKxpD,MAAQ2iB,EAAO3iB,MACpB,EAAK7d,QAAUwgC,EAAOxgC,QACtB,EAAKmgB,IAAMqgB,EAAOrgB,IAClB,EAAKmnD,iBAAcx5D,EACnB,EAAKy5D,iBAAcz5D,EACnB,EAAK05D,gBAAa15D,EAClB,EAAKopB,eAAYppB,EACjB,EAAK4c,cAAW5c,EAChB,EAAKuV,SAAMvV,EACX,EAAKyV,YAASzV,EACd,EAAK0V,UAAO1V,EACZ,EAAKwV,WAAQxV,EACb,EAAKuZ,YAASvZ,EACd,EAAK2W,WAAQ3W,EACb,EAAKq2C,cAAWr2C,EAChB,EAAK0qC,cAAW1qC,EAChB,EAAKwN,YAASxN,EACd,EAAKgtC,cAAWhtC,EAjCE,CAkCnB,sCAEDgyB,SAAOpV,EAAUwM,EAAWD,GAC1Bhc,KAAKyP,SAAWA,EAChBzP,KAAKic,UAAYA,EACjBjc,KAAKkpC,SAAWltB,EAEhBhc,KAAK6qC,gBACL7qC,KAAKwsD,cACLxsD,KAAK+rC,KACN,8BAEDlB,WACM7qC,KAAKi0B,gBACPj0B,KAAKwJ,MAAQxJ,KAAKyP,SAClBzP,KAAKuI,KAAOvI,KAAKkpC,SAAS3gC,KAC1BvI,KAAKqI,MAAQrI,KAAKwJ,QAElBxJ,KAAKoM,OAASpM,KAAKic,UACnBjc,KAAKoI,IAAMpI,KAAKkpC,SAAS9gC,IACzBpI,KAAKsI,OAAStI,KAAKoM,OAEtB,4BAEDogD,WAAc,WACNd,EAAY1rD,KAAKjb,QAAQ+nC,QAAU,CAAC,EACtCu/B,EAAcnqE,EAAKwpE,EAAU1xB,eAAgB,CAACh6B,KAAK4C,OAAQ5C,OAAS,GAEpE0rD,EAAUz2C,SACZo3C,EAAcA,EAAYp3C,QAAO,SAACjuB,GAAD,OAAU0kE,EAAUz2C,OAAOjuB,EAAM,EAAK4b,MAAM+H,KAA5C,KAG/B+gD,EAAU15B,OACZq6B,EAAcA,EAAYr6B,MAAK,SAACnrC,EAAGC,GAAJ,OAAU4kE,EAAU15B,KAAKnrC,EAAGC,EAAG,EAAK8b,MAAM+H,KAA1C,KAG7B3K,KAAKjb,QAAQxB,SACf8oE,EAAY9oE,UAGdyc,KAAKqsD,YAAcA,CACpB,oBAEDtgB,WACE,IAAOhnD,EAAgBib,KAAhBjb,QAASmgB,EAAOlF,KAAPkF,IAMhB,GAAKngB,EAAQyjB,QAAb,CAKA,IAMIgB,EAAO4C,EANLs/C,EAAY3mE,EAAQ+nC,OACpB2/B,EAAY56C,GAAO65C,EAAU9mD,MAC7B+tC,EAAW8Z,EAAU1lE,KACrBumD,EAActtC,KAAK0sD,sBACzB,EAA+BjB,GAAWC,EAAW/Y,GAA9CiZ,EAAP,EAAOA,SAAUG,EAAjB,EAAiBA,WAIjB7mD,EAAIN,KAAO6nD,EAAU3hD,OAEjB9K,KAAKi0B,gBACPzqB,EAAQxJ,KAAKyP,SACbrD,EAASpM,KAAK2sD,SAASrf,EAAaqF,EAAUiZ,EAAUG,GAAc,KAEtE3/C,EAASpM,KAAKic,UACdzS,EAAQxJ,KAAK4sD,SAAStf,EAAamf,EAAWb,EAAUG,GAAc,IAGxE/rD,KAAKwJ,MAAQriB,KAAK4B,IAAIygB,EAAOzkB,EAAQ0qB,UAAYzP,KAAKyP,UACtDzP,KAAKoM,OAASjlB,KAAK4B,IAAIqjB,EAAQrnB,EAAQk3B,WAAajc,KAAKic,UArBxD,MAFCjc,KAAKwJ,MAAQxJ,KAAKoM,OAAS,CAwB9B,yBAKDugD,SAASrf,EAAaqF,EAAUiZ,EAAUG,GACxC,IAAO7mD,EAA+ClF,KAA/CkF,IAAKuK,EAA0CzP,KAA1CyP,SAA6BtH,EAAanI,KAAhCjb,QAAU+nC,OAAS3kB,QACnC0kD,EAAW7sD,KAAKksD,eAAiB,GAEjCK,EAAavsD,KAAKusD,WAAa,CAAE,GACjCxnD,EAAagnD,EAAa5jD,EAC5B2kD,EAAcxf,EAElBpoC,EAAI4K,UAAY,OAChB5K,EAAI6K,aAAe,SAEnB,IAAIg9C,GAAO,EACP3kD,GAAOrD,EAgBX,OAfA/E,KAAKqsD,YAAYjgE,SAAQ,SAAC8tC,EAAY12C,GACpC,IAAM66B,EAAYutC,EAAYjZ,EAAW,EAAKztC,EAAI8F,YAAYkvB,EAAWxwB,MAAMF,OAErE,IAANhmB,GAAW+oE,EAAWA,EAAW5oE,OAAS,GAAK06B,EAAY,EAAIlW,EAAUsH,KAC3Eq9C,GAAe/nD,EACfwnD,EAAWA,EAAW5oE,QAAUH,EAAI,EAAI,EAAI,IAAM,EAClD4kB,GAAOrD,EACPgoD,KAGFF,EAASrpE,GAAK,CAAC+kB,KAAM,EAAGH,IAAAA,EAAK2kD,IAAAA,EAAKvjD,MAAO6U,EAAWjS,OAAQ2/C,GAE5DQ,EAAWA,EAAW5oE,OAAS,IAAM06B,EAAYlW,CAClD,IAEM2kD,CACR,yBAEDF,SAAStf,EAAamf,EAAWb,EAAUoB,GACzC,IAAO9nD,EAAgDlF,KAAhDkF,IAAK+W,EAA2Cjc,KAA3Cic,UAA8B9T,EAAanI,KAAhCjb,QAAU+nC,OAAS3kB,QACpC0kD,EAAW7sD,KAAKksD,eAAiB,GACjCI,EAActsD,KAAKssD,YAAc,GACjCW,EAAchxC,EAAYqxB,EAE5B4f,EAAa/kD,EACbglD,EAAkB,EAClBC,EAAmB,EAEnB7kD,EAAO,EACP8kD,EAAM,EAyBV,OAvBArtD,KAAKqsD,YAAYjgE,SAAQ,SAAC8tC,EAAY12C,GACpC,MA8VN,SAA2BooE,EAAUa,EAAWvnD,EAAKg1B,EAAY8yB,GAC/D,IAAM3uC,EAKR,SAA4B6b,EAAY0xB,EAAUa,EAAWvnD,GAC3D,IAAIooD,EAAiBpzB,EAAWxwB,KAC5B4jD,GAA4C,kBAAnBA,IAC3BA,EAAiBA,EAAepqC,QAAO,SAACr8B,EAAGC,GAAJ,OAAUD,EAAElD,OAASmD,EAAEnD,OAASkD,EAAIC,CAApC,KAEzC,OAAO8kE,EAAYa,EAAU1lE,KAAO,EAAKme,EAAI8F,YAAYsiD,GAAgB9jD,KAC1E,CAXmB+jD,CAAmBrzB,EAAY0xB,EAAUa,EAAWvnD,GAChE6mD,EAYR,SAA6BiB,EAAa9yB,EAAYszB,GACpD,IAAIzB,EAAaiB,EACc,kBAApB9yB,EAAWxwB,OACpBqiD,EAAa0B,GAA0BvzB,EAAYszB,IAErD,OAAOzB,CACR,CAlBoB2B,CAAoBV,EAAa9yB,EAAYuyB,EAAU1nD,YAC1E,MAAO,CAACsZ,UAAAA,EAAW0tC,WAAAA,EACpB,CAlWqC4B,CAAkB/B,EAAUa,EAAWvnD,EAAKg1B,EAAY8yB,GAAjF3uC,EAAP,EAAOA,UAAW0tC,EAAlB,EAAkBA,WAGdvoE,EAAI,GAAK4pE,EAAmBrB,EAAa,EAAI5jD,EAAU8kD,IACzDC,GAAcC,EAAkBhlD,EAChCmkD,EAAYpmE,KAAK,CAACsjB,MAAO2jD,EAAiB/gD,OAAQghD,IAClD7kD,GAAQ4kD,EAAkBhlD,EAC1BklD,IACAF,EAAkBC,EAAmB,GAIvCP,EAASrpE,GAAK,CAAC+kB,KAAAA,EAAMH,IAAKglD,EAAkBC,IAAAA,EAAK7jD,MAAO6U,EAAWjS,OAAQ2/C,GAG3EoB,EAAkBhmE,KAAK6B,IAAImkE,EAAiB9uC,GAC5C+uC,GAAoBrB,EAAa5jD,CAClC,IAED+kD,GAAcC,EACdb,EAAYpmE,KAAK,CAACsjB,MAAO2jD,EAAiB/gD,OAAQghD,IAE3CF,CACR,+BAEDU,WACE,GAAK5tD,KAAKjb,QAAQyjB,QAAlB,CAGA,IAAM8kC,EAActtC,KAAK0sD,sBACFG,EAAsD7sD,KAAtEksD,eAAP,EAA6ElsD,KAA5Cjb,QAAUkI,EAA3C,EAA2CA,MAAgBkb,EAA3D,EAAkD2kB,OAAS3kB,QACrD0lD,EAAY9vC,GADlB,EAAqEC,IAChChe,KAAKuI,KAAMvI,KAAKwJ,OACrD,GAAIxJ,KAAKi0B,eAAgB,CACvB,IADuB,EACnB84B,EAAM,EACNxkD,EAAOrb,GAAeD,EAAO+S,KAAKuI,KAAOJ,EAASnI,KAAKqI,MAAQrI,KAAKusD,WAAWQ,IAF5D,UAGFF,GAHE,IAGvB,IAAK,EAAL,qBAA+B,KAApBiB,EAAoB,QACzBf,IAAQe,EAAOf,MACjBA,EAAMe,EAAOf,IACbxkD,EAAOrb,GAAeD,EAAO+S,KAAKuI,KAAOJ,EAASnI,KAAKqI,MAAQrI,KAAKusD,WAAWQ,KAEjFe,EAAO1lD,KAAOpI,KAAKoI,IAAMklC,EAAcnlC,EACvC2lD,EAAOvlD,KAAOslD,EAAUzvC,WAAWyvC,EAAUloE,EAAE4iB,GAAOulD,EAAOtkD,OAC7DjB,GAAQulD,EAAOtkD,MAAQrB,CACxB,CAXsB,+BAYxB,KAAM,CACL,IADK,EACDklD,EAAM,EACNjlD,EAAMlb,GAAeD,EAAO+S,KAAKoI,IAAMklC,EAAcnlC,EAASnI,KAAKsI,OAAStI,KAAKssD,YAAYe,GAAKjhD,QAFjG,UAGgBygD,GAHhB,IAGL,IAAK,EAAL,qBAA+B,KAApBiB,EAAoB,QACzBA,EAAOT,MAAQA,IACjBA,EAAMS,EAAOT,IACbjlD,EAAMlb,GAAeD,EAAO+S,KAAKoI,IAAMklC,EAAcnlC,EAASnI,KAAKsI,OAAStI,KAAKssD,YAAYe,GAAKjhD,SAEpG0hD,EAAO1lD,IAAMA,EACb0lD,EAAOvlD,MAAQvI,KAAKuI,KAAOJ,EAC3B2lD,EAAOvlD,KAAOslD,EAAUzvC,WAAWyvC,EAAUloE,EAAEmoE,EAAOvlD,MAAOulD,EAAOtkD,OACpEpB,GAAO0lD,EAAO1hD,OAASjE,CACxB,CAZI,+BAaN,CA7BA,CA8BF,6BAED8rB,WACE,MAAiC,QAA1Bj0B,KAAKjb,QAAQw4C,UAAgD,WAA1Bv9B,KAAKjb,QAAQw4C,QACxD,qBAEDhb,WACE,GAAIviB,KAAKjb,QAAQyjB,QAAS,CACxB,IAAMtD,EAAMlF,KAAKkF,IACjB+I,GAAS/I,EAAKlF,MAEdA,KAAK+tD,QAEL5/C,GAAWjJ,EACZ,CACF,sBAKD6oD,WAAQ,IASFC,EATE,OACUh/C,EAAsChP,KAA/Cjb,QAAeunE,EAAgCtsD,KAAhCssD,YAAaC,EAAmBvsD,KAAnBusD,WAAYrnD,EAAOlF,KAAPkF,IACxCjY,EAA4B+hB,EAA5B/hB,MAAey+D,EAAa18C,EAArB8d,OACRmhC,EAAe3mD,GAASlH,MACxBytD,EAAY9vC,GAAc/O,EAAKgP,IAAKhe,KAAKuI,KAAMvI,KAAKwJ,OACpDijD,EAAY56C,GAAO65C,EAAU9mD,MAC5BuD,EAAWujD,EAAXvjD,QACDwqC,EAAW8Z,EAAU1lE,KACrBmnE,EAAevb,EAAW,EAGhC3yC,KAAKkyC,YAGLhtC,EAAI4K,UAAY+9C,EAAU/9C,UAAU,QACpC5K,EAAI6K,aAAe,SACnB7K,EAAI4D,UAAY,GAChB5D,EAAIN,KAAO6nD,EAAU3hD,OAErB,MAA0C2gD,GAAWC,EAAW/Y,GAAzDiZ,EAAP,EAAOA,SAAUD,EAAjB,EAAiBA,UAAWI,EAA5B,EAA4BA,WAyEtB93B,EAAej0B,KAAKi0B,eACpBqZ,EAActtC,KAAK0sD,sBAEvBsB,EADE/5B,EACO,CACPtuC,EAAGuH,GAAeD,EAAO+S,KAAKuI,KAAOJ,EAASnI,KAAKqI,MAAQkkD,EAAW,IACtE1mE,EAAGma,KAAKoI,IAAMD,EAAUmlC,EACxBv+B,KAAM,GAGC,CACPppB,EAAGqa,KAAKuI,KAAOJ,EACftiB,EAAGqH,GAAeD,EAAO+S,KAAKoI,IAAMklC,EAAcnlC,EAASnI,KAAKsI,OAASgkD,EAAY,GAAGlgD,QACxF2C,KAAM,GAIVyP,GAAsBxe,KAAKkF,IAAK8J,EAAKm/C,eAErC,IAAMppD,EAAagnD,EAAa5jD,EAChCnI,KAAKqsD,YAAYjgE,SAAQ,SAAC8tC,EAAY12C,GACpC0hB,EAAIqK,YAAc2qB,EAAWD,UAC7B/0B,EAAI2K,UAAYqqB,EAAWD,UAE3B,IAAMlvB,EAAY7F,EAAI8F,YAAYkvB,EAAWxwB,MAAMF,MAC7CsG,EAAY+9C,EAAU/9C,UAAUoqB,EAAWpqB,YAAcoqB,EAAWpqB,UAAY47C,EAAU57C,YAC1FtG,EAAQoiD,EAAWsC,EAAenjD,EACpCplB,EAAIqoE,EAAOroE,EACXE,EAAImoE,EAAOnoE,EAyBf,GAvBAgoE,EAAU3vC,SAAS,EAAK1U,OAEpByqB,EACEzwC,EAAI,GAAKmC,EAAI6jB,EAAQrB,EAAU,EAAKE,QACtCxiB,EAAImoE,EAAOnoE,GAAKkf,EAChBipD,EAAOj/C,OACPppB,EAAIqoE,EAAOroE,EAAIuH,GAAeD,EAAO,EAAKsb,KAAOJ,EAAS,EAAKE,MAAQkkD,EAAWyB,EAAOj/C,QAElFvrB,EAAI,GAAKqC,EAAIkf,EAAa,EAAKuD,SACxC3iB,EAAIqoE,EAAOroE,EAAIA,EAAI2mE,EAAY0B,EAAOj/C,MAAMvF,MAAQrB,EACpD6lD,EAAOj/C,OACPlpB,EAAImoE,EAAOnoE,EAAIqH,GAAeD,EAAO,EAAKmb,IAAMklC,EAAcnlC,EAAS,EAAKG,OAASgkD,EAAY0B,EAAOj/C,MAAM3C,SA9G5F,SAASzmB,EAAGE,EAAGq0C,GACnC,KAAIvxC,MAAMijE,IAAaA,GAAY,GAAKjjE,MAAMgjE,IAAcA,EAAY,GAAxE,CAKAzmD,EAAImG,OAEJ,IAAMvC,EAAYpmB,EAAew3C,EAAWpxB,UAAW,GAUvD,GATA5D,EAAI2K,UAAYntB,EAAew3C,EAAWrqB,UAAWo+C,GACrD/oD,EAAI0+C,QAAUlhE,EAAew3C,EAAW0pB,QAAS,QACjD1+C,EAAI4sC,eAAiBpvD,EAAew3C,EAAW4X,eAAgB,GAC/D5sC,EAAI49C,SAAWpgE,EAAew3C,EAAW4oB,SAAU,SACnD59C,EAAI4D,UAAYA,EAChB5D,EAAIqK,YAAc7sB,EAAew3C,EAAW3qB,YAAa0+C,GAEzD/oD,EAAI2sC,YAAYnvD,EAAew3C,EAAWk0B,SAAU,KAEhD1C,EAAUG,cAAe,CAG3B,IAAMwC,EAAc,CAClBvhD,OAAQ6+C,EAAYxkE,KAAKmnE,MAAQ,EACjC1hD,WAAYstB,EAAWttB,WACvBC,SAAUqtB,EAAWrtB,SACrBc,YAAa7E,GAETywB,EAAUs0B,EAAU1vC,MAAMx4B,EAAGimE,EAAW,GAI9Ct/C,GAAgBpH,EAAKmpD,EAAa90B,EAHlB1zC,EAAIqoE,EAGgCxC,EAAUI,iBAAmBF,EAClF,KAAM,CAGL,IAAM2C,EAAU1oE,EAAIsB,KAAK6B,KAAK2pD,EAAWgZ,GAAa,EAAG,GACnD6C,EAAWX,EAAUzvC,WAAWz4B,EAAGimE,GACnClL,EAAe/uC,GAAcuoB,EAAWwmB,cAE9Cx7C,EAAIgI,YAEAnrB,OAAOwgB,OAAOm+C,GAActK,MAAK1wD,SAAAA,GAAAA,OAAW,IAANA,CAALA,IACnCirB,GAAmBzL,EAAK,CACtBvf,EAAG6oE,EACH3oE,EAAG0oE,EACHr7D,EAAG04D,EACHt6D,EAAGq6D,EACH7+C,OAAQ4zC,IAGVx7C,EAAIuI,KAAK+gD,EAAUD,EAAS3C,EAAUD,GAGxCzmD,EAAIwI,OACc,IAAd5E,GACF5D,EAAI0I,QAEP,CAED1I,EAAIuG,SAxDH,CAyDF,CAuDCgjD,CAFcZ,EAAUloE,EAAEA,GAELE,EAAGq0C,GAExBv0C,EzD3VgB,SAACsH,EAAoCsb,EAAcF,EAAe2V,GAEtF,OAAO/wB,KADO+wB,EAAM,OAAS,SACJ3V,EAAkB,WAAVpb,GAAsBsb,EAAOF,GAAS,EAAIE,EyDyVnEmmD,CAAO5+C,EAAWnqB,EAAIimE,EAAWsC,EAAcj6B,EAAetuC,EAAI6jB,EAAQ,EAAKnB,MAAO2G,EAAKgP,KAvDhF,SAASr4B,EAAGE,EAAGq0C,GAC9BprB,GAAW5J,EAAKg1B,EAAWxwB,KAAM/jB,EAAGE,EAAKkmE,EAAa,EAAIU,EAAW,CACnEz8C,cAAekqB,EAAWvM,OAC1B7d,UAAW+9C,EAAU/9C,UAAUoqB,EAAWpqB,YAE7C,CAqDCJ,CAASm+C,EAAUloE,EAAEA,GAAIE,EAAGq0C,GAExBjG,EACF+5B,EAAOroE,GAAK6jB,EAAQrB,OACf,GAA+B,kBAApB+xB,EAAWxwB,KAAmB,CAC9C,IAAM8jD,EAAiBf,EAAU1nD,WACjCipD,EAAOnoE,GAAK4nE,GAA0BvzB,EAAYszB,EACnD,MACCQ,EAAOnoE,GAAKkf,CAEf,IAED+Z,GAAqB9e,KAAKkF,IAAK8J,EAAKm/C,cACrC,0BAKDjc,WACE,IAAMljC,EAAOhP,KAAKjb,QACZqoD,EAAYp+B,EAAKvF,MACjBklD,EAAY98C,GAAOu7B,EAAUxoC,MAC7BgqD,EAAeh9C,GAAUw7B,EAAUjlC,SAEzC,GAAKilC,EAAU5kC,QAAf,CAIA,IAKI3iB,EALEgoE,EAAY9vC,GAAc/O,EAAKgP,IAAKhe,KAAKuI,KAAMvI,KAAKwJ,OACpDtE,EAAMlF,KAAKkF,IACXq4B,EAAW6P,EAAU7P,SACrB2wB,EAAeS,EAAU5nE,KAAO,EAChC8nE,EAA6BD,EAAaxmD,IAAM8lD,EAKlD3lD,EAAOvI,KAAKuI,KACZkH,EAAWzP,KAAKwJ,MAEpB,GAAIxJ,KAAKi0B,eAEPxkB,EAAWtoB,KAAK6B,IAAL7B,MAAAA,MAAI,OAAQ6Y,KAAKusD,aAC5B1mE,EAAIma,KAAKoI,IAAMymD,EACftmD,EAAOrb,GAAe8hB,EAAK/hB,MAAOsb,EAAMvI,KAAKqI,MAAQoH,OAChD,CAEL,IAAMwM,EAAYjc,KAAKssD,YAAYppC,QAAO,SAACC,EAAKp8B,GAAN,OAAeI,KAAK6B,IAAIm6B,EAAKp8B,EAAKqlB,OAAlC,GAA2C,GACrFvmB,EAAIgpE,EAA6B3hE,GAAe8hB,EAAK/hB,MAAO+S,KAAKoI,IAAKpI,KAAKsI,OAAS2T,EAAYjN,EAAK8d,OAAO3kB,QAAUnI,KAAK0sD,sBAC5H,CAID,IAAM/mE,EAAIuH,GAAeqwC,EAAUh1B,EAAMA,EAAOkH,GAGhDvK,EAAI4K,UAAY+9C,EAAU/9C,UAAU9iB,GAAmBuwC,IACvDr4B,EAAI6K,aAAe,SACnB7K,EAAIqK,YAAc69B,EAAUhtC,MAC5B8E,EAAI2K,UAAYu9B,EAAUhtC,MAC1B8E,EAAIN,KAAO+pD,EAAU7jD,OAErBgE,GAAW5J,EAAKkoC,EAAU1jC,KAAM/jB,EAAGE,EAAG8oE,EApCrC,CAqCF,oCAKDjC,WACE,IAAMtf,EAAYptC,KAAKjb,QAAQ0kB,MACzBklD,EAAY98C,GAAOu7B,EAAUxoC,MAC7BgqD,EAAeh9C,GAAUw7B,EAAUjlC,SACzC,OAAOilC,EAAU5kC,QAAUmmD,EAAU5pD,WAAa6pD,EAAaxiD,OAAS,CACzE,iCAKD0iD,SAAiBnpE,EAAGE,GAClB,IAAIrC,EAAGurE,EAAQC,EAEf,GAAI9jE,GAAWvF,EAAGqa,KAAKuI,KAAMvI,KAAKqI,QAC7Bnd,GAAWrF,EAAGma,KAAKoI,IAAKpI,KAAKsI,QAGhC,IADA0mD,EAAKhvD,KAAKksD,eACL1oE,EAAI,EAAGA,EAAIwrE,EAAGrrE,SAAUH,EAG3B,GAAI0H,GAAWvF,GAFfopE,EAASC,EAAGxrE,IAEa+kB,KAAMwmD,EAAOxmD,KAAOwmD,EAAOvlD,QAC/Cte,GAAWrF,EAAGkpE,EAAO3mD,IAAK2mD,EAAO3mD,IAAM2mD,EAAO3iD,QAEjD,OAAOpM,KAAKqsD,YAAY7oE,GAK9B,OAAO,IACR,4BAMDyrE,SAAY1lE,GACV,IAAMylB,EAAOhP,KAAKjb,QAClB,GAoDJ,SAAoBjD,EAAMktB,GACxB,IAAc,cAATltB,GAAiC,aAATA,KAAyBktB,EAAKrJ,SAAWqJ,EAAKkgD,SACzE,OAAO,EAET,GAAIlgD,EAAKpJ,UAAqB,UAAT9jB,GAA6B,YAATA,GACvC,OAAO,EAET,OAAO,CACR,CA5DQqtE,CAAW5lE,EAAEzH,KAAMktB,GAAxB,CAKA,IAhfgBnoB,EAAGC,EAgfbsoE,EAAcpvD,KAAK8uD,iBAAiBvlE,EAAE5D,EAAG4D,EAAE1D,GAEjD,GAAe,cAAX0D,EAAEzH,MAAmC,aAAXyH,EAAEzH,KAAqB,CACnD,IAAMusB,EAAWrO,KAAKmsD,aAChBkD,GApfWvoE,EAofqBsoE,EApfT,QAAfvoE,EAofcwnB,IApfe,OAANvnB,GAAcD,EAAE3C,eAAiB4C,EAAE5C,cAAgB2C,EAAE1C,QAAU2C,EAAE3C,OAqflGkqB,IAAaghD,GACfntE,EAAK8sB,EAAKkgD,QAAS,CAAC3lE,EAAG8kB,EAAUrO,MAAOA,MAG1CA,KAAKmsD,aAAeiD,EAEhBA,IAAgBC,GAClBntE,EAAK8sB,EAAKrJ,QAAS,CAACpc,EAAG6lE,EAAapvD,MAAOA,KAE9C,MAAUovD,GACTltE,EAAK8sB,EAAKpJ,QAAS,CAACrc,EAAG6lE,EAAapvD,MAAOA,KAlB5C,CAoBF,OA/fUgsD,CAAexlB,IAwhB5B,SAASinB,GAA0BvzB,EAAYszB,GAE7C,OAAOA,GADatzB,EAAWxwB,KAAOwwB,EAAWxwB,KAAK/lB,OAAS,GAAM,EAEtE,CAYD,OAAe,CACblC,GAAI,SAMJ6tE,SAAUtD,GAEVvhE,MATa,SASPmY,EAAOuoD,EAAOpmE,GAClB,IAAMg1C,EAASn3B,EAAMm3B,OAAS,IAAIiyB,GAAO,CAAC9mD,IAAKtC,EAAMsC,IAAKngB,QAAAA,EAAS6d,MAAAA,IACnEw8B,GAAkBx8B,EAAOm3B,EAAQh1C,GACjCq6C,GAAex8B,EAAOm3B,EACvB,EAEDzW,KAfa,SAeR1gB,GACHw8B,GAAkBx8B,EAAOA,EAAMm3B,eACxBn3B,EAAMm3B,MACd,EAKD2Q,aAvBa,SAuBA9nC,EAAOuoD,EAAOpmE,GACzB,IAAMg1C,EAASn3B,EAAMm3B,OACrBqF,GAAkBx8B,EAAOm3B,EAAQh1C,GACjCg1C,EAAOh1C,QAAUA,CAClB,EAIDknD,YA/Ba,SA+BDrpC,GACV,IAAMm3B,EAASn3B,EAAMm3B,OACrBA,EAAOyyB,cACPzyB,EAAO6zB,gBACR,EAGD2B,WAtCa,SAsCF3sD,EAAO1f,GACXA,EAAKy8D,QACR/8C,EAAMm3B,OAAOk1B,YAAY/rE,EAAK03B,MAEjC,EAEDtT,SAAU,CACRkB,SAAS,EACT+0B,SAAU,MACVtwC,MAAO,SACP4yC,UAAU,EACVt8C,SAAS,EACT8c,OAAQ,IAGRuF,QATQ,SASArc,EAAG2wC,EAAYH,GACrB,IAAM51C,EAAQ+1C,EAAWh2C,aACnBsrE,EAAKz1B,EAAOn3B,MACd4sD,EAAGn4B,iBAAiBlzC,IACtBqrE,EAAGvnD,KAAK9jB,GACR+1C,EAAWvM,QAAS,IAEpB6hC,EAAG1nD,KAAK3jB,GACR+1C,EAAWvM,QAAS,EAEvB,EAEDhoB,QAAS,KACTupD,QAAS,KAETpiC,OAAQ,CACN1sB,MAAO,SAAC8E,GAAD,OAASA,EAAItC,MAAM7d,QAAQqb,KAA3B,EACPwrD,SAAU,GACVzjD,QAAS,GAYT6xB,eAfM,SAeSp3B,GACb,IAAMyB,EAAWzB,EAAM+H,KAAKtG,SAC5B,EAA+FzB,EAAMm3B,OAAOh1C,QAArG+nC,OAAS++B,EAAhB,EAAgBA,cAAej/C,EAA/B,EAA+BA,WAAYkD,EAA3C,EAA2CA,UAAW1P,EAAtD,EAAsDA,MAAOqvD,EAA7D,EAA6DA,gBAAiB/O,EAA9E,EAA8EA,aAE9E,OAAO99C,EAAMkkB,yBAAyBxiC,KAAI,SAAC8I,GACzC,IAAM0X,EAAQ1X,EAAK46B,WAAWvK,SAASouC,EAAgB,OAAIh5D,GACrD8a,EAAciE,GAAU9M,EAAM6I,aAEpC,MAAO,CACLjE,KAAMrF,EAASjX,EAAKjJ,OAAOiqC,MAC3Bve,UAAW/K,EAAMX,gBACjB81B,UAAW75B,EACXutB,QAASvgC,EAAK4a,QACd47C,QAAS9+C,EAAMmc,eACfmtC,SAAUtpD,EAAMoc,WAChB4wB,eAAgBhtC,EAAMqc,iBACtB2hC,SAAUh+C,EAAMsc,gBAChBtY,WAAY6E,EAAYnE,MAAQmE,EAAYvB,QAAU,EACtDmD,YAAazK,EAAMV,YACnBwI,WAAYA,GAAc9H,EAAM8H,WAChCC,SAAU/H,EAAM+H,SAChBiD,UAAWA,GAAahL,EAAMgL,UAC9B4wC,aAAc+O,IAAoB/O,GAAgB57C,EAAM47C,cAGxDx8D,aAAckJ,EAAKjJ,MAEtB,GAAE6b,KACJ,GAGHyJ,MAAO,CACLrJ,MAAO,SAAC8E,GAAD,OAASA,EAAItC,MAAM7d,QAAQqb,KAA3B,EACPoI,SAAS,EACT+0B,SAAU,SACV7zB,KAAM,KAIVjG,YAAa,CACXyD,YAAa,SAACX,GAAD,OAAWA,EAAKY,WAAW,KAA3B,EACb2lB,OAAQ,CACN5lB,YAAa,SAACX,GAAD,OAAW,CAAC,iBAAkB,SAAU,QAAQhD,SAASgD,EAAzD,KCtsBNmpD,GAAAA,SAAAA,iCAIX3rD,SAAAA,EAAYwhB,GAAQ,6BAClB,gBAEK3iB,MAAQ2iB,EAAO3iB,MACpB,EAAK7d,QAAUwgC,EAAOxgC,QACtB,EAAKmgB,IAAMqgB,EAAOrgB,IAClB,EAAKyqD,cAAW98D,EAChB,EAAKuV,SAAMvV,EACX,EAAKyV,YAASzV,EACd,EAAK0V,UAAO1V,EACZ,EAAKwV,WAAQxV,EACb,EAAK2W,WAAQ3W,EACb,EAAKuZ,YAASvZ,EACd,EAAK0qC,cAAW1qC,EAChB,EAAKwN,YAASxN,EACd,EAAKgtC,cAAWhtC,EAfE,CAgBnB,sCAEDgyB,SAAOpV,EAAUwM,GACf,IAAMjN,EAAOhP,KAAKjb,QAKlB,GAHAib,KAAKuI,KAAO,EACZvI,KAAKoI,IAAM,EAEN4G,EAAKxG,QAAV,CAKAxI,KAAKwJ,MAAQxJ,KAAKqI,MAAQoH,EAC1BzP,KAAKoM,OAASpM,KAAKsI,OAAS2T,EAE5B,IAAM80B,EAAYnvD,EAAQotB,EAAKtF,MAAQsF,EAAKtF,KAAK/lB,OAAS,EAC1Dqc,KAAK2vD,SAAW/9C,GAAU5C,EAAK7G,SAC/B,IAAMynD,EAAW7e,EAAYl/B,GAAO7C,EAAKpK,MAAMG,WAAa/E,KAAK2vD,SAASvjD,OAEtEpM,KAAKi0B,eACPj0B,KAAKoM,OAASwjD,EAEd5vD,KAAKwJ,MAAQomD,CAZd,MAFC5vD,KAAKwJ,MAAQxJ,KAAKoM,OAASpM,KAAKqI,MAAQrI,KAAKsI,OAAS,CAgBzD,6BAED2rB,WACE,IAAMvZ,EAAM1a,KAAKjb,QAAQw4C,SACzB,MAAe,QAAR7iB,GAAyB,WAARA,CACzB,0BAEDm1C,SAAUpnD,GACR,IAGIgH,EAAU0iC,EAAQC,EAHfhqC,EAAqCpI,KAArCoI,IAAKG,EAAgCvI,KAAhCuI,KAAMD,EAA0BtI,KAA1BsI,OAAQD,EAAkBrI,KAAlBqI,MAAOtjB,EAAWib,KAAXjb,QAC3BkI,EAAQlI,EAAQkI,MAClB4f,EAAW,EAmBf,OAhBI7M,KAAKi0B,gBACPke,EAASjlD,GAAeD,EAAOsb,EAAMF,GACrC+pC,EAAShqC,EAAMK,EACfgH,EAAWpH,EAAQE,IAEM,SAArBxjB,EAAQw4C,UACV4U,EAAS5pC,EAAOE,EAChB2pC,EAASllD,GAAeD,EAAOqb,EAAQF,GACvCyE,GAAiB,GAAN3lB,IAEXirD,EAAS9pC,EAAQI,EACjB2pC,EAASllD,GAAeD,EAAOmb,EAAKE,GACpCuE,EAAgB,GAAL3lB,GAEbuoB,EAAWnH,EAASF,GAEf,CAAC+pC,OAAAA,EAAQC,OAAAA,EAAQ3iC,SAAAA,EAAU5C,SAAAA,EACnC,qBAED0V,WACE,IAAMrd,EAAMlF,KAAKkF,IACX8J,EAAOhP,KAAKjb,QAElB,GAAKiqB,EAAKxG,QAAV,CAIA,IAAMsnD,EAAWj+C,GAAO7C,EAAKpK,MAEvB6D,EADaqnD,EAAS/qD,WACA,EAAI/E,KAAK2vD,SAASvnD,IAC9C,EAA6CpI,KAAK6vD,UAAUpnD,GAArD0pC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,OAAQ3iC,EAAvB,EAAuBA,SAAU5C,EAAjC,EAAiCA,SAEjCiC,GAAW5J,EAAK8J,EAAKtF,KAAM,EAAG,EAAGomD,EAAU,CACzC1vD,MAAO4O,EAAK5O,MACZqP,SAAAA,EACA5C,SAAAA,EACAiD,UAAW9iB,GAAmBgiB,EAAK/hB,OACnC8iB,aAAc,SACdH,YAAa,CAACuiC,EAAQC,IAbvB,CAeF,OAlGUsd,CAAclpB,IAiH3B,OAAe,CACb/kD,GAAI,QAMJ6tE,SAAUI,GAEVjlE,MATa,SASPmY,EAAOuoD,EAAOpmE,IArBtB,SAAqB6d,EAAOwqC,GAC1B,IAAM3jC,EAAQ,IAAIimD,GAAM,CACtBxqD,IAAKtC,EAAMsC,IACXngB,QAASqoD,EACTxqC,MAAAA,IAGFw8B,GAAkBx8B,EAAO6G,EAAO2jC,GAChChO,GAAex8B,EAAO6G,GACtB7G,EAAMmtD,WAAatmD,CACpB,CAYGumD,CAAYptD,EAAO7d,EACpB,EAEDu+B,KAba,SAaR1gB,GACH,IAAMmtD,EAAantD,EAAMmtD,WACzB3wB,GAAkBx8B,EAAOmtD,UAClBntD,EAAMmtD,UACd,EAEDrlB,aAnBa,SAmBA9nC,EAAOuoD,EAAOpmE,GACzB,IAAM0kB,EAAQ7G,EAAMmtD,WACpB3wB,GAAkBx8B,EAAO6G,EAAO1kB,GAChC0kB,EAAM1kB,QAAUA,CACjB,EAEDuiB,SAAU,CACRra,MAAO,SACPub,SAAS,EACT5D,KAAM,CACJvE,OAAQ,QAEVw/B,UAAU,EACV13B,QAAS,GACTo1B,SAAU,MACV7zB,KAAM,GACNrJ,OAAQ,KAGV8yC,cAAe,CACb/yC,MAAO,SAGTqD,YAAa,CACXyD,aAAa,EACbE,YAAY,ICnJV6oD,ICbM,IAAIC,QDaI,CAIlBC,QAJkB,SAIV7jE,GACN,IAAKA,EAAM3I,OACT,OAAO,EAGT,IAAIH,EAAGC,EACHkC,EAAI,EACJE,EAAI,EACJ2H,EAAQ,EAEZ,IAAKhK,EAAI,EAAGC,EAAM6I,EAAM3I,OAAQH,EAAIC,IAAOD,EAAG,CAC5C,IAAM+5B,EAAKjxB,EAAM9I,GAAG02B,QACpB,GAAIqD,GAAMA,EAAGmpB,WAAY,CACvB,IAAMhsB,EAAM6C,EAAGkpB,kBACf9gD,GAAK+0B,EAAI/0B,EACTE,GAAK60B,EAAI70B,IACP2H,CACH,CACF,CAED,MAAO,CACL7H,EAAGA,EAAI6H,EACP3H,EAAGA,EAAI2H,EAEV,EAKDsxC,QAjCkB,SAiCVxyC,EAAO8jE,GACb,IAAK9jE,EAAM3I,OACT,OAAO,EAGT,IAGIH,EAAGC,EAAK4sE,EAHR1qE,EAAIyqE,EAAczqE,EAClBE,EAAIuqE,EAAcvqE,EAClBw4C,EAAc/7C,OAAOiF,kBAGzB,IAAK/D,EAAI,EAAGC,EAAM6I,EAAM3I,OAAQH,EAAIC,IAAOD,EAAG,CAC5C,IAAM+5B,EAAKjxB,EAAM9I,GAAG02B,QACpB,GAAIqD,GAAMA,EAAGmpB,WAAY,CACvB,IACMx1C,EAAI/G,GAAsBimE,EADjB7yC,EAAG+gB,kBAGdptC,EAAImtC,IACNA,EAAcntC,EACdm/D,EAAiB9yC,EAEpB,CACF,CAED,GAAI8yC,EAAgB,CAClB,IAAMC,EAAKD,EAAe5pB,kBAC1B9gD,EAAI2qE,EAAG3qE,EACPE,EAAIyqE,EAAGzqE,CACR,CAED,MAAO,CACLF,EAAAA,EACAE,EAAAA,EAEH,IAIH,SAAS0qE,GAAaxkC,EAAMykC,GAU1B,OATIA,IACE5uE,EAAQ4uE,GAEV3uE,MAAMG,UAAUkE,KAAK9C,MAAM2oC,EAAMykC,GAEjCzkC,EAAK7lC,KAAKsqE,IAIPzkC,CACR,CAQD,SAAS0kC,GAAclqE,GACrB,OAAoB,kBAARA,GAAoBA,aAAemqE,SAAWnqE,EAAI1B,QAAQ,OAAS,EACtE0B,EAAIP,MAAM,MAEZO,CACR,CASD,SAASoqE,GAAkB/tD,EAAO5b,GAChC,IAAOkzB,EAAgClzB,EAAhCkzB,QAASh2B,EAAuB8C,EAAvB9C,aAAcC,EAAS6C,EAAT7C,MACxB6jC,EAAaplB,EAAMyoB,eAAennC,GAAc8jC,WACtD,EAAuBA,EAAWmG,iBAAiBhqC,GAA5CiqC,EAAP,EAAOA,MAAOzsC,EAAd,EAAcA,MAEd,MAAO,CACLihB,MAAAA,EACAwrB,MAAAA,EACA3X,OAAQuR,EAAWmF,UAAUhpC,GAC7B2qC,IAAKlsB,EAAM+H,KAAKtG,SAASngB,GAAcymB,KAAKxmB,GAC5CysE,eAAgBjvE,EAChB2oC,QAAStC,EAAWuC,aACpBsE,UAAW1qC,EACXD,aAAAA,EACAg2B,QAAAA,EAEH,CAKD,SAAS22C,GAAeC,EAAS/rE,GAC/B,IAAMmgB,EAAM4rD,EAAQluD,MAAMsC,IACnB6rD,EAAuBD,EAAvBC,KAAMC,EAAiBF,EAAjBE,OAAQvnD,EAASqnD,EAATrnD,MACdmiD,EAAuB7mE,EAAvB6mE,SAAUD,EAAa5mE,EAAb4mE,UACXsF,EAAWp/C,GAAO9sB,EAAQksE,UAC1BtC,EAAY98C,GAAO9sB,EAAQ4pE,WAC3BuC,EAAar/C,GAAO9sB,EAAQmsE,YAC5BC,EAAiB1nD,EAAM9lB,OACvBytE,EAAkBJ,EAAOrtE,OACzB0tE,EAAoBN,EAAKptE,OAEzBwkB,EAAUyJ,GAAU7sB,EAAQojB,SAC9BiE,EAASjE,EAAQiE,OACjB5C,EAAQ,EAGR8nD,EAAqBP,EAAK7tC,QAAO,SAAC11B,EAAO+jE,GAAR,OAAqB/jE,EAAQ+jE,EAASC,OAAO7tE,OAAS4tE,EAAStiD,MAAMtrB,OAAS4tE,EAASE,MAAM9tE,MAA7F,GAAqG,IAC1I2tE,GAAsBR,EAAQY,WAAW/tE,OAASmtE,EAAQa,UAAUhuE,OAEhEwtE,IACF/kD,GAAU+kD,EAAiBxC,EAAU5pD,YACnCosD,EAAiB,GAAKpsE,EAAQ6sE,aAC/B7sE,EAAQ8sE,mBAEPP,KAGFllD,GAAUilD,GADatsE,EAAQ+sE,cAAgB3qE,KAAK6B,IAAI2iE,EAAWsF,EAASlsD,YAAcksD,EAASlsD,aAEjGusD,EAAqBD,GAAqBJ,EAASlsD,YACnDusD,EAAqB,GAAKvsE,EAAQgtE,aAElCX,IACFhlD,GAAUrnB,EAAQitE,gBACjBZ,EAAkBF,EAAWnsD,YAC5BqsD,EAAkB,GAAKrsE,EAAQktE,eAInC,IAAIC,EAAe,EACbC,EAAe,SAASpjD,GAC5BvF,EAAQriB,KAAK6B,IAAIwgB,EAAOtE,EAAI8F,YAAY+D,GAAMvF,MAAQ0oD,EACvD,EA+BD,OA7BAhtD,EAAImG,OAEJnG,EAAIN,KAAO+pD,EAAU7jD,OACrBznB,EAAKytE,EAAQrnD,MAAO0oD,GAGpBjtD,EAAIN,KAAOqsD,EAASnmD,OACpBznB,EAAKytE,EAAQY,WAAW3/B,OAAO++B,EAAQa,WAAYQ,GAGnDD,EAAentE,EAAQ+sE,cAAiBlG,EAAW,EAAI7mE,EAAQo7C,WAAc,EAC7E98C,EAAK0tE,GAAM,SAACQ,GACVluE,EAAKkuE,EAASC,OAAQW,GACtB9uE,EAAKkuE,EAAStiD,MAAOkjD,GACrB9uE,EAAKkuE,EAASE,MAAOU,EACtB,IAGDD,EAAe,EAGfhtD,EAAIN,KAAOssD,EAAWpmD,OACtBznB,EAAKytE,EAAQE,OAAQmB,GAErBjtD,EAAIuG,UAKG,CAACjC,MAFRA,GAASrB,EAAQqB,MAEF4C,OAAAA,EAChB,CAyBD,SAASgmD,GAAgBxvD,EAAO7d,EAASgC,EAAMsrE,GAC7C,IAAO1sE,EAAYoB,EAAZpB,EAAG6jB,EAASziB,EAATyiB,MACI8oD,EAAwC1vD,EAA/C4G,MAAP,EAAsD5G,EAA5B8rB,UAAYnmB,EAAtC,EAAsCA,KAAMF,EAA5C,EAA4CA,MACxCkqD,EAAS,SAcb,MAZe,WAAXF,EACFE,EAAS5sE,IAAM4iB,EAAOF,GAAS,EAAI,OAAS,QACnC1iB,GAAK6jB,EAAQ,EACtB+oD,EAAS,OACA5sE,GAAK2sE,EAAa9oD,EAAQ,IACnC+oD,EAAS,SAtBb,SAA6BA,EAAQ3vD,EAAO7d,EAASgC,GACnD,IAAOpB,EAAYoB,EAAZpB,EAAG6jB,EAASziB,EAATyiB,MACJgpD,EAAQztE,EAAQ0tE,UAAY1tE,EAAQ2tE,aAC1C,MAAe,SAAXH,GAAqB5sE,EAAI6jB,EAAQgpD,EAAQ5vD,EAAM4G,OAIpC,UAAX+oD,GAAsB5sE,EAAI6jB,EAAQgpD,EAAQ,QAA9C,CAGD,CAeKG,CAAoBJ,EAAQ3vD,EAAO7d,EAASgC,KAC9CwrE,EAAS,UAGJA,CACR,CAKD,SAASK,GAAmBhwD,EAAO7d,EAASgC,GAC1C,IAAMsrE,EAAStrE,EAAKsrE,QAAUttE,EAAQstE,QA/CxC,SAAyBzvD,EAAO7b,GAC9B,IAAOlB,EAAakB,EAAblB,EAAGumB,EAAUrlB,EAAVqlB,OAEV,OAAIvmB,EAAIumB,EAAS,EACR,MACEvmB,EAAK+c,EAAMwJ,OAASA,EAAS,EAC/B,SAEF,QACR,CAsCiDymD,CAAgBjwD,EAAO7b,GAEvE,MAAO,CACLwrE,OAAQxrE,EAAKwrE,QAAUxtE,EAAQwtE,QAAUH,GAAgBxvD,EAAO7d,EAASgC,EAAMsrE,GAC/EA,OAAAA,EAEH,CA4BD,SAASS,GAAmB/tE,EAASgC,EAAMgsE,EAAWnwD,GACpD,IAAO6vD,EAAyC1tE,EAAzC0tE,UAAWC,EAA8B3tE,EAA9B2tE,aAAcjmD,EAAgB1nB,EAAhB0nB,aACzB8lD,EAAkBQ,EAAlBR,OAAQF,EAAUU,EAAVV,OACTW,EAAiBP,EAAYC,EACnC,EAAqD/gD,GAAclF,GAA5DmE,EAAP,EAAOA,QAASG,EAAhB,EAAgBA,SAAUF,EAA1B,EAA0BA,WAAYC,EAAtC,EAAsCA,YAElCnrB,EAhCN,SAAgBoB,EAAMwrE,GACpB,IAAK5sE,EAAYoB,EAAZpB,EAAG6jB,EAASziB,EAATyiB,MAMR,MALe,UAAX+oD,EACF5sE,GAAK6jB,EACe,WAAX+oD,IACT5sE,GAAM6jB,EAAQ,GAET7jB,CACR,CAwBSstE,CAAOlsE,EAAMwrE,GACf1sE,EAvBR,SAAgBkB,EAAMsrE,EAAQW,GAE5B,IAAKntE,EAAakB,EAAblB,EAAGumB,EAAUrlB,EAAVqlB,OAQR,MAPe,QAAXimD,EACFxsE,GAAKmtE,EAELntE,GADoB,WAAXwsE,EACJjmD,EAAS4mD,EAER5mD,EAAS,EAEVvmB,CACR,CAYWqtE,CAAOnsE,EAAMsrE,EAAQW,GAc/B,MAZe,WAAXX,EACa,SAAXE,EACF5sE,GAAKqtE,EACe,UAAXT,IACT5sE,GAAKqtE,GAEa,SAAXT,EACT5sE,GAAKwB,KAAK6B,IAAI4nB,EAASC,GAAc4hD,EACjB,UAAXF,IACT5sE,GAAKwB,KAAK6B,IAAI+nB,EAAUD,GAAe2hD,GAGlC,CACL9sE,EAAGsF,GAAYtF,EAAG,EAAGid,EAAM4G,MAAQziB,EAAKyiB,OACxC3jB,EAAGoF,GAAYpF,EAAG,EAAG+c,EAAMwJ,OAASrlB,EAAKqlB,QAE5C,CAED,SAAS+mD,GAAYrC,EAAS7jE,EAAOlI,GACnC,IAAMojB,EAAUyJ,GAAU7sB,EAAQojB,SAElC,MAAiB,WAAVlb,EACH6jE,EAAQnrE,EAAImrE,EAAQtnD,MAAQ,EAClB,UAAVvc,EACE6jE,EAAQnrE,EAAImrE,EAAQtnD,MAAQrB,EAAQE,MACpCyoD,EAAQnrE,EAAIwiB,EAAQI,IAC3B,CAKD,SAAS6qD,GAAwBpwE,GAC/B,OAAOutE,GAAa,GAAIE,GAAcztE,GACvC,CAUD,SAASqwE,GAAkBxxC,EAAWtd,GACpC,IAAM8B,EAAW9B,GAAWA,EAAQ+lB,SAAW/lB,EAAQ+lB,QAAQwmC,SAAWvsD,EAAQ+lB,QAAQwmC,QAAQjvC,UAClG,OAAOxb,EAAWwb,EAAUxb,SAASA,GAAYwb,CAClD,CAED,IAAMyxC,GAAmB,CAEvBC,YAAahyE,EACbkoB,MAHuB,SAGjB+pD,GACJ,GAAIA,EAAa7vE,OAAS,EAAG,CAC3B,IAAMqD,EAAOwsE,EAAa,GACpB1mC,EAAS9lC,EAAK4b,MAAM+H,KAAKmiB,OACzB2mC,EAAa3mC,EAASA,EAAOnpC,OAAS,EAE5C,GAAIqc,MAAQA,KAAKjb,SAAiC,YAAtBib,KAAKjb,QAAQwgB,KACvC,OAAOve,EAAKsjC,QAAQ8D,OAAS,GACxB,GAAIpnC,EAAKonC,MACd,OAAOpnC,EAAKonC,MACP,GAAIqlC,EAAa,GAAKzsE,EAAK6nC,UAAY4kC,EAC5C,OAAO3mC,EAAO9lC,EAAK6nC,UAEtB,CAED,MAAO,EACR,EACD6kC,WAAYnyE,EAGZmwE,WAAYnwE,EAGZoyE,YAAapyE,EACb6sC,MA3BuB,SA2BjBwlC,GACJ,GAAI5zD,MAAQA,KAAKjb,SAAiC,YAAtBib,KAAKjb,QAAQwgB,KACvC,OAAOquD,EAAYxlC,MAAQ,KAAOwlC,EAAYhD,gBAAkBgD,EAAYhD,eAG9E,IAAIxiC,EAAQwlC,EAAYtpC,QAAQ8D,OAAS,GAErCA,IACFA,GAAS,MAEX,IAAMzsC,EAAQiyE,EAAYhD,eAI1B,OAHKlvE,EAAcC,KACjBysC,GAASzsC,GAEJysC,CACR,EACDylC,WA3CuB,SA2CZD,GACT,IACM7uE,EADO6uE,EAAYhxD,MAAMyoB,eAAeuoC,EAAY1vE,cACrC8jC,WAAWvK,SAASm2C,EAAY/kC,WACrD,MAAO,CACLzqB,YAAarf,EAAQqf,YACrBD,gBAAiBpf,EAAQof,gBACzBwJ,YAAa5oB,EAAQ4oB,YACrBuT,WAAYn8B,EAAQm8B,WACpBC,iBAAkBp8B,EAAQo8B,iBAC1Bu/B,aAAc,EAEjB,EACDoT,eAvDuB,WAwDrB,OAAO9zD,KAAKjb,QAAQgvE,SACrB,EACDC,gBA1DuB,SA0DPJ,GACd,IACM7uE,EADO6uE,EAAYhxD,MAAMyoB,eAAeuoC,EAAY1vE,cACrC8jC,WAAWvK,SAASm2C,EAAY/kC,WACrD,MAAO,CACLjiB,WAAY7nB,EAAQ6nB,WACpBC,SAAU9nB,EAAQ8nB,SAErB,EACDonD,WAAY1yE,EAGZowE,UAAWpwE,EAGX2yE,aAAc3yE,EACdyvE,OAAQzvE,EACR4yE,YAAa5yE,GAYf,SAAS6yE,GAA2BvyC,EAAWtb,EAAMrB,EAAKyvC,GACxD,IAAMl6B,EAASoH,EAAUtb,GAAMrkB,KAAKgjB,EAAKyvC,GAEzC,MAAsB,qBAAXl6B,EACF64C,GAAiB/sD,GAAMrkB,KAAKgjB,EAAKyvC,GAGnCl6B,CACR,KAEY45C,GAAAA,SAAAA,iCAOXtwD,SAAAA,EAAYwhB,GAAQ,6BAClB,gBAEK+uC,QAAU,EACf,EAAK9xC,QAAU,GACf,EAAK+xC,oBAAiB1hE,EACtB,EAAK2hE,WAAQ3hE,EACb,EAAK4hE,uBAAoB5hE,EACzB,EAAK6hE,cAAgB,GACrB,EAAKzuC,iBAAcpzB,EACnB,EAAK+2B,cAAW/2B,EAChB,EAAK+P,MAAQ2iB,EAAO3iB,MACpB,EAAK7d,QAAUwgC,EAAOxgC,QACtB,EAAK4vE,gBAAa9hE,EAClB,EAAK4W,WAAQ5W,EACb,EAAK6+D,gBAAa7+D,EAClB,EAAKk+D,UAAOl+D,EACZ,EAAK8+D,eAAY9+D,EACjB,EAAKm+D,YAASn+D,EACd,EAAK0/D,YAAS1/D,EACd,EAAKw/D,YAASx/D,EACd,EAAKlN,OAAIkN,EACT,EAAKhN,OAAIgN,EACT,EAAKuZ,YAASvZ,EACd,EAAK2W,WAAQ3W,EACb,EAAK+hE,YAAS/hE,EACd,EAAKgiE,YAAShiE,EAGd,EAAKiiE,iBAAcjiE,EACnB,EAAKkiE,sBAAmBliE,EACxB,EAAKmiE,qBAAkBniE,EA/BL,CAgCnB,0CAEDm3B,SAAWjlC,GACTib,KAAKjb,QAAUA,EACfib,KAAKy0D,uBAAoB5hE,EACzBmN,KAAK4pB,cAAW/2B,CACjB,mCAKD08B,WACE,IAAMxG,EAAS/oB,KAAKy0D,kBAEpB,GAAI1rC,EACF,OAAOA,EAGT,IAAMnmB,EAAQ5C,KAAK4C,MACb7d,EAAUib,KAAKjb,QAAQuvB,WAAWtU,KAAKiM,cACvC+C,EAAOjqB,EAAQuiD,SAAW1kC,EAAM7d,QAAQmf,WAAanf,EAAQgjB,WAC7DA,EAAa,IAAIud,GAAWtlB,KAAK4C,MAAOoM,GAK9C,OAJIA,EAAKiF,aACPjU,KAAKy0D,kBAAoB1yE,OAAOutC,OAAOvnB,IAGlCA,CACR,2BAKDkE,WACE,OAAOjM,KAAK4pB,WACZ5pB,KAAK4pB,UAtLqB/T,EAsLW7V,KAAK4C,MAAMqJ,aAtLd6kD,EAsL4B9wD,KAtLnBwzD,EAsLyBxzD,KAAK00D,cArLpEpiD,GAAcuD,EAAQ,CAC3Bi7C,QAAAA,EACA0C,aAAAA,EACA1xE,KAAM,cAJV,IAA8B+zB,EAAQi7C,EAAS0C,CAuL5C,yBAEDyB,SAAS1wD,EAASxf,GAChB,IAAO88B,EAAa98B,EAAb88B,UAED0xC,EAAca,GAA2BvyC,EAAW,cAAe7hB,KAAMuE,GACzEkF,EAAQ2qD,GAA2BvyC,EAAW,QAAS7hB,KAAMuE,GAC7DmvD,EAAaU,GAA2BvyC,EAAW,aAAc7hB,KAAMuE,GAEzE0K,EAAQ,GAKZ,OAJAA,EAAQshD,GAAathD,EAAOwhD,GAAc8C,IAC1CtkD,EAAQshD,GAAathD,EAAOwhD,GAAchnD,IAC1CwF,EAAQshD,GAAathD,EAAOwhD,GAAciD,GAG3C,8BAEDwB,SAAc1B,EAAczuE,GAC1B,OAAOquE,GACLgB,GAA2BrvE,EAAQ88B,UAAW,aAAc7hB,KAAMwzD,GAErE,wBAED2B,SAAQ3B,EAAczuE,GAAS,WACtB88B,EAAa98B,EAAb88B,UACDuzC,EAAY,GAgBlB,OAdA/xE,EAAKmwE,GAAc,SAACjvD,GAClB,IAAMgtD,EAAW,CACfC,OAAQ,GACRviD,MAAO,GACPwiD,MAAO,IAEH4D,EAAShC,GAAkBxxC,EAAWtd,GAC5CgsD,GAAagB,EAASC,OAAQf,GAAc2D,GAA2BiB,EAAQ,cAAe,EAAM9wD,KACpGgsD,GAAagB,EAAStiD,MAAOmlD,GAA2BiB,EAAQ,QAAS,EAAM9wD,IAC/EgsD,GAAagB,EAASE,MAAOhB,GAAc2D,GAA2BiB,EAAQ,aAAc,EAAM9wD,KAElG6wD,EAAUlvE,KAAKqrE,EAChB,IAEM6D,CACR,6BAEDE,SAAa9B,EAAczuE,GACzB,OAAOquE,GACLgB,GAA2BrvE,EAAQ88B,UAAW,YAAa7hB,KAAMwzD,GAEpE,0BAGD+B,SAAU/B,EAAczuE,GACtB,IAAO88B,EAAa98B,EAAb88B,UAEDqyC,EAAeE,GAA2BvyC,EAAW,eAAgB7hB,KAAMwzD,GAC3ExC,EAASoD,GAA2BvyC,EAAW,SAAU7hB,KAAMwzD,GAC/DW,EAAcC,GAA2BvyC,EAAW,cAAe7hB,KAAMwzD,GAE3EvkD,EAAQ,GAKZ,OAJAA,EAAQshD,GAAathD,EAAOwhD,GAAcyD,IAC1CjlD,EAAQshD,GAAathD,EAAOwhD,GAAcO,IAC1C/hD,EAAQshD,GAAathD,EAAOwhD,GAAc0D,GAG3C,6BAKDqB,SAAazwE,GAAS,IAOhBvB,EAAGC,EAPa,OACdmkB,EAAS5H,KAAKwiB,QACd7X,EAAO3K,KAAK4C,MAAM+H,KAClBmqD,EAAc,GACdC,EAAmB,GACnBC,EAAkB,GACpBxB,EAAe,GAGnB,IAAKhwE,EAAI,EAAGC,EAAMmkB,EAAOjkB,OAAQH,EAAIC,IAAOD,EAC1CgwE,EAAattE,KAAKyqE,GAAkB3wD,KAAK4C,MAAOgF,EAAOpkB,KAyBzD,OArBIuB,EAAQkwB,SACVu+C,EAAeA,EAAav+C,QAAO,SAACiF,EAAS/1B,EAAO0E,GAAjB,OAA2B9D,EAAQkwB,OAAOiF,EAAS/1B,EAAO0E,EAAO8hB,EAAjE,KAIjC5lB,EAAQ0wE,WACVjC,EAAeA,EAAaxhC,MAAK,SAACnrC,EAAGC,GAAJ,OAAU/B,EAAQ0wE,SAAS5uE,EAAGC,EAAG6jB,EAAjC,KAInCtnB,EAAKmwE,GAAc,SAACjvD,GAClB,IAAM8wD,EAAShC,GAAkBtuE,EAAQ88B,UAAWtd,GACpDuwD,EAAY5uE,KAAKkuE,GAA2BiB,EAAQ,aAAc,EAAM9wD,IACxEwwD,EAAiB7uE,KAAKkuE,GAA2BiB,EAAQ,kBAAmB,EAAM9wD,IAClFywD,EAAgB9uE,KAAKkuE,GAA2BiB,EAAQ,iBAAkB,EAAM9wD,GACjF,IAEDvE,KAAK80D,YAAcA,EACnB90D,KAAK+0D,iBAAmBA,EACxB/0D,KAAKg1D,gBAAkBA,EACvBh1D,KAAK20D,WAAanB,EACXA,CACR,uBAED3uC,SAAOn2B,EAASixD,GACd,IAEIh4C,EAFE5iB,EAAUib,KAAKjb,QAAQuvB,WAAWtU,KAAKiM,cACvCrE,EAAS5H,KAAKwiB,QAEhBgxC,EAAe,GAEnB,GAAK5rD,EAAOjkB,OAML,CACL,IAAM45C,EAAW0yB,GAAYlrE,EAAQw4C,UAAUr7C,KAAK8d,KAAM4H,EAAQ5H,KAAKu0D,gBACvEf,EAAexzD,KAAKw1D,aAAazwE,GAEjCib,KAAKyJ,MAAQzJ,KAAKi1D,SAASzB,EAAczuE,GACzCib,KAAK0xD,WAAa1xD,KAAKk1D,cAAc1B,EAAczuE,GACnDib,KAAK+wD,KAAO/wD,KAAKm1D,QAAQ3B,EAAczuE,GACvCib,KAAK2xD,UAAY3xD,KAAKs1D,aAAa9B,EAAczuE,GACjDib,KAAKgxD,OAAShxD,KAAKu1D,UAAU/B,EAAczuE,GAE3C,IAAMgC,EAAOiZ,KAAKw0D,MAAQ3D,GAAe7wD,KAAMjb,GACzC2wE,EAAkB3zE,OAAO4M,OAAO,CAAC,EAAG4uC,EAAUx2C,GAC9CgsE,EAAYH,GAAmB5yD,KAAK4C,MAAO7d,EAAS2wE,GACpDC,EAAkB7C,GAAmB/tE,EAAS2wE,EAAiB3C,EAAW/yD,KAAK4C,OAErF5C,KAAKuyD,OAASQ,EAAUR,OACxBvyD,KAAKqyD,OAASU,EAAUV,OAExB1qD,EAAa,CACX2sD,QAAS,EACT3uE,EAAGgwE,EAAgBhwE,EACnBE,EAAG8vE,EAAgB9vE,EACnB2jB,MAAOziB,EAAKyiB,MACZ4C,OAAQrlB,EAAKqlB,OACbwoD,OAAQr3B,EAAS53C,EACjBkvE,OAAQt3B,EAAS13C,EAEpB,MAhCsB,IAAjBma,KAAKs0D,UACP3sD,EAAa,CACX2sD,QAAS,IAgCft0D,KAAK00D,cAAgBlB,EACrBxzD,KAAK4pB,cAAW/2B,EAEZ8U,GACF3H,KAAKuvB,qBAAqB1K,OAAO7kB,KAAM2H,GAGrCjZ,GAAW3J,EAAQ6wE,UACrB7wE,EAAQ6wE,SAAS1zE,KAAK8d,KAAM,CAAC4C,MAAO5C,KAAK4C,MAAOkuD,QAAS9wD,KAAM2/C,OAAAA,GAElE,0BAEDkW,SAAUC,EAAc5wD,EAAKne,EAAMhC,GACjC,IAAMgxE,EAAgB/1D,KAAKg2D,iBAAiBF,EAAc/uE,EAAMhC,GAEhEmgB,EAAIqI,OAAOwoD,EAAcnmB,GAAImmB,EAAclmB,IAC3C3qC,EAAIqI,OAAOwoD,EAAcjmB,GAAIimB,EAAchmB,IAC3C7qC,EAAIqI,OAAOwoD,EAAcE,GAAIF,EAAcG,GAC5C,iCAEDF,SAAiBF,EAAc/uE,EAAMhC,GACnC,IAKI6qD,EAAIE,EAAImmB,EAAIpmB,EAAIE,EAAImmB,EALjB3D,EAAkBvyD,KAAlBuyD,OAAQF,EAAUryD,KAAVqyD,OACRI,EAA2B1tE,EAA3B0tE,UACP,EAAqD9gD,GADnB5sB,EAAhB0nB,cACXmE,EAAP,EAAOA,QAASG,EAAhB,EAAgBA,SAAUF,EAA1B,EAA0BA,WAAYC,EAAtC,EAAsCA,YAC5BqlD,EAAeL,EAAlBnwE,EAAWywE,EAAON,EAAVjwE,EACR2jB,EAAiBziB,EAAjByiB,MAAO4C,EAAUrlB,EAAVqlB,OAiDd,MA9Ce,WAAXimD,GACFtiB,EAAKqmB,EAAOhqD,EAAS,EAEN,SAAXmmD,GAEFziB,GADAF,EAAKumB,GACK1D,EAGV5iB,EAAKE,EAAK0iB,EACVyD,EAAKnmB,EAAK0iB,IAGV3iB,GADAF,EAAKumB,EAAM3sD,GACDipD,EAGV5iB,EAAKE,EAAK0iB,EACVyD,EAAKnmB,EAAK0iB,GAGZwD,EAAKrmB,IAGHE,EADa,SAAXyiB,EACG4D,EAAMhvE,KAAK6B,IAAI4nB,EAASC,GAAe4hD,EACxB,UAAXF,EACJ4D,EAAM3sD,EAAQriB,KAAK6B,IAAI+nB,EAAUD,GAAe2hD,EAEhDzyD,KAAK40D,OAGG,QAAXvC,GAEFtiB,GADAF,EAAKumB,GACK3D,EAGV7iB,EAAKE,EAAK2iB,EACVwD,EAAKnmB,EAAK2iB,IAGV1iB,GADAF,EAAKumB,EAAMhqD,GACDqmD,EAGV7iB,EAAKE,EAAK2iB,EACVwD,EAAKnmB,EAAK2iB,GAEZyD,EAAKrmB,GAEA,CAACD,GAAAA,EAAIE,GAAAA,EAAImmB,GAAAA,EAAIpmB,GAAAA,EAAIE,GAAAA,EAAImmB,GAAAA,EAC7B,0BAEDhkB,SAAUx5B,EAAIxT,EAAKngB,GACjB,IAEI4pE,EAAWiD,EAAcpuE,EAFvBimB,EAAQzJ,KAAKyJ,MACb9lB,EAAS8lB,EAAM9lB,OAGrB,GAAIA,EAAQ,CACV,IAAMkqE,EAAY9vC,GAAch5B,EAAQi5B,IAAKhe,KAAKra,EAAGqa,KAAKwJ,OAa1D,IAXAkP,EAAG/yB,EAAIwtE,GAAYnzD,KAAMjb,EAAQgkD,WAAYhkD,GAE7CmgB,EAAI4K,UAAY+9C,EAAU/9C,UAAU/qB,EAAQgkD,YAC5C7jC,EAAI6K,aAAe,SAEnB4+C,EAAY98C,GAAO9sB,EAAQ4pE,WAC3BiD,EAAe7sE,EAAQ6sE,aAEvB1sD,EAAI2K,UAAY9qB,EAAQsxE,WACxBnxD,EAAIN,KAAO+pD,EAAU7jD,OAEhBtnB,EAAI,EAAGA,EAAIG,IAAUH,EACxB0hB,EAAIwK,SAASjG,EAAMjmB,GAAIqqE,EAAUloE,EAAE+yB,EAAG/yB,GAAI+yB,EAAG7yB,EAAI8oE,EAAU5pD,WAAa,GACxE2T,EAAG7yB,GAAK8oE,EAAU5pD,WAAa6sD,EAE3BpuE,EAAI,IAAMG,IACZ+0B,EAAG7yB,GAAKd,EAAQ8sE,kBAAoBD,EAGzC,CACF,8BAKD0E,SAAcpxD,EAAKwT,EAAIl1B,EAAGqqE,EAAW9oE,GACnC,IAAM+vE,EAAc90D,KAAK80D,YAAYtxE,GAC/BwwE,EAAkBh0D,KAAK+0D,iBAAiBvxE,GACvCmoE,EAAmC5mE,EAAnC4mE,UAAWC,EAAwB7mE,EAAxB6mE,SAAUzrB,EAAcp7C,EAAdo7C,WACtB8wB,EAAWp/C,GAAO9sB,EAAQksE,UAC1BsF,EAASpD,GAAYnzD,KAAM,OAAQjb,GACnCyxE,EAAY3I,EAAUloE,EAAE4wE,GACxBE,EAAU9K,EAAYsF,EAASlsD,YAAcksD,EAASlsD,WAAa4mD,GAAa,EAAI,EACpF+K,EAASh+C,EAAG7yB,EAAI4wE,EAEtB,GAAI1xE,EAAQ8mE,cAAe,CACzB,IAAMwC,EAAc,CAClBvhD,OAAQ3lB,KAAK4B,IAAI6iE,EAAUD,GAAa,EACxC/+C,WAAYonD,EAAgBpnD,WAC5BC,SAAUmnD,EAAgBnnD,SAC1Bc,YAAa,GAIT4rB,EAAUs0B,EAAUzvC,WAAWo4C,EAAW5K,GAAYA,EAAW,EACjEpyB,EAAUk9B,EAAS/K,EAAY,EAGrCzmD,EAAIqK,YAAcxqB,EAAQ4xE,mBAC1BzxD,EAAI2K,UAAY9qB,EAAQ4xE,mBACxBtqD,GAAUnH,EAAKmpD,EAAa90B,EAASC,GAGrCt0B,EAAIqK,YAAculD,EAAY1wD,YAC9Bc,EAAI2K,UAAYilD,EAAY3wD,gBAC5BkI,GAAUnH,EAAKmpD,EAAa90B,EAASC,EACtC,KAAM,CAELt0B,EAAI4D,UAAY1mB,EAAS0yE,EAAYnnD,aAAexmB,KAAK6B,IAAL7B,MAAAA,MAAI,OAAQpF,OAAOwgB,OAAOuyD,EAAYnnD,eAAiBmnD,EAAYnnD,aAAe,EACtIzI,EAAIqK,YAAculD,EAAY1wD,YAC9Bc,EAAI2sC,YAAYijB,EAAY5zC,YAAc,IAC1Chc,EAAI4sC,eAAiBgjB,EAAY3zC,kBAAoB,EAGrD,IAAMy1C,EAAS/I,EAAUzvC,WAAWo4C,EAAW5K,EAAWzrB,GACpD02B,EAAShJ,EAAUzvC,WAAWyvC,EAAU1vC,MAAMq4C,EAAW,GAAI5K,EAAWzrB,EAAa,GACrFugB,EAAe/uC,GAAcmjD,EAAYpU,cAE3C3+D,OAAOwgB,OAAOm+C,GAActK,MAAK1wD,SAAAA,GAAAA,OAAW,IAANA,CAALA,KACnCwf,EAAIgI,YACJhI,EAAI2K,UAAY9qB,EAAQ4xE,mBACxBhmD,GAAmBzL,EAAK,CACtBvf,EAAGixE,EACH/wE,EAAG6wE,EACHxjE,EAAG04D,EACHt6D,EAAGq6D,EACH7+C,OAAQ4zC,IAEVx7C,EAAIwI,OACJxI,EAAI0I,SAGJ1I,EAAI2K,UAAYilD,EAAY3wD,gBAC5Be,EAAIgI,YACJyD,GAAmBzL,EAAK,CACtBvf,EAAGkxE,EACHhxE,EAAG6wE,EAAS,EACZxjE,EAAG04D,EAAW,EACdt6D,EAAGq6D,EAAY,EACf7+C,OAAQ4zC,IAEVx7C,EAAIwI,SAGJxI,EAAI2K,UAAY9qB,EAAQ4xE,mBACxBzxD,EAAIwL,SAASkmD,EAAQF,EAAQ9K,EAAUD,GACvCzmD,EAAI4xD,WAAWF,EAAQF,EAAQ9K,EAAUD,GAEzCzmD,EAAI2K,UAAYilD,EAAY3wD,gBAC5Be,EAAIwL,SAASmmD,EAAQH,EAAS,EAAG9K,EAAW,EAAGD,EAAY,GAE9D,CAGDzmD,EAAI2K,UAAY7P,KAAKg1D,gBAAgBxxE,EACtC,yBAEDuzE,SAASr+C,EAAIxT,EAAKngB,GAChB,IAcIwsE,EAAUyF,EAAW/nD,EAAOzrB,EAAGkb,EAAG3a,EAAMunB,EAdrCylD,EAAQ/wD,KAAR+wD,KACAgB,EAA0EhtE,EAA1EgtE,YAAakF,EAA6DlyE,EAA7DkyE,UAAWnF,EAAkD/sE,EAAlD+sE,cAAenG,EAAmC5mE,EAAnC4mE,UAAWC,EAAwB7mE,EAAxB6mE,SAAUzrB,EAAcp7C,EAAdo7C,WAC7D8wB,EAAWp/C,GAAO9sB,EAAQksE,UAC5BiG,EAAiBjG,EAASlsD,WAC1BoyD,EAAe,EAEbtJ,EAAY9vC,GAAch5B,EAAQi5B,IAAKhe,KAAKra,EAAGqa,KAAKwJ,OAEpD4tD,EAAiB,SAASroD,GAC9B7J,EAAIwK,SAASX,EAAM8+C,EAAUloE,EAAE+yB,EAAG/yB,EAAIwxE,GAAez+C,EAAG7yB,EAAIqxE,EAAiB,GAC7Ex+C,EAAG7yB,GAAKqxE,EAAiBnF,CAC1B,EAEKsF,EAA0BxJ,EAAU/9C,UAAUmnD,GAkBpD,IAfA/xD,EAAI4K,UAAYmnD,EAChB/xD,EAAI6K,aAAe,SACnB7K,EAAIN,KAAOqsD,EAASnmD,OAEpB4N,EAAG/yB,EAAIwtE,GAAYnzD,KAAMq3D,EAAyBtyE,GAGlDmgB,EAAI2K,UAAY9qB,EAAQgvE,UACxB1wE,EAAK2c,KAAK0xD,WAAY0F,GAEtBD,EAAerF,GAA6C,UAA5BuF,EACd,WAAdJ,EAA0BrL,EAAW,EAAIzrB,EAAeyrB,EAAW,EAAIzrB,EACvE,EAGC38C,EAAI,EAAGO,EAAOgtE,EAAKptE,OAAQH,EAAIO,IAAQP,EAAG,CAc7C,IAbA+tE,EAAWR,EAAKvtE,GAChBwzE,EAAYh3D,KAAKg1D,gBAAgBxxE,GAEjC0hB,EAAI2K,UAAYmnD,EAChB3zE,EAAKkuE,EAASC,OAAQ4F,GAEtBnoD,EAAQsiD,EAAStiD,MAEb6iD,GAAiB7iD,EAAMtrB,SACzBqc,KAAKs2D,cAAcpxD,EAAKwT,EAAIl1B,EAAGqqE,EAAW9oE,GAC1CmyE,EAAiB/vE,KAAK6B,IAAIioE,EAASlsD,WAAY4mD,IAG5CjtD,EAAI,EAAG4M,EAAO2D,EAAMtrB,OAAQ+a,EAAI4M,IAAQ5M,EAC3C04D,EAAenoD,EAAMvQ,IAErBw4D,EAAiBjG,EAASlsD,WAG5B1hB,EAAKkuE,EAASE,MAAO2F,EACtB,CAGDD,EAAe,EACfD,EAAiBjG,EAASlsD,WAG1B1hB,EAAK2c,KAAK2xD,UAAWyF,GACrB1+C,EAAG7yB,GAAKksE,CACT,2BAEDuF,SAAW5+C,EAAIxT,EAAKngB,GAClB,IAEImsE,EAAY1tE,EAFVwtE,EAAShxD,KAAKgxD,OACdrtE,EAASqtE,EAAOrtE,OAGtB,GAAIA,EAAQ,CACV,IAAMkqE,EAAY9vC,GAAch5B,EAAQi5B,IAAKhe,KAAKra,EAAGqa,KAAKwJ,OAa1D,IAXAkP,EAAG/yB,EAAIwtE,GAAYnzD,KAAMjb,EAAQwyE,YAAaxyE,GAC9C2zB,EAAG7yB,GAAKd,EAAQitE,gBAEhB9sD,EAAI4K,UAAY+9C,EAAU/9C,UAAU/qB,EAAQwyE,aAC5CryD,EAAI6K,aAAe,SAEnBmhD,EAAar/C,GAAO9sB,EAAQmsE,YAE5BhsD,EAAI2K,UAAY9qB,EAAQyyE,YACxBtyD,EAAIN,KAAOssD,EAAWpmD,OAEjBtnB,EAAI,EAAGA,EAAIG,IAAUH,EACxB0hB,EAAIwK,SAASshD,EAAOxtE,GAAIqqE,EAAUloE,EAAE+yB,EAAG/yB,GAAI+yB,EAAG7yB,EAAIqrE,EAAWnsD,WAAa,GAC1E2T,EAAG7yB,GAAKqrE,EAAWnsD,WAAahgB,EAAQktE,aAE3C,CACF,+BAEDxgB,SAAe/4B,EAAIxT,EAAKuyD,EAAa1yE,GACnC,IAAOwtE,EAAkBvyD,KAAlBuyD,OAAQF,EAAUryD,KAAVqyD,OACR1sE,EAAQ+yB,EAAR/yB,EAAGE,EAAK6yB,EAAL7yB,EACH2jB,EAAiBiuD,EAAjBjuD,MAAO4C,EAAUqrD,EAAVrrD,OACd,EAAqDuF,GAAc5sB,EAAQ0nB,cAApEmE,EAAP,EAAOA,QAASG,EAAhB,EAAgBA,SAAUF,EAA1B,EAA0BA,WAAYC,EAAtC,EAAsCA,YAEtC5L,EAAI2K,UAAY9qB,EAAQof,gBACxBe,EAAIqK,YAAcxqB,EAAQqf,YAC1Bc,EAAI4D,UAAY/jB,EAAQ4oB,YAExBzI,EAAIgI,YACJhI,EAAIoI,OAAO3nB,EAAIirB,EAAS/qB,GACT,QAAXwsE,GACFryD,KAAK61D,UAAUn9C,EAAIxT,EAAKuyD,EAAa1yE,GAEvCmgB,EAAIqI,OAAO5nB,EAAI6jB,EAAQuH,EAAUlrB,GACjCqf,EAAIwyD,iBAAiB/xE,EAAI6jB,EAAO3jB,EAAGF,EAAI6jB,EAAO3jB,EAAIkrB,GACnC,WAAXshD,GAAkC,UAAXE,GACzBvyD,KAAK61D,UAAUn9C,EAAIxT,EAAKuyD,EAAa1yE,GAEvCmgB,EAAIqI,OAAO5nB,EAAI6jB,EAAO3jB,EAAIumB,EAAS0E,GACnC5L,EAAIwyD,iBAAiB/xE,EAAI6jB,EAAO3jB,EAAIumB,EAAQzmB,EAAI6jB,EAAQsH,EAAajrB,EAAIumB,GAC1D,WAAXimD,GACFryD,KAAK61D,UAAUn9C,EAAIxT,EAAKuyD,EAAa1yE,GAEvCmgB,EAAIqI,OAAO5nB,EAAIkrB,EAAYhrB,EAAIumB,GAC/BlH,EAAIwyD,iBAAiB/xE,EAAGE,EAAIumB,EAAQzmB,EAAGE,EAAIumB,EAASyE,GACrC,WAAXwhD,GAAkC,SAAXE,GACzBvyD,KAAK61D,UAAUn9C,EAAIxT,EAAKuyD,EAAa1yE,GAEvCmgB,EAAIqI,OAAO5nB,EAAGE,EAAI+qB,GAClB1L,EAAIwyD,iBAAiB/xE,EAAGE,EAAGF,EAAIirB,EAAS/qB,GACxCqf,EAAImI,YAEJnI,EAAIwI,OAEA3oB,EAAQ4oB,YAAc,GACxBzI,EAAI0I,QAEP,uCAMD+pD,SAAuB5yE,GACrB,IAAM6d,EAAQ5C,KAAK4C,MACb+e,EAAQ3hB,KAAKimB,YACb2xC,EAAQj2C,GAASA,EAAMh8B,EACvBkyE,EAAQl2C,GAASA,EAAM97B,EAC7B,GAAI+xE,GAASC,EAAO,CAClB,IAAMt6B,EAAW0yB,GAAYlrE,EAAQw4C,UAAUr7C,KAAK8d,KAAMA,KAAKwiB,QAASxiB,KAAKu0D,gBAC7E,IAAKh3B,EACH,OAEF,IAAMx2C,EAAOiZ,KAAKw0D,MAAQ3D,GAAe7wD,KAAMjb,GACzC2wE,EAAkB3zE,OAAO4M,OAAO,CAAC,EAAG4uC,EAAUv9B,KAAKw0D,OACnDzB,EAAYH,GAAmBhwD,EAAO7d,EAAS2wE,GAC/C5nD,EAAQglD,GAAmB/tE,EAAS2wE,EAAiB3C,EAAWnwD,GAClEg1D,EAAMjzC,MAAQ7W,EAAMnoB,GAAKkyE,EAAMlzC,MAAQ7W,EAAMjoB,IAC/Cma,KAAKuyD,OAASQ,EAAUR,OACxBvyD,KAAKqyD,OAASU,EAAUV,OACxBryD,KAAKwJ,MAAQziB,EAAKyiB,MAClBxJ,KAAKoM,OAASrlB,EAAKqlB,OACnBpM,KAAK40D,OAASr3B,EAAS53C,EACvBqa,KAAK60D,OAASt3B,EAAS13C,EACvBma,KAAKuvB,qBAAqB1K,OAAO7kB,KAAM8N,GAE1C,CACF,4BAMDgqD,WACE,QAAS93D,KAAKs0D,OACf,qBAED/xC,SAAKrd,GACH,IAAMngB,EAAUib,KAAKjb,QAAQuvB,WAAWtU,KAAKiM,cACzCqoD,EAAUt0D,KAAKs0D,QAEnB,GAAKA,EAAL,CAIAt0D,KAAK23D,uBAAuB5yE,GAE5B,IAAM0yE,EAAc,CAClBjuD,MAAOxJ,KAAKwJ,MACZ4C,OAAQpM,KAAKoM,QAETsM,EAAK,CACT/yB,EAAGqa,KAAKra,EACRE,EAAGma,KAAKna,GAIVyuE,EAAUntE,KAAKa,IAAIssE,GAAW,KAAO,EAAIA,EAEzC,IAAMnsD,EAAUyJ,GAAU7sB,EAAQojB,SAG5B4vD,EAAoB/3D,KAAKyJ,MAAM9lB,QAAUqc,KAAK0xD,WAAW/tE,QAAUqc,KAAK+wD,KAAKptE,QAAUqc,KAAK2xD,UAAUhuE,QAAUqc,KAAKgxD,OAAOrtE,OAE9HoB,EAAQuiD,SAAWywB,IACrB7yD,EAAImG,OACJnG,EAAI8yD,YAAc1D,EAGlBt0D,KAAKyxC,eAAe/4B,EAAIxT,EAAKuyD,EAAa1yE,GAE1Cy5B,GAAsBtZ,EAAKngB,EAAQopE,eAEnCz1C,EAAG7yB,GAAKsiB,EAAQC,IAGhBpI,KAAKkyC,UAAUx5B,EAAIxT,EAAKngB,GAGxBib,KAAK+2D,SAASr+C,EAAIxT,EAAKngB,GAGvBib,KAAKs3D,WAAW5+C,EAAIxT,EAAKngB,GAEzB+5B,GAAqB5Z,EAAKngB,EAAQopE,eAElCjpD,EAAIuG,UA3CL,CA6CF,kCAMD6zC,WACE,OAAOt/C,KAAKwiB,SAAW,EACxB,kCAOD+8B,SAAkBC,EAAgB4Q,GAAe,WACzC3Q,EAAaz/C,KAAKwiB,QAClB5a,EAAS43C,EAAel7D,KAAI,YAA2B,IAAzBJ,EAAyB,EAAzBA,aAAcC,EAAW,EAAXA,MAC1CiJ,EAAO,EAAKwV,MAAMyoB,eAAennC,GAEvC,IAAKkJ,EACH,MAAM,IAAIqnB,MAAM,kCAAoCvwB,GAGtD,MAAO,CACLA,aAAAA,EACAg2B,QAAS9sB,EAAKud,KAAKxmB,GACnBA,MAAAA,EAEH,IACKuK,GAAW9K,EAAe67D,EAAY73C,GACtCqwD,EAAkBj4D,KAAKk4D,iBAAiBtwD,EAAQwoD,IAElD1hE,GAAWupE,KACbj4D,KAAKwiB,QAAU5a,EACf5H,KAAKu0D,eAAiBnE,EACtBpwD,KAAKm4D,qBAAsB,EAC3Bn4D,KAAK6kB,QAAO,GAEf,4BASDoqC,SAAY1lE,EAAGo2D,GAA4B,IAApBI,IAAoB,yDACzC,GAAIJ,GAAU3/C,KAAKm4D,oBACjB,OAAO,EAETn4D,KAAKm4D,qBAAsB,EAE3B,IAAMpzE,EAAUib,KAAKjb,QACf06D,EAAaz/C,KAAKwiB,SAAW,GAC7B5a,EAAS5H,KAAKkgD,mBAAmB32D,EAAGk2D,EAAYE,EAAQI,GAKxDkY,EAAkBj4D,KAAKk4D,iBAAiBtwD,EAAQre,GAGhDmF,EAAUixD,IAAW/7D,EAAegkB,EAAQ63C,IAAewY,EAgBjE,OAbIvpE,IACFsR,KAAKwiB,QAAU5a,GAEX7iB,EAAQuiD,SAAWviD,EAAQ6wE,YAC7B51D,KAAKu0D,eAAiB,CACpB5uE,EAAG4D,EAAE5D,EACLE,EAAG0D,EAAE1D,GAGPma,KAAK6kB,QAAO,EAAM86B,KAIfjxD,CACR,mCAWDwxD,SAAmB32D,EAAGk2D,EAAYE,EAAQI,GACxC,IAAMh7D,EAAUib,KAAKjb,QAErB,GAAe,aAAXwE,EAAEzH,KACJ,MAAO,GAGT,IAAKi+D,EAEH,OAAON,EAIT,IAAM73C,EAAS5H,KAAK4C,MAAM47C,0BAA0Bj1D,EAAGxE,EAAQwgB,KAAMxgB,EAAS46D,GAM9E,OAJI56D,EAAQxB,SACVqkB,EAAOrkB,UAGFqkB,CACR,iCASDswD,SAAiBtwD,EAAQre,GACvB,IAAOqrE,EAA2B50D,KAA3B40D,OAAQC,EAAmB70D,KAAnB60D,OAAQ9vE,EAAWib,KAAXjb,QACjBw4C,EAAW0yB,GAAYlrE,EAAQw4C,UAAUr7C,KAAK8d,KAAM4H,EAAQre,GAClE,OAAoB,IAAbg0C,IAAuBq3B,IAAWr3B,EAAS53C,GAAKkvE,IAAWt3B,EAAS13C,EAC5E,OAvvBUwuE,CAAgB7tB,YAAhB6tB,GAAAA,cAKUpE,IAqvBvB,OAAe,CACbxuE,GAAI,UACJ6tE,SAAU+E,GACVpE,YAAAA,GAEAmI,UALa,SAKHx1D,EAAOuoD,EAAOpmE,GAClBA,IACF6d,EAAMkuD,QAAU,IAAIuD,GAAQ,CAACzxD,MAAAA,EAAO7d,QAAAA,IAEvC,EAED2lD,aAXa,SAWA9nC,EAAOuoD,EAAOpmE,GACrB6d,EAAMkuD,SACRluD,EAAMkuD,QAAQ9mC,WAAWjlC,EAE5B,EAEDymC,MAjBa,SAiBP5oB,EAAOuoD,EAAOpmE,GACd6d,EAAMkuD,SACRluD,EAAMkuD,QAAQ9mC,WAAWjlC,EAE5B,EAEDszE,UAvBa,SAuBHz1D,GACR,IAAMkuD,EAAUluD,EAAMkuD,QAEtB,GAAIA,GAAWA,EAAQgH,cAAe,CACpC,IAAM50E,EAAO,CACX4tE,QAAAA,GAGF,IAA8E,IAA1EluD,EAAM0pC,cAAc,qBAApB1pC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAAA,CAAAA,EAA6C1f,GAA7C0f,CAAAA,EAAAA,CAAmD8yC,YAAY,KACjE,OAGFob,EAAQvuC,KAAK3f,EAAMsC,KAEnBtC,EAAM0pC,cAAc,mBAAoBppD,EACzC,CACF,EAEDqsE,WAzCa,SAyCF3sD,EAAO1f,GAChB,GAAI0f,EAAMkuD,QAAS,CAEjB,IAAMnzB,EAAmBz6C,EAAKy8D,OAC1B/8C,EAAMkuD,QAAQ7B,YAAY/rE,EAAK03B,MAAO+iB,EAAkBz6C,EAAK68D,eAE/D78D,EAAKwL,SAAU,EAElB,CACF,EAED4Y,SAAU,CACRggC,SAAS,EACTsuB,SAAU,KACVr4B,SAAU,UACVp5B,gBAAiB,kBACjBkyD,WAAY,OACZ1H,UAAW,CACTtuD,OAAQ,QAEVuxD,aAAc,EACdC,kBAAmB,EACnB9oB,WAAY,OACZgrB,UAAW,OACXhC,YAAa,EACbd,SAAU,CAAC,EAEXgG,UAAW,OACXO,YAAa,OACbvF,cAAe,EACfD,gBAAiB,EACjBd,WAAY,CACV7wD,OAAQ,QAEVk3D,YAAa,OACbpvD,QAAS,EACTuqD,aAAc,EACdD,UAAW,EACXhmD,aAAc,EACdk/C,UAAW,SAACzmD,EAAK8J,GAAN,OAAeA,EAAKiiD,SAASlqE,IAA7B,EACX6kE,SAAU,SAAC1mD,EAAK8J,GAAN,OAAeA,EAAKiiD,SAASlqE,IAA7B,EACV4vE,mBAAoB,OACpB7E,eAAe,EACf3xB,WAAY,EACZ/7B,YAAa,gBACbuJ,YAAa,EACbzJ,UAAW,CACTsD,SAAU,IACVC,OAAQ,gBAEVM,WAAY,CACVzG,QAAS,CACPxf,KAAM,SACN6lB,WAAY,CAAC,IAAK,IAAK,QAAS,SAAU,SAAU,WAEtD2sD,QAAS,CACP7sD,OAAQ,SACRD,SAAU,MAGdqa,UAAWyxC,IAGbngB,cAAe,CACb8d,SAAU,OACVC,WAAY,OACZvC,UAAW,QAGblrD,YAAa,CACXyD,YAAa,SAACX,GAAD,MAAmB,WAATA,GAA8B,aAATA,GAAgC,aAATA,CAAtD,EACba,YAAY,EACZya,UAAW,CACT3a,aAAa,EACbE,YAAY,GAEdlD,UAAW,CACTmD,WAAW,GAEbU,WAAY,CACVV,UAAW,cAKf+wC,uBAAwB,CAAC,gBE5yC3B,SAASkgB,GAAexrC,EAAQgC,EAAK3qC,EAAOo0E,GAC1C,IAAM9wB,EAAQ3a,EAAOjoC,QAAQiqC,GAC7B,OAAe,IAAX2Y,EAZc,SAAC3a,EAAQgC,EAAK3qC,EAAOo0E,GAOvC,MANmB,kBAARzpC,GACT3qC,EAAQ2oC,EAAO5mC,KAAK4oC,GAAO,EAC3BypC,EAAYvP,QAAQ,CAAC7kE,MAAAA,EAAOiqC,MAAOU,KAC1BnmC,MAAMmmC,KACf3qC,EAAQ,MAEHA,CACR,CAKUq0E,CAAY1rC,EAAQgC,EAAK3qC,EAAOo0E,GAGlC9wB,IADM3a,EAAO2rC,YAAY3pC,GACR3qC,EAAQsjD,CACjC,CAID,SAASixB,GAAkB/2E,GACzB,IAAMmrC,EAAS9sB,KAAK+sB,YAEpB,OAAIprC,GAAS,GAAKA,EAAQmrC,EAAOnpC,OACxBmpC,EAAOnrC,GAETA,CACR,KAEoBg3E,GAAAA,SAAAA,iCAanB50D,SAAAA,EAAYmgB,GAAK,6BACf,cAAMA,IAGD00C,iBAAc/lE,EACnB,EAAKgmE,YAAc,EACnB,EAAKC,aAAe,GANL,CAOhB,oCAEDn8B,SAAK8Z,GACH,IAAMsiB,EAAQ/4D,KAAK84D,aACnB,GAAIC,EAAMp1E,OAAQ,CAChB,IADgB,EACVmpC,EAAS9sB,KAAK+sB,YADJ,UAEagsC,GAFb,IAEhB,IAAK,EAAL,qBAAoC,eAAxB50E,EAAwB,EAAxBA,MAAOiqC,EAAiB,EAAjBA,MACbtB,EAAO3oC,KAAWiqC,GACpBtB,EAAO3gC,OAAOhI,EAAO,EAExB,CANe,+BAOhB6b,KAAK84D,aAAe,EACrB,EACD,mDAAWriB,EACZ,sBAED//B,SAAMoY,EAAK3qC,GACT,GAAIzC,EAAcotC,GAChB,OAAO,KAET,IAAMhC,EAAS9sB,KAAK+sB,YAGpB,OAtDe,SAAC5oC,EAAO6E,GAAR,OAA0B,OAAV7E,EAAiB,KAAO8G,GAAY9D,KAAKiB,MAAMjE,GAAQ,EAAG6E,EAA1E,CAsDR2/C,CAFPxkD,EAAQ5B,SAAS4B,IAAU2oC,EAAO3oC,KAAW2qC,EAAM3qC,EAC/Cm0E,GAAexrC,EAAQgC,EAAKpsC,EAAeyB,EAAO2qC,GAAM9uB,KAAK84D,cACxChsC,EAAOnpC,OAAS,EAC1C,oCAEDqnD,WACE,MAAiChrC,KAAKnS,gBAA/BC,EAAP,EAAOA,WAAYC,EAAnB,EAAmBA,WACnB,EAAiBiS,KAAKwtB,WAAU,GAA3BzkC,EAAL,EAAKA,IAAKC,EAAV,EAAUA,IAEkB,UAAxBgX,KAAKjb,QAAQ4jB,SACV7a,IACH/E,EAAM,GAEHgF,IACH/E,EAAMgX,KAAK+sB,YAAYppC,OAAS,IAIpCqc,KAAKjX,IAAMA,EACXiX,KAAKhX,IAAMA,CACZ,2BAEDsiD,WACE,IAAMviD,EAAMiX,KAAKjX,IACXC,EAAMgX,KAAKhX,IACXyf,EAASzI,KAAKjb,QAAQ0jB,OACtB/F,EAAQ,GACVoqB,EAAS9sB,KAAK+sB,YAGlBD,EAAkB,IAAT/jC,GAAcC,IAAQ8jC,EAAOnpC,OAAS,EAAKmpC,EAASA,EAAO3qC,MAAM4G,EAAKC,EAAM,GAErFgX,KAAK64D,YAAc1xE,KAAK6B,IAAI8jC,EAAOnpC,QAAU8kB,EAAS,EAAI,GAAI,GAC9DzI,KAAK44D,YAAc54D,KAAKjX,KAAO0f,EAAS,GAAM,GAE9C,IAAK,IAAI9mB,EAAQoH,EAAKpH,GAASqH,EAAKrH,IAClC+gB,EAAMxc,KAAK,CAACvE,MAAAA,IAEd,OAAO+gB,CACR,iCAED2rB,SAAiB1sC,GACf,OAAO+2E,GAAkBx2E,KAAK8d,KAAMre,EACrC,0BAKD8jC,YACE,yDAEKzlB,KAAKi0B,iBAERj0B,KAAKo9B,gBAAkBp9B,KAAKo9B,eAE/B,iCAGDpvC,SAAiBrM,GAKf,MAJqB,kBAAVA,IACTA,EAAQqe,KAAK0W,MAAM/0B,IAGJ,OAAVA,EAAiB4rC,IAAMvtB,KAAK61B,oBAAoBl0C,EAAQqe,KAAK44D,aAAe54D,KAAK64D,YACzF,gCAIDzmC,SAAgBjuC,GACd,IAAMue,EAAQ1C,KAAK0C,MACnB,OAAIve,EAAQ,GAAKA,EAAQue,EAAM/e,OAAS,EAC/B,KAEFqc,KAAKhS,iBAAiB0U,EAAMve,GAAOxC,MAC3C,iCAEDmtD,SAAiBljC,GACf,OAAOzkB,KAAKiB,MAAM4X,KAAK44D,YAAc54D,KAAKgvC,mBAAmBpjC,GAAS5L,KAAK64D,YAC5E,6BAED7kC,WACE,OAAOh0B,KAAKsI,MACb,OA3HkBqwD,CAAsB1vB,ICT3C,SAAS+vB,GAAcC,EAAmBC,GACxC,IAeIv1C,EAAQw1C,EAASC,EAASC,EAfxB32D,EAAQ,GAMPiG,EAAgFswD,EAAhFtwD,OAAQ6nC,EAAwEyoB,EAAxEzoB,KAAMznD,EAAkEkwE,EAAlElwE,IAAKC,EAA6DiwE,EAA7DjwE,IAAKswE,EAAwDL,EAAxDK,UAAW9rE,EAA6CyrE,EAA7CzrE,MAAO+rE,EAAsCN,EAAtCM,SAAUC,EAA4BP,EAA5BO,UAAWC,EAAiBR,EAAjBQ,cAChEC,EAAOlpB,GAAQ,EACfmpB,EAAYJ,EAAW,EACjBK,EAAmBV,EAAxBnwE,IAAgB8wE,EAAQX,EAAblwE,IACZ8E,GAAcpM,EAAcqH,GAC5BgF,GAAcrM,EAAcsH,GAC5B8wE,GAAgBp4E,EAAc8L,GAC9BusE,GAAcF,EAAOD,IAASJ,EAAY,GAC5CjiC,EAAUtvC,GAAS4xE,EAAOD,GAAQD,EAAYD,GAAQA,EAK1D,GAAIniC,EAdgB,QAcUzpC,IAAeC,EAC3C,MAAO,CAAC,CAACpM,MAAOi4E,GAAO,CAACj4E,MAAOk4E,KAGjCR,EAAYlyE,KAAKwgD,KAAKkyB,EAAOtiC,GAAWpwC,KAAKoB,MAAMqxE,EAAOriC,IAC1CoiC,IAEdpiC,EAAUtvC,EAAQoxE,EAAY9hC,EAAUoiC,EAAYD,GAAQA,GAGzDh4E,EAAc43E,KAEjB31C,EAASx8B,KAAKmB,IAAI,GAAIgxE,GACtB/hC,EAAUpwC,KAAKwgD,KAAKpQ,EAAU5T,GAAUA,GAG3B,UAAXhb,GACFwwD,EAAUhyE,KAAKoB,MAAMqxE,EAAOriC,GAAWA,EACvC6hC,EAAUjyE,KAAKwgD,KAAKkyB,EAAOtiC,GAAWA,IAEtC4hC,EAAUS,EACVR,EAAUS,GAGR/rE,GAAcC,GAAcyiD,GhEL3B,SAAqB7qD,EAAWoC,GACrC,IAAMiyE,EAAU7yE,KAAKiB,MAAMzC,GAC3B,OAAOq0E,EAAYjyE,GAAYpC,GAAOq0E,EAAWjyE,GAAYpC,CAC9D,CgEEyCs0E,EAAajxE,EAAMD,GAAOynD,EAAMjZ,EAAU,MAMhFA,GAAWvuC,EAAMD,IADjBswE,EAAYlyE,KAAKiB,MAAMjB,KAAK4B,KAAKC,EAAMD,GAAOwuC,EAASgiC,KAEvDJ,EAAUpwE,EACVqwE,EAAUpwE,GACD8wE,EAOTviC,IAFA6hC,EAAUrrE,EAAa/E,EAAMowE,IAD7BD,EAAUrrE,EAAa/E,EAAMowE,KAE7BE,EAAY7rE,EAAQ,GAQlB6rE,EADEvxE,EAHJuxE,GAAaD,EAAUD,GAAW5hC,EAGNpwC,KAAKiB,MAAMixE,GAAY9hC,EAAU,KAC/CpwC,KAAKiB,MAAMixE,GAEXlyE,KAAKwgD,KAAK0xB,GAM1B,IAAMa,EAAgB/yE,KAAK6B,IACzBK,GAAekuC,GACfluC,GAAe8vE,IAEjBx1C,EAASx8B,KAAKmB,IAAI,GAAI5G,EAAc43E,GAAaY,EAAgBZ,GACjEH,EAAUhyE,KAAKiB,MAAM+wE,EAAUx1C,GAAUA,EACzCy1C,EAAUjyE,KAAKiB,MAAMgxE,EAAUz1C,GAAUA,EAEzC,IAAIjlB,EAAI,EAiBR,IAhBI5Q,IACE2rE,GAAiBN,IAAYpwE,GAC/B2Z,EAAMxc,KAAK,CAACvE,MAAOoH,IAEfowE,EAAUpwE,GACZ2V,IAGE5W,EAAaX,KAAKiB,OAAO+wE,EAAUz6D,EAAI64B,GAAW5T,GAAUA,EAAQ56B,EAAKoxE,GAAkBpxE,EAAKgxE,EAAYd,KAC9Gv6D,KAEOy6D,EAAUpwE,GACnB2V,KAIGA,EAAI26D,IAAa36D,EACtBgE,EAAMxc,KAAK,CAACvE,MAAOwF,KAAKiB,OAAO+wE,EAAUz6D,EAAI64B,GAAW5T,GAAUA,IAcpE,OAXI51B,GAAc0rE,GAAiBL,IAAYpwE,EAEzC0Z,EAAM/e,QAAUmE,EAAa4a,EAAMA,EAAM/e,OAAS,GAAGhC,MAAOqH,EAAKmxE,GAAkBnxE,EAAK+wE,EAAYd,IACtGv2D,EAAMA,EAAM/e,OAAS,GAAGhC,MAAQqH,EAEhC0Z,EAAMxc,KAAK,CAACvE,MAAOqH,IAEX+E,GAAcqrE,IAAYpwE,GACpC0Z,EAAMxc,KAAK,CAACvE,MAAOy3E,IAGd12D,CACR,CAED,SAASy3D,GAAkBx4E,EAAOo4E,EAAlC,GAAyE,IAA1B5mC,EAA0B,EAA1BA,WACvCpmB,EAAM9jB,GAD2D,EAAd0gB,aAEnDpK,GAAS4zB,EAAahsC,KAAK4H,IAAIge,GAAO5lB,KAAK6I,IAAI+c,KAAS,KACxDppB,EAAS,IAAOo2E,GAAc,GAAKp4E,GAAOgC,OAChD,OAAOwD,KAAK4B,IAAIgxE,EAAax6D,EAAO5b,EACrC,SDlHoBg1E,GAAAA,KAEP,oBAFOA,GAAAA,WAOD,CAChBj2D,MAAO,CACL1f,SAAU01E,UC2GK0B,GAAAA,SAAAA,iCAEnBr2D,SAAAA,EAAYmgB,GAAK,6BACf,cAAMA,IAGDz5B,WAAQoI,EAEb,EAAKnI,SAAMmI,EAEX,EAAK+lE,iBAAc/lE,EAEnB,EAAKwnE,eAAYxnE,EACjB,EAAKgmE,YAAc,EAXJ,CAYhB,qCAEDniD,SAAMoY,EAAK3qC,GACT,OAAIzC,EAAcotC,KAGE,kBAARA,GAAoBA,aAAexsC,UAAYC,UAAUusC,GAF5D,MAMDA,CACT,uCAEDwrC,WACE,IAAO5xD,EAAe1I,KAAKjb,QAApB2jB,YACP,EAAiC1I,KAAKnS,gBAA/BC,EAAP,EAAOA,WAAYC,EAAnB,EAAmBA,WACdhF,EAAYiX,KAAZjX,IAAKC,EAAOgX,KAAPhX,IAEJuxE,EAAS70E,SAAAA,GAAAA,OAAMqD,EAAM+E,EAAa/E,EAAMrD,CAA/BA,EACT80E,EAAS90E,SAAAA,GAAAA,OAAMsD,EAAM+E,EAAa/E,EAAMtD,CAA/BA,EAEf,GAAIgjB,EAAa,CACf,IAAM+xD,EAAU5yE,EAAKkB,GACf2xE,EAAU7yE,EAAKmB,GAEjByxE,EAAU,GAAKC,EAAU,EAC3BF,EAAO,GACEC,EAAU,GAAKC,EAAU,GAClCH,EAAO,EAEV,CAED,GAAIxxE,IAAQC,EAAK,CACf,IAAIyf,EAAiB,IAARzf,EAAY,EAAI7B,KAAKa,IAAU,IAANgB,GAEtCwxE,EAAOxxE,EAAMyf,GAERC,GACH6xD,EAAOxxE,EAAM0f,EAEhB,CACDzI,KAAKjX,IAAMA,EACXiX,KAAKhX,IAAMA,CACZ,6BAED2xE,WACE,IAGIpB,EAHE3yB,EAAW5mC,KAAKjb,QAAQ2d,MAEzB0kC,EAA2BR,EAA3BQ,cAAewzB,EAAYh0B,EAAZg0B,SAkBpB,OAfIA,GACFrB,EAAWpyE,KAAKwgD,KAAK3nC,KAAKhX,IAAM4xE,GAAYzzE,KAAKoB,MAAMyX,KAAKjX,IAAM6xE,GAAY,GAC/D,MACb7oD,QAAQC,KAARD,UAAAA,OAAuB/R,KAAKve,GAA5BswB,qBAAAA,OAAkD6oD,EAAlD7oD,mCAAAA,OAA4FwnD,EAA5FxnD,8BACAwnD,EAAW,MAGbA,EAAWv5D,KAAK66D,mBAChBzzB,EAAgBA,GAAiB,IAG/BA,IACFmyB,EAAWpyE,KAAK4B,IAAIq+C,EAAemyB,IAG9BA,CACR,iCAKDsB,WACE,OAAOv4E,OAAOiF,iBACf,2BAED+jD,WACE,IAAMt8B,EAAOhP,KAAKjb,QACZ6hD,EAAW53B,EAAKtM,MAMlB62D,EAAWv5D,KAAK26D,eAiBdj4D,EAAQs2D,GAdkB,CAC9BO,SAHFA,EAAWpyE,KAAK6B,IAAI,EAAGuwE,GAIrB5wD,OAAQqG,EAAKrG,OACb5f,IAAKimB,EAAKjmB,IACVC,IAAKgmB,EAAKhmB,IACVswE,UAAW1yB,EAAS0yB,UACpB9oB,KAAM5J,EAASg0B,SACfptE,MAAOo5C,EAASp5C,MAChBgsE,UAAWx5D,KAAK0yC,aAChBvf,WAAYnzB,KAAKi0B,eACjBtqB,YAAai9B,EAASj9B,aAAe,EACrC8vD,eAA0C,IAA3B7yB,EAAS6yB,eAERz5D,KAAKwpC,QAAUxpC,MAmBjC,MAdoB,UAAhBgP,EAAKrG,QACP/f,EAAmB8Z,EAAO1C,KAAM,SAG9BgP,EAAKzrB,SACPmf,EAAMnf,UAENyc,KAAKvV,MAAQuV,KAAKhX,IAClBgX,KAAKtV,IAAMsV,KAAKjX,MAEhBiX,KAAKvV,MAAQuV,KAAKjX,IAClBiX,KAAKtV,IAAMsV,KAAKhX,KAGX0Z,CACR,0BAKD+iB,WACE,IAAM/iB,EAAQ1C,KAAK0C,MACfjY,EAAQuV,KAAKjX,IACb2B,EAAMsV,KAAKhX,IAIf,IAFA,yDAEIgX,KAAKjb,QAAQ0jB,QAAU/F,EAAM/e,OAAQ,CACvC,IAAM8kB,GAAU/d,EAAMD,GAAStD,KAAK6B,IAAI0Z,EAAM/e,OAAS,EAAG,GAAK,EAC/D8G,GAASge,EACT/d,GAAO+d,CACR,CACDzI,KAAK44D,YAAcnuE,EACnBuV,KAAKq6D,UAAY3vE,EACjBsV,KAAK64D,YAAcnuE,EAAMD,CAC1B,iCAED4jC,SAAiB1sC,GACf,OAAO+f,GAAa/f,EAAOqe,KAAK4C,MAAM7d,QAAQ6c,OAAQ5B,KAAKjb,QAAQ2d,MAAML,OAC1E,OA9JkB+3D,CAAwBnxB,IChJxB6xB,GAAAA,SAAAA,8IAcnB9vB,WACE,MAAmBhrC,KAAKwtB,WAAU,GAA3BzkC,EAAP,EAAOA,IAAKC,EAAZ,EAAYA,IAEZgX,KAAKjX,IAAMxG,EAASwG,GAAOA,EAAM,EACjCiX,KAAKhX,IAAMzG,EAASyG,GAAOA,EAAM,EAGjCgX,KAAKs6D,wBACN,iCAMDO,WACE,IAAM1nC,EAAanzB,KAAKi0B,eAClBtwC,EAASwvC,EAAanzB,KAAKwJ,MAAQxJ,KAAKoM,OACxCzC,EAAc1gB,GAAU+W,KAAKjb,QAAQ2d,MAAMiH,aAC3CpK,GAAS4zB,EAAahsC,KAAK4H,IAAI4a,GAAexiB,KAAK6I,IAAI2Z,KAAiB,KACxEwkC,EAAWnuC,KAAK2uC,wBAAwB,GAC9C,OAAOxnD,KAAKwgD,KAAKhkD,EAASwD,KAAK4B,IAAI,GAAIolD,EAASppC,WAAaxF,GAC9D,iCAGDvR,SAAiBrM,GACf,OAAiB,OAAVA,EAAiB4rC,IAAMvtB,KAAK61B,oBAAoBl0C,EAAQqe,KAAK44D,aAAe54D,KAAK64D,YACzF,iCAED/pB,SAAiBljC,GACf,OAAO5L,KAAK44D,YAAc54D,KAAKgvC,mBAAmBpjC,GAAS5L,KAAK64D,WACjE,OA5CkBiC,CAAoBV,YAApBU,GAAAA,KAEP,kBAFOA,GAAAA,WAOD,CAChBp4D,MAAO,CACL1f,SAAUmnB,GAAM7H,WAAWE,WCPjC,IAAMu4D,GAAar1E,SAAAA,GAAAA,OAAKyB,KAAKoB,MAAMX,EAAMlC,GAAtBA,EACbs1E,GAAiB,SAACt1E,EAAGuL,GAAJ,OAAU9J,KAAKmB,IAAI,GAAIyyE,GAAWr1E,GAAKuL,EAAvC,EAEvB,SAASgqE,GAAQC,GAEf,OAAkB,IADHA,EAAW/zE,KAAKmB,IAAI,GAAIyyE,GAAWG,GAEnD,CAED,SAASC,GAAMpyE,EAAKC,EAAKoyE,GACvB,IAAMC,EAAYl0E,KAAKmB,IAAI,GAAI8yE,GACzB3wE,EAAQtD,KAAKoB,MAAMQ,EAAMsyE,GAE/B,OADYl0E,KAAKwgD,KAAK3+C,EAAMqyE,GACf5wE,CACd,CAqBD,SAASuuE,GAAcC,EAAvB,GAAsD,IAAXlwE,EAAW,EAAXA,IAAKC,EAAM,EAANA,IAC9CD,EAAMvG,EAAgBy2E,EAAkBlwE,IAAKA,GAW7C,IAVA,IAAM2Z,EAAQ,GACR44D,EAASP,GAAWhyE,GACtBwyE,EAvBN,SAAkBxyE,EAAKC,GAGrB,IAFA,IACIoyE,EAAWL,GADD/xE,EAAMD,GAEboyE,GAAMpyE,EAAKC,EAAKoyE,GAAY,IACjCA,IAEF,KAAOD,GAAMpyE,EAAKC,EAAKoyE,GAAY,IACjCA,IAEF,OAAOj0E,KAAK4B,IAAIqyE,EAAUL,GAAWhyE,GACtC,CAaWyyE,CAASzyE,EAAKC,GACpBswE,EAAYiC,EAAM,EAAIp0E,KAAKmB,IAAI,GAAInB,KAAKa,IAAIuzE,IAAQ,EAClDX,EAAWzzE,KAAKmB,IAAI,GAAIizE,GACxBxvC,EAAOuvC,EAASC,EAAMp0E,KAAKmB,IAAI,GAAIgzE,GAAU,EAC7C7wE,EAAQtD,KAAKiB,OAAOW,EAAMgjC,GAAQutC,GAAaA,EAC/C7wD,EAASthB,KAAKoB,OAAOQ,EAAMgjC,GAAQ6uC,EAAW,IAAMA,EAAW,GACjEt3D,EAAcnc,KAAKoB,OAAOkC,EAAQge,GAAUthB,KAAKmB,IAAI,GAAIizE,IACzD55E,EAAQa,EAAgBy2E,EAAkBlwE,IAAK5B,KAAKiB,OAAO2jC,EAAOtjB,EAASnF,EAAcnc,KAAKmB,IAAI,GAAIizE,IAAQjC,GAAaA,GACxH33E,EAAQqH,GACb0Z,EAAMxc,KAAK,CAACvE,MAAAA,EAAO0oB,MAAO4wD,GAAQt5E,GAAQ2hB,YAAAA,IACtCA,GAAe,GACjBA,EAAcA,EAAc,GAAK,GAAK,GAEtCA,IAEEA,GAAe,KAEjBA,EAAc,EACdg2D,IAFAiC,GAEmB,EAAI,EAAIjC,GAE7B33E,EAAQwF,KAAKiB,OAAO2jC,EAAOtjB,EAASnF,EAAcnc,KAAKmB,IAAI,GAAIizE,IAAQjC,GAAaA,EAEtF,IAAMmC,EAAWj5E,EAAgBy2E,EAAkBjwE,IAAKrH,GAGxD,OAFA+gB,EAAMxc,KAAK,CAACvE,MAAO85E,EAAUpxD,MAAO4wD,GAAQQ,GAAWn4D,YAAAA,IAEhDZ,CACR,KAEoBg5D,GAAAA,SAAAA,iCAiBnB33D,SAAAA,EAAYmgB,GAAK,6BACf,cAAMA,IAGDz5B,WAAQoI,EAEb,EAAKnI,SAAMmI,EAEX,EAAK+lE,iBAAc/lE,EACnB,EAAKgmE,YAAc,EATJ,CAUhB,qCAEDniD,SAAMoY,EAAK3qC,GACT,IAAMxC,EAAQy4E,GAAgBp4E,UAAU00B,MAAMtzB,MAAM4c,KAAM,CAAC8uB,EAAK3qC,IAChE,GAAc,IAAVxC,EAIJ,OAAOY,EAASZ,IAAUA,EAAQ,EAAIA,EAAQ,KAH5Cqe,KAAK27D,OAAQ,CAIhB,oCAED3wB,WACE,MAAmBhrC,KAAKwtB,WAAU,GAA3BzkC,EAAP,EAAOA,IAAKC,EAAZ,EAAYA,IAEZgX,KAAKjX,IAAMxG,EAASwG,GAAO5B,KAAK6B,IAAI,EAAGD,GAAO,KAC9CiX,KAAKhX,IAAMzG,EAASyG,GAAO7B,KAAK6B,IAAI,EAAGA,GAAO,KAE1CgX,KAAKjb,QAAQ2jB,cACf1I,KAAK27D,OAAQ,GAKX37D,KAAK27D,OAAS37D,KAAKjX,MAAQiX,KAAKgqC,gBAAkBznD,EAASyd,KAAK8pC,YAClE9pC,KAAKjX,IAAMA,IAAQiyE,GAAeh7D,KAAKjX,IAAK,GAAKiyE,GAAeh7D,KAAKjX,KAAM,GAAKiyE,GAAeh7D,KAAKjX,IAAK,IAG3GiX,KAAKs6D,wBACN,uCAEDA,WACE,MAAiCt6D,KAAKnS,gBAA/BC,EAAP,EAAOA,WAAYC,EAAnB,EAAmBA,WACfhF,EAAMiX,KAAKjX,IACXC,EAAMgX,KAAKhX,IAETuxE,EAAS70E,SAAAA,GAAAA,OAAMqD,EAAM+E,EAAa/E,EAAMrD,CAA/BA,EACT80E,EAAS90E,SAAAA,GAAAA,OAAMsD,EAAM+E,EAAa/E,EAAMtD,CAA/BA,EAEXqD,IAAQC,IACND,GAAO,GACTwxE,EAAO,GACPC,EAAO,MAEPD,EAAOS,GAAejyE,GAAM,IAC5ByxE,EAAOQ,GAAehyE,EAAK,MAG3BD,GAAO,GACTwxE,EAAOS,GAAehyE,GAAM,IAE1BA,GAAO,GAETwxE,EAAOQ,GAAejyE,EAAK,IAG7BiX,KAAKjX,IAAMA,EACXiX,KAAKhX,IAAMA,CACZ,2BAEDsiD,WACE,IAAMt8B,EAAOhP,KAAKjb,QAMZ2d,EAAQs2D,GAJY,CACxBjwE,IAAKiX,KAAK8pC,SACV9gD,IAAKgX,KAAK6pC,UAEmC7pC,MAkB/C,MAdoB,UAAhBgP,EAAKrG,QACP/f,EAAmB8Z,EAAO1C,KAAM,SAG9BgP,EAAKzrB,SACPmf,EAAMnf,UAENyc,KAAKvV,MAAQuV,KAAKhX,IAClBgX,KAAKtV,IAAMsV,KAAKjX,MAEhBiX,KAAKvV,MAAQuV,KAAKjX,IAClBiX,KAAKtV,IAAMsV,KAAKhX,KAGX0Z,CACR,iCAMD2rB,SAAiB1sC,GACf,YAAiBkR,IAAVlR,EACH,IACA+f,GAAa/f,EAAOqe,KAAK4C,MAAM7d,QAAQ6c,OAAQ5B,KAAKjb,QAAQ2d,MAAML,OACvE,0BAKDojB,WACE,IAAMh7B,EAAQuV,KAAKjX,KAEnB,yDAEAiX,KAAK44D,YAAchxE,EAAM6C,GACzBuV,KAAK64D,YAAcjxE,EAAMoY,KAAKhX,KAAOpB,EAAM6C,EAC5C,iCAEDuD,SAAiBrM,GAIf,YAHckR,IAAVlR,GAAiC,IAAVA,IACzBA,EAAQqe,KAAKjX,KAED,OAAVpH,GAAkBgH,MAAMhH,GACnB4rC,IAEFvtB,KAAK61B,mBAAmBl0C,IAAUqe,KAAKjX,IAC1C,GACCnB,EAAMjG,GAASqe,KAAK44D,aAAe54D,KAAK64D,YAC9C,iCAED/pB,SAAiBljC,GACf,IAAMmjC,EAAU/uC,KAAKgvC,mBAAmBpjC,GACxC,OAAOzkB,KAAKmB,IAAI,GAAI0X,KAAK44D,YAAc7pB,EAAU/uC,KAAK64D,YACvD,OAvJkB6C,CAAyBzyB,ICjE9C,SAAS2yB,GAAsB5sD,GAC7B,IAAM43B,EAAW53B,EAAKtM,MAEtB,GAAIkkC,EAASp+B,SAAWwG,EAAKxG,QAAS,CACpC,IAAML,EAAUyJ,GAAUg1B,EAASn8B,iBACnC,OAAO/nB,EAAekkD,EAAShiC,MAAQgiC,EAAShiC,KAAK7d,KAAMugB,GAAS1C,KAAK7d,MAAQohB,EAAQiE,MAC1F,CACD,OAAO,CACR,CAUD,SAASyvD,GAAgB7xE,EAAO0wB,EAAK3zB,EAAMgC,EAAKC,GAC9C,OAAIgB,IAAUjB,GAAOiB,IAAUhB,EACtB,CACLyB,MAAOiwB,EAAO3zB,EAAO,EACrB2D,IAAKgwB,EAAO3zB,EAAO,GAEZiD,EAAQjB,GAAOiB,EAAQhB,EACzB,CACLyB,MAAOiwB,EAAM3zB,EACb2D,IAAKgwB,GAIF,CACLjwB,MAAOiwB,EACPhwB,IAAKgwB,EAAM3zB,EAEd,CAKD,SAAS+0E,GAAmB91D,GA2C1B,IAbA,IA5DwBd,EAAKN,EAAMwpB,EA4D7BmF,EAAO,CACXliC,EAAG2U,EAAMuC,KAAOvC,EAAM2pD,SAASpnD,KAC/B9V,EAAGuT,EAAMqC,MAAQrC,EAAM2pD,SAAStnD,MAChCxZ,EAAGmX,EAAMoC,IAAMpC,EAAM2pD,SAASvnD,IAC9BthB,EAAGkf,EAAMsC,OAAStC,EAAM2pD,SAASrnD,QAE7ByzD,EAASh6E,OAAO4M,OAAO,CAAC,EAAG4kC,GAC3BsZ,EAAa,GACb1kC,EAAU,GACV6zD,EAAah2D,EAAMi2D,aAAat4E,OAChCu4E,EAAiBl2D,EAAMjhB,QAAQg3C,YAC/BogC,EAAkBD,EAAeE,kBAAoBl1E,EAAK80E,EAAa,EAEpEx4E,EAAI,EAAGA,EAAIw4E,EAAYx4E,IAAK,CACnC,IAAMwrB,EAAOktD,EAAe5nD,WAAWtO,EAAMq2D,qBAAqB74E,IAClE2kB,EAAQ3kB,GAAKwrB,EAAK7G,QAClB,IAAMg0B,EAAgBn2B,EAAMs2D,iBAAiB94E,EAAGwiB,EAAMu2D,YAAcp0D,EAAQ3kB,GAAI24E,GAC1EK,EAAS3qD,GAAO7C,EAAKpK,MACrBgrD,GA9EgB1qD,EA8EYc,EAAMd,IA9EbN,EA8EkB43D,EA7E/CpuC,EAAQxsC,EAD2BwsC,EA8EoBpoB,EAAMi2D,aAAaz4E,IA7EjD4qC,EAAQ,CAACA,GAC3B,CACLl7B,EAAG+X,GAAa/F,EAAKN,EAAKkG,OAAQsjB,GAClC98B,EAAG88B,EAAMzqC,OAASihB,EAAKG,aA2EvB8nC,EAAWrpD,GAAKosE,EAEhB,IAAMpiB,EAAejjD,GAAgByb,EAAMw1B,cAAch4C,GAAK24E,GACxDnyE,EAAQ7C,KAAKiB,MAAMe,GAAUqkD,IAGnCivB,GAAaV,EAAQxoC,EAAMia,EAFXquB,GAAgB7xE,EAAOmyC,EAAcx2C,EAAGiqE,EAAS18D,EAAG,EAAG,KACvD2oE,GAAgB7xE,EAAOmyC,EAAct2C,EAAG+pE,EAASt+D,EAAG,GAAI,KAEzE,CAED0U,EAAM02D,eACJnpC,EAAKliC,EAAI0qE,EAAO1qE,EAChB0qE,EAAOtpE,EAAI8gC,EAAK9gC,EAChB8gC,EAAK1kC,EAAIktE,EAAOltE,EAChBktE,EAAOj1E,EAAIysC,EAAKzsC,GAIlBkf,EAAM22D,iBAwBR,SAA8B32D,EAAO6mC,EAAY1kC,GAQ/C,IAPA,IAAM7b,EAAQ,GACR0vE,EAAah2D,EAAMi2D,aAAat4E,OAChCqrB,EAAOhJ,EAAMjhB,QACb63E,EAAQhB,GAAsB5sD,GAAQ,EACtC6tD,EAAgB72D,EAAMu2D,YACtBJ,EAAkBntD,EAAK+sB,YAAYqgC,kBAAoBl1E,EAAK80E,EAAa,EAEtEx4E,EAAI,EAAGA,EAAIw4E,EAAYx4E,IAAK,CACnC,IAAMs5E,EAAqB92D,EAAMs2D,iBAAiB94E,EAAGq5E,EAAgBD,EAAQz0D,EAAQ3kB,GAAI24E,GACnFnyE,EAAQ7C,KAAKiB,MAAMe,GAAUoB,GAAgBuyE,EAAmB9yE,MAAQvC,KACxEV,EAAO8lD,EAAWrpD,GAClBqC,EAAIk3E,GAAUD,EAAmBj3E,EAAGkB,EAAKuK,EAAGtH,GAC5C8lB,EAAYktD,GAAqBhzE,GACjCue,EAAO00D,GAAiBH,EAAmBn3E,EAAGoB,EAAKmM,EAAG4c,GAE5DxjB,EAAMpG,KAAK,CAETP,EAAGm3E,EAAmBn3E,EACtBE,EAAAA,EAGAiqB,UAAAA,EAGAvH,KAAAA,EACAH,IAAKviB,EACLwiB,MAAOE,EAAOxhB,EAAKmM,EACnBoV,OAAQziB,EAAIkB,EAAKuK,GAEpB,CACD,OAAOhF,CACR,CAxD0B4wE,CAAqBl3D,EAAO6mC,EAAY1kC,EAClE,CAED,SAASs0D,GAAaV,EAAQxoC,EAAMvpC,EAAOmzE,EAASC,GAClD,IAAMruE,EAAM5H,KAAKa,IAAIb,KAAK4H,IAAI/E,IACxBgG,EAAM7I,KAAKa,IAAIb,KAAK6I,IAAIhG,IAC1BrE,EAAI,EACJE,EAAI,EACJs3E,EAAQ1yE,MAAQ8oC,EAAKliC,GACvB1L,GAAK4tC,EAAKliC,EAAI8rE,EAAQ1yE,OAASsE,EAC/BgtE,EAAO1qE,EAAIlK,KAAK4B,IAAIgzE,EAAO1qE,EAAGkiC,EAAKliC,EAAI1L,IAC9Bw3E,EAAQzyE,IAAM6oC,EAAK9gC,IAC5B9M,GAAKw3E,EAAQzyE,IAAM6oC,EAAK9gC,GAAK1D,EAC7BgtE,EAAOtpE,EAAItL,KAAK6B,IAAI+yE,EAAOtpE,EAAG8gC,EAAK9gC,EAAI9M,IAErCy3E,EAAQ3yE,MAAQ8oC,EAAK1kC,GACvBhJ,GAAK0tC,EAAK1kC,EAAIuuE,EAAQ3yE,OAASuF,EAC/B+rE,EAAOltE,EAAI1H,KAAK4B,IAAIgzE,EAAOltE,EAAG0kC,EAAK1kC,EAAIhJ,IAC9Bu3E,EAAQ1yE,IAAM6oC,EAAKzsC,IAC5BjB,GAAKu3E,EAAQ1yE,IAAM6oC,EAAKzsC,GAAKkJ,EAC7B+rE,EAAOj1E,EAAIK,KAAK6B,IAAI+yE,EAAOj1E,EAAGysC,EAAKzsC,EAAIjB,GAE1C,CAoCD,SAASm3E,GAAqBhzE,GAC5B,OAAc,IAAVA,GAAyB,MAAVA,EACV,SACEA,EAAQ,IACV,OAGF,OACR,CAED,SAASizE,GAAiBt3E,EAAGuN,EAAGjG,GAM9B,MALc,UAAVA,EACFtH,GAAKuN,EACc,WAAVjG,IACTtH,GAAMuN,EAAI,GAELvN,CACR,CAED,SAASo3E,GAAUl3E,EAAGyL,EAAGtH,GAMvB,OALc,KAAVA,GAA0B,MAAVA,EAClBnE,GAAMyL,EAAI,GACDtH,EAAQ,KAAOA,EAAQ,MAChCnE,GAAKyL,GAEAzL,CACR,CAmDD,SAASw3E,GAAer3D,EAAO8G,EAAQgvB,EAAU23B,GAC/C,IAAOvuD,EAAOc,EAAPd,IACP,GAAI42B,EAEF52B,EAAIkI,IAAIpH,EAAMq1B,QAASr1B,EAAMs1B,QAASxuB,EAAQ,EAAG1lB,OAC5C,CAEL,IAAI+0C,EAAgBn2B,EAAMs2D,iBAAiB,EAAGxvD,GAC9C5H,EAAIoI,OAAO6uB,EAAcx2C,EAAGw2C,EAAct2C,GAE1C,IAAK,IAAIrC,EAAI,EAAGA,EAAIiwE,EAAYjwE,IAC9B24C,EAAgBn2B,EAAMs2D,iBAAiB94E,EAAGspB,GAC1C5H,EAAIqI,OAAO4uB,EAAcx2C,EAAGw2C,EAAct2C,EAE7C,CACF,SD/LoB61E,GAAAA,KAEP,uBAFOA,GAAAA,WAOD,CAChBh5D,MAAO,CACL1f,SAAUmnB,GAAM7H,WAAWc,YAC3BiH,MAAO,CACLi9B,SAAS,UCqNIg2B,GAAAA,SAAAA,iCA0EnBv5D,SAAAA,EAAYmgB,GAAK,6BACf,cAAMA,IAGDmX,aAAUxoC,EAEf,EAAKyoC,aAAUzoC,EAEf,EAAK0pE,iBAAc1pE,EAEnB,EAAKopE,aAAe,GACpB,EAAKU,iBAAmB,GAXT,CAYhB,6CAED9xB,WAEE,IAAM1iC,EAAUnI,KAAK2vD,SAAW/9C,GAAUgqD,GAAsB57D,KAAKjb,SAAW,GAC1EmO,EAAI8M,KAAKwJ,MAAQxJ,KAAKyP,SAAWtH,EAAQqB,MACzClY,EAAI0O,KAAKoM,OAASpM,KAAKic,UAAY9T,EAAQiE,OACjDpM,KAAKq7B,QAAUl0C,KAAKoB,MAAMyX,KAAKuI,KAAOrV,EAAI,EAAIiV,EAAQI,MACtDvI,KAAKs7B,QAAUn0C,KAAKoB,MAAMyX,KAAKoI,IAAM9W,EAAI,EAAI6W,EAAQC,KACrDpI,KAAKu8D,YAAcp1E,KAAKoB,MAAMpB,KAAK4B,IAAImK,EAAG5B,GAAK,EAChD,oCAED05C,WACE,MAAmBhrC,KAAKwtB,WAAU,GAA3BzkC,EAAP,EAAOA,IAAKC,EAAZ,EAAYA,IAEZgX,KAAKjX,IAAMxG,EAASwG,KAASJ,MAAMI,GAAOA,EAAM,EAChDiX,KAAKhX,IAAMzG,EAASyG,KAASL,MAAMK,GAAOA,EAAM,EAGhDgX,KAAKs6D,wBACN,iCAMDO,WACE,OAAO1zE,KAAKwgD,KAAK3nC,KAAKu8D,YAAcX,GAAsB57D,KAAKjb,SAChE,mCAEDynD,SAAmB9pC,GAAO,WACxB03D,GAAgBp4E,UAAUwqD,mBAAmBtqD,KAAK8d,KAAM0C,GAGxD1C,KAAKi8D,aAAej8D,KAAK+sB,YACtBzoC,KAAI,SAAC3C,EAAOwC,GACX,IAAMiqC,EAAQqnB,EAAa,EAAK1wD,QAAQg3C,YAAY/4C,SAAU,CAACrB,EAAOwC,GAAQ,GAC9E,OAAOiqC,GAAmB,IAAVA,EAAcA,EAAQ,EACvC,IACAnZ,QAAO,SAACvvB,EAAGlC,GAAJ,OAAU,EAAKof,MAAM8yB,kBAAkBlyC,EAAvC,GACX,oBAEDuoD,WACE,IAAM/8B,EAAOhP,KAAKjb,QAEdiqB,EAAKxG,SAAWwG,EAAK+sB,YAAYvzB,QACnCszD,GAAmB97D,MAEnBA,KAAK08D,eAAe,EAAG,EAAG,EAAG,EAEhC,+BAEDA,SAAea,EAAcC,EAAeC,EAAaC,GACvD19D,KAAKq7B,SAAWl0C,KAAKoB,OAAOg1E,EAAeC,GAAiB,GAC5Dx9D,KAAKs7B,SAAWn0C,KAAKoB,OAAOk1E,EAAcC,GAAkB,GAC5D19D,KAAKu8D,aAAep1E,KAAK4B,IAAIiX,KAAKu8D,YAAc,EAAGp1E,KAAK6B,IAAIu0E,EAAcC,EAAeC,EAAaC,GACvG,8BAEDliC,SAAcr3C,GAIZ,OAAOoG,GAAgBpG,GAHCiD,GAAO4Y,KAAKi8D,aAAat4E,QAAU,IAGVsF,GAF9B+W,KAAKjb,QAAQizC,YAAc,GAG/C,8CAED4D,SAA8Bj6C,GAC5B,GAAID,EAAcC,GAChB,OAAO4rC,IAIT,IAAMowC,EAAgB39D,KAAKu8D,aAAev8D,KAAKhX,IAAMgX,KAAKjX,KAC1D,OAAIiX,KAAKjb,QAAQxB,SACPyc,KAAKhX,IAAMrH,GAASg8E,GAEtBh8E,EAAQqe,KAAKjX,KAAO40E,CAC7B,8CAEDC,SAA8B1zE,GAC5B,GAAIxI,EAAcwI,GAChB,OAAOqjC,IAGT,IAAMswC,EAAiB3zE,GAAY8V,KAAKu8D,aAAev8D,KAAKhX,IAAMgX,KAAKjX,MACvE,OAAOiX,KAAKjb,QAAQxB,QAAUyc,KAAKhX,IAAM60E,EAAiB79D,KAAKjX,IAAM80E,CACtE,qCAEDxB,SAAqBl4E,GACnB,IAAM43C,EAAc/7B,KAAKi8D,cAAgB,GAEzC,GAAI93E,GAAS,GAAKA,EAAQ43C,EAAYp4C,OAAQ,CAC5C,IAAMm6E,EAAa/hC,EAAY53C,GAC/B,OA1LN,SAAiC0xB,EAAQ1xB,EAAOiqC,GAC9C,OAAO9b,GAAcuD,EAAQ,CAC3BuY,MAAAA,EACAjqC,MAAAA,EACArC,KAAM,cAET,CAoLYi8E,CAAwB/9D,KAAKiM,aAAc9nB,EAAO25E,EAC1D,CACF,iCAEDxB,SAAiBn4E,EAAO65E,GAAyC,IAArB7B,EAAqB,uDAAH,EACtDnyE,EAAQgW,KAAKw7B,cAAcr3C,GAASsD,EAAU00E,EACpD,MAAO,CACLx2E,EAAGwB,KAAK6I,IAAIhG,GAASg0E,EAAqBh+D,KAAKq7B,QAC/Cx1C,EAAGsB,KAAK4H,IAAI/E,GAASg0E,EAAqBh+D,KAAKs7B,QAC/CtxC,MAAAA,EAEH,yCAEDoyC,SAAyBj4C,EAAOxC,GAC9B,OAAOqe,KAAKs8D,iBAAiBn4E,EAAO6b,KAAK47B,8BAA8Bj6C,GACxE,gCAEDs8E,SAAgB95E,GACd,OAAO6b,KAAKo8B,yBAAyBj4C,GAAS,EAAG6b,KAAKivC,eACvD,sCAEDivB,SAAsB/5E,GACpB,MAAmC6b,KAAK28D,iBAAiBx4E,GACzD,MAAO,CACLokB,KAFF,EAAOA,KAGLH,IAHF,EAAaA,IAIXC,MAJF,EAAkBA,MAKhBC,OALF,EAAyBA,OAO1B,+BAKDmpC,WACE,MAA4CzxC,KAAKjb,QAA1Cof,EAAP,EAAOA,gBAAwB23B,EAA/B,EAAwBjzB,KAAOizB,SAC/B,GAAI33B,EAAiB,CACnB,IAAMe,EAAMlF,KAAKkF,IACjBA,EAAImG,OACJnG,EAAIgI,YACJmwD,GAAer9D,KAAMA,KAAK47B,8BAA8B57B,KAAKq6D,WAAYv+B,EAAU97B,KAAKi8D,aAAat4E,QACrGuhB,EAAImI,YACJnI,EAAI2K,UAAY1L,EAChBe,EAAIwI,OACJxI,EAAIuG,SACL,CACF,yBAKDkmC,WAAW,IAMLnuD,EAAGilB,EAAQ80B,EANN,OACHr4B,EAAMlF,KAAKkF,IACX8J,EAAOhP,KAAKjb,QACX82C,EAA4B7sB,EAA5B6sB,WAAYhzB,EAAgBmG,EAAhBnG,KAAMQ,EAAU2F,EAAV3F,OACnBoqD,EAAazzD,KAAKi8D,aAAat4E,OAqBrC,GAjBIqrB,EAAK+sB,YAAYvzB,SA9UzB,SAAyBxC,EAAOytD,GAG9B,IAFA,IAAOvuD,EAA+Bc,EAA/Bd,IAAe62B,EAAgB/1B,EAA1BjhB,QAAUg3C,YAEbv4C,EAAIiwE,EAAa,EAAGjwE,GAAK,EAAGA,IAAK,CACxC,IAAMitD,EAAc1U,EAAYznB,WAAWtO,EAAMq2D,qBAAqB74E,IAChEg5E,EAAS3qD,GAAO4+B,EAAY7rC,MAClC,EAAoDoB,EAAM22D,iBAAiBn5E,GAApEmC,EAAP,EAAOA,EAAGE,EAAV,EAAUA,EAAGiqB,EAAb,EAAaA,UAAWvH,EAAxB,EAAwBA,KAAMH,EAA9B,EAA8BA,IAAKC,EAAnC,EAAmCA,MAAOC,EAA1C,EAA0CA,OACnCkC,EAAiBimC,EAAjBjmC,cAEP,IAAK9oB,EAAc8oB,GAAgB,CACjC,IAAMk2C,EAAe/uC,GAAc8+B,EAAYiQ,cACzCv4C,EAAUyJ,GAAU6+B,EAAYhmC,iBACtCvF,EAAI2K,UAAYrF,EAEhB,IAAM2zD,EAAe51D,EAAOJ,EAAQI,KAC9B61D,EAAch2D,EAAMD,EAAQC,IAC5Bi2D,EAAgBh2D,EAAQE,EAAOJ,EAAQqB,MACvC80D,EAAiBh2D,EAASF,EAAMD,EAAQiE,OAE1CrqB,OAAOwgB,OAAOm+C,GAActK,MAAK1wD,SAAAA,GAAAA,OAAW,IAANA,CAALA,KACnCwf,EAAIgI,YACJyD,GAAmBzL,EAAK,CACtBvf,EAAGw4E,EACHt4E,EAAGu4E,EACHlrE,EAAGmrE,EACH/sE,EAAGgtE,EACHxxD,OAAQ4zC,IAEVx7C,EAAIwI,QAEJxI,EAAIwL,SAASytD,EAAcC,EAAaC,EAAeC,EAE1D,CAEDxvD,GACE5J,EACAc,EAAMi2D,aAAaz4E,GACnBmC,EACAE,EAAK22E,EAAOz3D,WAAa,EACzBy3D,EACA,CACEp8D,MAAOqwC,EAAYrwC,MACnB0P,UAAWA,EACXC,aAAc,UAGnB,CACF,CAgSKwuD,CAAgBv+D,KAAMyzD,GAGpB5qD,EAAKL,SACPxI,KAAK0C,MAAMtW,SAAQ,SAACs2B,EAAMv+B,GACxB,GAAc,IAAVA,EAAa,CACfskB,EAAS,EAAKmzB,8BAA8BlZ,EAAK/gC,OACjD,IAAM4iB,EAAU,EAAK0H,WAAW9nB,GAC1BssD,EAAc5nC,EAAKyL,WAAW/P,GAC9BmsC,EAAoBrnC,EAAOiL,WAAW/P,IAtRtD,SAAwByB,EAAOw4D,EAAc1xD,EAAQ2mD,EAAYvjB,GAC/D,IAAMhrC,EAAMc,EAAMd,IACZ42B,EAAW0iC,EAAa1iC,SAEvB17B,EAAoBo+D,EAApBp+D,MAAO0I,EAAa01D,EAAb11D,WAERgzB,IAAa23B,IAAgBrzD,IAAU0I,GAAagE,EAAS,IAInE5H,EAAImG,OACJnG,EAAIqK,YAAcnP,EAClB8E,EAAI4D,UAAYA,EAChB5D,EAAI2sC,YAAY3B,EAAW5mC,MAC3BpE,EAAI4sC,eAAiB5B,EAAW3mC,WAEhCrE,EAAIgI,YACJmwD,GAAer3D,EAAO8G,EAAQgvB,EAAU23B,GACxCvuD,EAAImI,YACJnI,EAAI0I,SACJ1I,EAAIuG,UACL,CAmQSgzD,CAAe,EAAMhuB,EAAahoC,EAAQgrD,EAAY/iB,EACvD,CACF,IAGC7U,EAAWrzB,QAAS,CAGtB,IAFAtD,EAAImG,OAEC7nB,EAAIiwE,EAAa,EAAGjwE,GAAK,EAAGA,IAAK,CACpC,IAAMitD,EAAc5U,EAAWvnB,WAAWtU,KAAKq8D,qBAAqB74E,IAC7D4c,EAAoBqwC,EAApBrwC,MAAO0I,EAAa2nC,EAAb3nC,UAETA,GAAc1I,IAInB8E,EAAI4D,UAAYA,EAChB5D,EAAIqK,YAAcnP,EAElB8E,EAAI2sC,YAAYpB,EAAYvvB,YAC5Bhc,EAAI4sC,eAAiBrB,EAAYtvB,iBAEjC1Y,EAASzI,KAAK47B,8BAA8B5sB,EAAKtM,MAAMnf,QAAUyc,KAAKjX,IAAMiX,KAAKhX,KACjFu0C,EAAWv9B,KAAKs8D,iBAAiB94E,EAAGilB,GACpCvD,EAAIgI,YACJhI,EAAIoI,OAAOtN,KAAKq7B,QAASr7B,KAAKs7B,SAC9Bp2B,EAAIqI,OAAOgwB,EAAS53C,EAAG43C,EAAS13C,GAChCqf,EAAI0I,SACL,CAED1I,EAAIuG,SACL,CACF,2BAKDsmC,WAAe,2BAKfE,WAAa,WACL/sC,EAAMlF,KAAKkF,IACX8J,EAAOhP,KAAKjb,QACZ6hD,EAAW53B,EAAKtM,MAEtB,GAAKkkC,EAASp+B,QAAd,CAIA,IACIC,EAAQe,EADNwuB,EAAah4B,KAAKw7B,cAAc,GAGtCt2B,EAAImG,OACJnG,EAAI8H,UAAUhN,KAAKq7B,QAASr7B,KAAKs7B,SACjCp2B,EAAInE,OAAOi3B,GACX9yB,EAAI4K,UAAY,SAChB5K,EAAI6K,aAAe,SAEnB/P,KAAK0C,MAAMtW,SAAQ,SAACs2B,EAAMv+B,GACxB,GAAc,IAAVA,GAAgB6qB,EAAKzrB,QAAzB,CAIA,IAAMktD,EAAc7J,EAAStyB,WAAW,EAAKrI,WAAW9nB,IAClDgqD,EAAWt8B,GAAO4+B,EAAY7rC,MAGpC,GAFA6D,EAAS,EAAKmzB,8BAA8B,EAAKl5B,MAAMve,GAAOxC,OAE1D8uD,EAAYlmC,kBAAmB,CACjCrF,EAAIN,KAAOupC,EAASrjC,OACpBtB,EAAQtE,EAAI8F,YAAY0X,EAAK0L,OAAO5kB,MACpCtE,EAAI2K,UAAY4gC,EAAYjmC,cAE5B,IAAMrC,EAAUyJ,GAAU6+B,EAAYhmC,iBACtCvF,EAAIwL,UACDlH,EAAQ,EAAIrB,EAAQI,MACpBE,EAAS0lC,EAASpnD,KAAO,EAAIohB,EAAQC,IACtCoB,EAAQrB,EAAQqB,MAChB2kC,EAASpnD,KAAOohB,EAAQiE,OAE3B,CAED0C,GAAW5J,EAAKwd,EAAK0L,MAAO,GAAI3lB,EAAQ0lC,EAAU,CAChD/tC,MAAOqwC,EAAYrwC,OArBpB,CAuBF,IAED8E,EAAIuG,SAvCH,CAwCF,0BAKDymC,WAAc,OAvVKorB,CAA0BlD,YAA1BkD,GAAAA,KAEP,wBAFOA,GAAAA,WAOD,CAChB90D,SAAS,EAGTk2D,SAAS,EACTnhC,SAAU,YAEV1B,WAAY,CACVrzB,SAAS,EACTM,UAAW,EACXoY,WAAY,GACZC,iBAAkB,GAGpBtY,KAAM,CACJizB,UAAU,GAGZ9D,WAAY,EAGZt1B,MAAO,CAEL6H,mBAAmB,EAEnBvnB,SAAUmnB,GAAM7H,WAAWE,SAG7Bu5B,YAAa,CACXvxB,mBAAe3X,EAGf4X,gBAAiB,EAGjBjC,SAAS,EAGT5D,KAAM,CACJ7d,KAAM,IAIR/D,SAfW,SAeForC,GACP,OAAOA,CACR,EAGDjmB,QAAS,EAGTi0D,mBAAmB,aA1DJkB,GAAAA,gBA8DI,CACrB,mBAAoB,cACpB,oBAAqB,QACrB,cAAe,kBAjEEA,GAAAA,cAoEE,CACnBzhC,WAAY,CACVx0B,UAAW,UChWjB,IAAMs3D,GAAY,CAChBC,YAAa,CAACC,QAAQ,EAAM93E,KAAM,EAAGo0E,MAAO,KAC5C2D,OAAQ,CAACD,QAAQ,EAAM93E,KAAM,IAAMo0E,MAAO,IAC1C4D,OAAQ,CAACF,QAAQ,EAAM93E,KAAM,IAAOo0E,MAAO,IAC3C6D,KAAM,CAACH,QAAQ,EAAM93E,KAAM,KAASo0E,MAAO,IAC3C8D,IAAK,CAACJ,QAAQ,EAAM93E,KAAM,MAAUo0E,MAAO,IAC3C+D,KAAM,CAACL,QAAQ,EAAO93E,KAAM,OAAWo0E,MAAO,GAC9CgE,MAAO,CAACN,QAAQ,EAAM93E,KAAM,OAASo0E,MAAO,IAC5CiE,QAAS,CAACP,QAAQ,EAAO93E,KAAM,OAASo0E,MAAO,GAC/CkE,KAAM,CAACR,QAAQ,EAAM93E,KAAM,SAMvBu4E,GAA6Cv9E,OAAO2B,KAAKi7E,IAM/D,SAASY,GAAO14E,EAAGC,GACjB,OAAOD,EAAIC,CACZ,CAOD,SAAS4vB,GAAM1Q,EAAOtG,GACpB,GAAIhe,EAAcge,GAChB,OAAO,KAGT,IAAM8/D,EAAUx5D,EAAMy5D,SACtB,EAAoCz5D,EAAM05D,WAAnCC,EAAP,EAAOA,OAAQv3E,EAAf,EAAeA,MAAOw3E,EAAtB,EAAsBA,WAClBj+E,EAAQ+d,EAaZ,MAXsB,oBAAXigE,IACTh+E,EAAQg+E,EAAOh+E,IAIZY,EAASZ,KACZA,EAA0B,kBAAXg+E,EACXH,EAAQ9oD,MAAM/0B,EAA4Bg+E,GAC1CH,EAAQ9oD,MAAM/0B,IAGN,OAAVA,EACK,MAGLyG,IACFzG,EAAkB,SAAVyG,IAAqBK,EAASm3E,KAA8B,IAAfA,EAEjDJ,EAAQ1iC,QAAQn7C,EAAOyG,GADvBo3E,EAAQ1iC,QAAQn7C,EAAO,UAAWi+E,KAIhCj+E,EACT,CAUD,SAASk+E,GAA0BC,EAAS/2E,EAAKC,EAAK+2E,GAGpD,IAFA,IAAMh8E,EAAOu7E,GAAM37E,OAEVH,EAAI87E,GAAMz6E,QAAQi7E,GAAUt8E,EAAIO,EAAO,IAAKP,EAAG,CACtD,IAAMw8E,EAAWrB,GAAUW,GAAM97E,IAC3BmgC,EAASq8C,EAAS7E,MAAQ6E,EAAS7E,MAAQ74E,OAAO29E,iBAExD,GAAID,EAASnB,QAAU13E,KAAKwgD,MAAM3+C,EAAMD,IAAQ46B,EAASq8C,EAASj5E,QAAUg5E,EAC1E,OAAOT,GAAM97E,EAEhB,CAED,OAAO87E,GAAMv7E,EAAO,EACrB,CAuCD,SAASm8E,GAAQx9D,EAAOy9D,EAAMC,GAC5B,GAAKA,GAEE,GAAIA,EAAWz8E,OAAQ,CAC5B,MAAiBwH,GAAQi1E,EAAYD,GAA9B30E,EAAP,EAAOA,GAAID,EAAX,EAAWA,GAEXmX,EADkB09D,EAAW50E,IAAO20E,EAAOC,EAAW50E,GAAM40E,EAAW70E,KACpD,CACpB,OALCmX,EAAMy9D,IAAQ,CAMjB,CA8BD,SAASE,GAAoBr6D,EAAOzD,EAAQ+9D,GAC1C,IAII98E,EAAG7B,EAJD+gB,EAAQ,GAERpe,EAAM,CAAC,EACPP,EAAOwe,EAAO5e,OAGpB,IAAKH,EAAI,EAAGA,EAAIO,IAAQP,EAEtBc,EADA3C,EAAQ4gB,EAAO/e,IACFA,EAEbkf,EAAMxc,KAAK,CACTvE,MAAAA,EACA0oB,OAAO,IAMX,OAAiB,IAATtmB,GAAeu8E,EAxCzB,SAAuBt6D,EAAOtD,EAAOpe,EAAKg8E,GACxC,IAGIj2D,EAAOlmB,EAHLq7E,EAAUx5D,EAAMy5D,SAChBh4B,GAAS+3B,EAAQ1iC,QAAQp6B,EAAM,GAAG/gB,MAAO2+E,GACzC50E,EAAOgX,EAAMA,EAAM/e,OAAS,GAAGhC,MAGrC,IAAK0oB,EAAQo9B,EAAOp9B,GAAS3e,EAAM2e,GAASm1D,EAAQ/yE,IAAI4d,EAAO,EAAGi2D,IAChEn8E,EAAQG,EAAI+lB,KACC,IACX3H,EAAMve,GAAOkmB,OAAQ,GAGzB,OAAO3H,CACR,CA2B6C69D,CAAcv6D,EAAOtD,EAAOpe,EAAKg8E,GAAzC59D,CACrC,KAEoB89D,GAAAA,SAAAA,iCAgDnBz8D,SAAAA,EAAYuN,GAAO,6BACjB,cAAMA,IAGDsgB,OAAS,CACZjnB,KAAM,GACNmiB,OAAQ,GACRzG,IAAK,IAIP,EAAKo6C,MAAQ,MAEb,EAAKC,gBAAa7tE,EAClB,EAAK8tE,SAAW,CAAC,EACjB,EAAKC,aAAc,EACnB,EAAKlB,gBAAa7sE,EAhBD,CAiBlB,oCAED8pC,SAAKqf,GAAsB,IAAXhtC,EAAW,uDAAJ,CAAC,EAChBmxD,EAAOnkB,EAAUmkB,OAASnkB,EAAUmkB,KAAO,CAAC,GAE5CX,EAAUx/D,KAAKy/D,SAAW,IAAIoB,GAASpkC,MAAMuf,EAAU6kB,SAASj/C,MAEtE49C,EAAQ7iC,KAAK3tB,GAMb1pB,EAAQ66E,EAAKW,eAAgBtB,EAAQ5iC,WAErC58B,KAAK0/D,WAAa,CAChBC,OAAQQ,EAAKR,OACbv3E,MAAO+3E,EAAK/3E,MACZw3E,WAAYO,EAAKP,aAGnB,mDAAW5jB,GAEXh8C,KAAK4gE,YAAc5xD,EAAK+xD,UACzB,sBAODrqD,SAAMoY,EAAK3qC,GACT,YAAY0O,IAARi8B,EACK,KAEFpY,GAAM1W,KAAM8uB,EACpB,6BAEDuT,YACE,4DACAriC,KAAK4xB,OAAS,CACZjnB,KAAM,GACNmiB,OAAQ,GACRzG,IAAK,GAER,oCAED2kB,WACE,IAAMjmD,EAAUib,KAAKjb,QACfy6E,EAAUx/D,KAAKy/D,SACf/F,EAAO30E,EAAQo7E,KAAKzG,MAAQ,MAElC,EAAyC15D,KAAKnS,gBAAzC9E,EAAL,EAAKA,IAAKC,EAAV,EAAUA,IAAK8E,EAAf,EAAeA,WAAYC,EAA3B,EAA2BA,WAK3B,SAASizE,EAAar4D,GACf7a,GAAenF,MAAMggB,EAAO5f,OAC/BA,EAAM5B,KAAK4B,IAAIA,EAAK4f,EAAO5f,MAExBgF,GAAepF,MAAMggB,EAAO3f,OAC/BA,EAAM7B,KAAK6B,IAAIA,EAAK2f,EAAO3f,KAE9B,CAGI8E,GAAeC,IAElBizE,EAAahhE,KAAKihE,mBAIK,UAAnBl8E,EAAQ4jB,QAA+C,WAAzB5jB,EAAQ2d,MAAMre,QAC9C28E,EAAahhE,KAAKwtB,WAAU,KAIhCzkC,EAAMxG,EAASwG,KAASJ,MAAMI,GAAOA,GAAOy2E,EAAQ1iC,QAAQ3a,KAAKC,MAAOs3C,GACxE1wE,EAAMzG,EAASyG,KAASL,MAAMK,GAAOA,GAAOw2E,EAAQziC,MAAM5a,KAAKC,MAAOs3C,GAAQ,EAG9E15D,KAAKjX,IAAM5B,KAAK4B,IAAIA,EAAKC,EAAM,GAC/BgX,KAAKhX,IAAM7B,KAAK6B,IAAID,EAAM,EAAGC,EAC9B,gCAKDi4E,WACE,IAAMjsD,EAAMhV,KAAKkhE,qBACbn4E,EAAMzG,OAAOiF,kBACbyB,EAAM1G,OAAOurC,kBAMjB,OAJI7Y,EAAIrxB,SACNoF,EAAMisB,EAAI,GACVhsB,EAAMgsB,EAAIA,EAAIrxB,OAAS,IAElB,CAACoF,IAAAA,EAAKC,IAAAA,EACd,2BAKDsiD,WACE,IAAMvmD,EAAUib,KAAKjb,QACfo8E,EAAWp8E,EAAQo7E,KACnBv5B,EAAW7hD,EAAQ2d,MACnB09D,EAAiC,WAApBx5B,EAASviD,OAAsB2b,KAAKkhE,qBAAuBlhE,KAAKohE,YAE5D,UAAnBr8E,EAAQ4jB,QAAsBy3D,EAAWz8E,SAC3Cqc,KAAKjX,IAAMiX,KAAK8pC,UAAYs2B,EAAW,GACvCpgE,KAAKhX,IAAMgX,KAAK6pC,UAAYu2B,EAAWA,EAAWz8E,OAAS,IAG7D,IAAMoF,EAAMiX,KAAKjX,IAGX2Z,EnE1SH,SAAwBH,EAAkBxZ,EAAaC,GAI5D,IAHA,IAAIyB,EAAQ,EACRC,EAAM6X,EAAO5e,OAEV8G,EAAQC,GAAO6X,EAAO9X,GAAS1B,GACpC0B,IAEF,KAAOC,EAAMD,GAAS8X,EAAO7X,EAAM,GAAK1B,GACtC0B,IAGF,OAAOD,EAAQ,GAAKC,EAAM6X,EAAO5e,OAC7B4e,EAAOpgB,MAAMsI,EAAOC,GACpB6X,CACL,CmE4RiB8+D,CAAejB,EAAYr3E,EAF7BiX,KAAKhX,KAkBjB,OAXAgX,KAAKygE,MAAQU,EAASzH,OAAS9yB,EAAS58B,SACpC61D,GAA0BsB,EAASrB,QAAS9/D,KAAKjX,IAAKiX,KAAKhX,IAAKgX,KAAKshE,kBAAkBv4E,IArR/F,SAAoCid,EAAO2mC,EAAUmzB,EAAS/2E,EAAKC,GACjE,IAAK,IAAIxF,EAAI87E,GAAM37E,OAAS,EAAGH,GAAK87E,GAAMz6E,QAAQi7E,GAAUt8E,IAAK,CAC/D,IAAMk2E,EAAO4F,GAAM97E,GACnB,GAAIm7E,GAAUjF,GAAMmF,QAAU74D,EAAMy5D,SAAS5iC,KAAK7zC,EAAKD,EAAK2wE,IAAS/sB,EAAW,EAC9E,OAAO+sB,CAEV,CAED,OAAO4F,GAAMQ,EAAUR,GAAMz6E,QAAQi7E,GAAW,EACjD,CA6QOyB,CAA2BvhE,KAAM0C,EAAM/e,OAAQw9E,EAASrB,QAAS9/D,KAAKjX,IAAKiX,KAAKhX,MACpFgX,KAAK0gE,WAAc95B,EAASv8B,MAAMi9B,SAA0B,SAAftnC,KAAKygE,MAxQtD,SAA4B/G,GAC1B,IAAK,IAAIl2E,EAAI87E,GAAMz6E,QAAQ60E,GAAQ,EAAG31E,EAAOu7E,GAAM37E,OAAQH,EAAIO,IAAQP,EACrE,GAAIm7E,GAAUW,GAAM97E,IAAIq7E,OACtB,OAAOS,GAAM97E,EAGlB,CAmQOg+E,CAAmBxhE,KAAKygE,YADyC5tE,EAErEmN,KAAKyhE,YAAYrB,GAEbr7E,EAAQxB,SACVmf,EAAMnf,UAGD88E,GAAoBrgE,KAAM0C,EAAO1C,KAAK0gE,WAC9C,8BAED70B,WAGM7rC,KAAKjb,QAAQ28E,qBACf1hE,KAAKyhE,YAAYzhE,KAAK0C,MAAMpe,KAAIo+B,SAAAA,GAAAA,OAASA,EAAK/gC,KAAd+gC,IAEnC,4BAUD++C,WAA6B,IAGvBh6B,EAAO/7C,EAHD00E,EAAiB,uDAAJ,GACnB31E,EAAQ,EACRC,EAAM,EAGNsV,KAAKjb,QAAQ0jB,QAAU23D,EAAWz8E,SACpC8jD,EAAQznC,KAAK2hE,mBAAmBvB,EAAW,IAEzC31E,EADwB,IAAtB21E,EAAWz8E,OACL,EAAI8jD,GAEHznC,KAAK2hE,mBAAmBvB,EAAW,IAAM34B,GAAS,EAE7D/7C,EAAOsU,KAAK2hE,mBAAmBvB,EAAWA,EAAWz8E,OAAS,IAE5D+G,EADwB,IAAtB01E,EAAWz8E,OACP+H,GAECA,EAAOsU,KAAK2hE,mBAAmBvB,EAAWA,EAAWz8E,OAAS,KAAO,GAGhF,IAAM4sD,EAAQ6vB,EAAWz8E,OAAS,EAAI,GAAM,IAC5C8G,EAAQQ,GAAYR,EAAO,EAAG8lD,GAC9B7lD,EAAMO,GAAYP,EAAK,EAAG6lD,GAE1BvwC,KAAK2gE,SAAW,CAACl2E,MAAAA,EAAOC,IAAAA,EAAKi5B,OAAQ,GAAKl5B,EAAQ,EAAIC,GACvD,0BASD02E,WACE,IAYIjB,EAAM3yE,EAZJgyE,EAAUx/D,KAAKy/D,SACf12E,EAAMiX,KAAKjX,IACXC,EAAMgX,KAAKhX,IACXjE,EAAUib,KAAKjb,QACfo8E,EAAWp8E,EAAQo7E,KAEnB/1D,EAAQ+2D,EAASzH,MAAQmG,GAA0BsB,EAASrB,QAAS/2E,EAAKC,EAAKgX,KAAKshE,kBAAkBv4E,IACtG6xE,EAAWl4E,EAAeqC,EAAQ2d,MAAMk4D,SAAU,GAClDgH,EAAoB,SAAVx3D,GAAmB+2D,EAASvB,WACtCiC,EAAap5E,EAASm5E,KAAwB,IAAZA,EAClCl/D,EAAQ,CAAC,EACX+kC,EAAQ1+C,EAYZ,GARI84E,IACFp6B,GAAS+3B,EAAQ1iC,QAAQ2K,EAAO,UAAWm6B,IAI7Cn6B,GAAS+3B,EAAQ1iC,QAAQ2K,EAAOo6B,EAAa,MAAQz3D,GAGjDo1D,EAAQ3iC,KAAK7zC,EAAKD,EAAKqhB,GAAS,IAASwwD,EAC3C,MAAM,IAAInmD,MAAM1rB,EAAM,QAAUC,EAAM,uCAAyC4xE,EAAW,IAAMxwD,GAGlG,IAAMg2D,EAAsC,SAAzBr7E,EAAQ2d,MAAMre,QAAqB2b,KAAK8hE,oBAC3D,IAAK3B,EAAO14B,EAAOj6C,EAAQ,EAAG2yE,EAAOn3E,EAAKm3E,GAAQX,EAAQ/yE,IAAI0zE,EAAMvF,EAAUxwD,GAAQ5c,IACpF0yE,GAAQx9D,EAAOy9D,EAAMC,GAQvB,OALID,IAASn3E,GAA0B,UAAnBjE,EAAQ4jB,QAAgC,IAAVnb,GAChD0yE,GAAQx9D,EAAOy9D,EAAMC,GAIhBr+E,OAAO2B,KAAKgf,GAAOsvB,MAAK,SAACnrC,EAAGC,GAAJ,OAAUD,EAAIC,CAAd,IAAiBxC,KAAIqB,SAAAA,GAAAA,OAAMA,CAANA,GACrD,iCAMD0oC,SAAiB1sC,GACf,IAAM69E,EAAUx/D,KAAKy/D,SACf0B,EAAWnhE,KAAKjb,QAAQo7E,KAE9B,OAAIgB,EAASY,cACJvC,EAAQn9D,OAAO1gB,EAAOw/E,EAASY,eAEjCvC,EAAQn9D,OAAO1gB,EAAOw/E,EAASL,eAAekB,SACtD,oCAWDC,SAAoB9B,EAAMh8E,EAAOue,EAAOL,GACtC,IAAMtd,EAAUib,KAAKjb,QACfid,EAAYjd,EAAQ2d,MAAM1f,SAEhC,GAAIgf,EACF,OAAO9f,EAAK8f,EAAW,CAACm+D,EAAMh8E,EAAOue,GAAQ1C,MAG/C,IAAM48B,EAAU73C,EAAQo7E,KAAKW,eACvBpH,EAAO15D,KAAKygE,MACZH,EAAYtgE,KAAK0gE,WACjBwB,EAAcxI,GAAQ98B,EAAQ88B,GAC9ByI,EAAc7B,GAAa1jC,EAAQ0jC,GACnC59C,EAAOhgB,EAAMve,GACbkmB,EAAQi2D,GAAa6B,GAAez/C,GAAQA,EAAKrY,MAEvD,OAAOrK,KAAKy/D,SAASp9D,OAAO89D,EAAM99D,IAAWgI,EAAQ83D,EAAcD,GACpE,mCAKD11B,SAAmB9pC,GACjB,IAAIlf,EAAGO,EAAM2+B,EAEb,IAAKl/B,EAAI,EAAGO,EAAO2e,EAAM/e,OAAQH,EAAIO,IAAQP,GAC3Ck/B,EAAOhgB,EAAMlf,IACR4qC,MAAQpuB,KAAKiiE,oBAAoBv/C,EAAK/gC,MAAO6B,EAAGkf,EAExD,mCAMDi/D,SAAmBhgF,GACjB,OAAiB,OAAVA,EAAiB4rC,KAAO5rC,EAAQqe,KAAKjX,MAAQiX,KAAKhX,IAAMgX,KAAKjX,IACrE,iCAMDiF,SAAiBrM,GACf,IAAMygF,EAAUpiE,KAAK2gE,SACfjmD,EAAM1a,KAAK2hE,mBAAmBhgF,GACpC,OAAOqe,KAAK61B,oBAAoBusC,EAAQ33E,MAAQiwB,GAAO0nD,EAAQz+C,OAChE,iCAMDmrB,SAAiBljC,GACf,IAAMw2D,EAAUpiE,KAAK2gE,SACfjmD,EAAM1a,KAAKgvC,mBAAmBpjC,GAASw2D,EAAQz+C,OAASy+C,EAAQ13E,IACtE,OAAOsV,KAAKjX,IAAM2xB,GAAO1a,KAAKhX,IAAMgX,KAAKjX,IAC1C,8BAODs5E,SAAcj0C,GACZ,IAAMk0C,EAAYtiE,KAAKjb,QAAQ2d,MACzB6/D,EAAiBviE,KAAKkF,IAAI8F,YAAYojB,GAAO5kB,MAC7Cxf,EAAQf,GAAU+W,KAAKi0B,eAAiBquC,EAAU14D,YAAc04D,EAAU34D,aAC1E64D,EAAcr7E,KAAK6I,IAAIhG,GACvBy4E,EAAct7E,KAAK4H,IAAI/E,GACvB04E,EAAe1iE,KAAK2uC,wBAAwB,GAAG5nD,KAErD,MAAO,CACLmM,EAAGqvE,EAAkBC,EAAgBE,EAAeD,EACpDnxE,EAAGixE,EAAkBE,EAAgBC,EAAeF,EAEvD,kCAODlB,SAAkBqB,GAChB,IAAMxB,EAAWnhE,KAAKjb,QAAQo7E,KACxBW,EAAiBK,EAASL,eAG1Bz+D,EAASy+D,EAAeK,EAASzH,OAASoH,EAAelC,YACzDgE,EAAe5iE,KAAKiiE,oBAAoBU,EAAa,EAAGtC,GAAoBrgE,KAAM,CAAC2iE,GAAc3iE,KAAK0gE,YAAar+D,GACnHtb,EAAOiZ,KAAKqiE,cAAcO,GAG1B7C,EAAW54E,KAAKoB,MAAMyX,KAAKi0B,eAAiBj0B,KAAKwJ,MAAQziB,EAAKmM,EAAI8M,KAAKoM,OAASrlB,EAAKuK,GAAK,EAChG,OAAOyuE,EAAW,EAAIA,EAAW,CAClC,kCAKD+B,WACE,IACIt+E,EAAGO,EADHq8E,EAAapgE,KAAK4xB,OAAOjnB,MAAQ,GAGrC,GAAIy1D,EAAWz8E,OACb,OAAOy8E,EAGT,IAAM91B,EAAQtqC,KAAK8nB,0BAEnB,GAAI9nB,KAAK4gE,aAAet2B,EAAM3mD,OAC5B,OAAQqc,KAAK4xB,OAAOjnB,KAAO2/B,EAAM,GAAGtiB,WAAWiG,mBAAmBjuB,MAGpE,IAAKxc,EAAI,EAAGO,EAAOumD,EAAM3mD,OAAQH,EAAIO,IAAQP,EAC3C48E,EAAaA,EAAWruC,OAAOuY,EAAM9mD,GAAGwkC,WAAWiG,mBAAmBjuB,OAGxE,OAAQA,KAAK4xB,OAAOjnB,KAAO3K,KAAKkf,UAAUkhD,EAC3C,mCAKDc,WACE,IACI19E,EAAGO,EADDq8E,EAAapgE,KAAK4xB,OAAO9E,QAAU,GAGzC,GAAIszC,EAAWz8E,OACb,OAAOy8E,EAGT,IAAMtzC,EAAS9sB,KAAK+sB,YACpB,IAAKvpC,EAAI,EAAGO,EAAO+oC,EAAOnpC,OAAQH,EAAIO,IAAQP,EAC5C48E,EAAWl6E,KAAKwwB,GAAM1W,KAAM8sB,EAAOtpC,KAGrC,OAAQwc,KAAK4xB,OAAO9E,OAAS9sB,KAAK4gE,YAAcR,EAAapgE,KAAKkf,UAAUkhD,EAC7E,0BAMDlhD,SAAU3c,GAER,OAAOlW,GAAakW,EAAOyvB,KAAKutC,IACjC,OA9ckBiB,CAAkBv3B,IC3LvC,SAASroC,GAAYxV,EAAOyV,EAAKtd,GAC/B,IAEIs/E,EAAYC,EAAYC,EAAYC,EAFpCx3E,EAAK,EACLD,EAAKH,EAAMzH,OAAS,EAExB,GAAIJ,EAAS,CACX,GAAIsd,GAAOzV,EAAMI,GAAIkvB,KAAO7Z,GAAOzV,EAAMG,GAAImvB,IAAK,OACpCjvB,GAAaL,EAAO,MAAOyV,GAArCrV,EAD8C,EAC9CA,GAAID,EAD0C,EAC1CA,EACP,CAHU,MAI4BH,EAAMI,GAAtCq3E,EAJI,EAITnoD,IAAuBqoD,EAJd,EAIQ5C,KAJR,MAK4B/0E,EAAMG,GAAtCu3E,EALI,EAKTpoD,IAAuBsoD,EALd,EAKQ7C,IACpB,KAAM,CACL,GAAIt/D,GAAOzV,EAAMI,GAAI20E,MAAQt/D,GAAOzV,EAAMG,GAAI40E,KAAM,OACtC10E,GAAaL,EAAO,OAAQyV,GAAtCrV,EADgD,EAChDA,GAAID,EAD4C,EAC5CA,EACP,CAHI,MAIkCH,EAAMI,GAArCq3E,EAJH,EAIH1C,KAAuB4C,EAJpB,EAIeroD,IAJf,MAKkCtvB,EAAMG,GAArCu3E,EALH,EAKH3C,KAAuB6C,EALpB,EAKetoD,GACrB,CAED,IAAMuoD,EAAOH,EAAaD,EAC1B,OAAOI,EAAOF,GAAcC,EAAaD,IAAeliE,EAAMgiE,GAAcI,EAAOF,CACpF,SDuKoBvC,GAAAA,KAEP,gBAFOA,GAAAA,WAOD,CAQhB73D,OAAQ,OAERk4D,SAAU,CAAC,EACXV,KAAM,CACJR,QAAQ,EACRjG,MAAM,EACNtxE,OAAO,EACPw3E,YAAY,EACZE,QAAS,cACTgB,eAAgB,CAAC,GAEnBp+D,MAAO,CASLre,OAAQ,OAERrB,UAAU,EAEVqnB,MAAO,CACLi9B,SAAS,UC7MX47B,GAAAA,SAAAA,iCAYJn/D,SAAAA,EAAYuN,GAAO,6BACjB,cAAMA,IAGD6xD,OAAS,GAEd,EAAKC,aAAUvwE,EAEf,EAAKwwE,iBAAcxwE,EARF,CASlB,2CAKD4uE,WACE,IAAMrB,EAAapgE,KAAKsjE,yBAClBl4E,EAAQ4U,KAAKmjE,OAASnjE,KAAKujE,iBAAiBnD,GAClDpgE,KAAKojE,QAAUxiE,GAAYxV,EAAO4U,KAAKjX,KACvCiX,KAAKqjE,YAAcziE,GAAYxV,EAAO4U,KAAKhX,KAAOgX,KAAKojE,SACvD,0DAAkBhD,EACnB,iCAaDmD,SAAiBnD,GACf,IAGI58E,EAAGO,EAAMk1B,EAAM0Y,EAAMxa,EAHlBpuB,EAAYiX,KAAZjX,IAAKC,EAAOgX,KAAPhX,IACNsD,EAAQ,GACRlB,EAAQ,GAGd,IAAK5H,EAAI,EAAGO,EAAOq8E,EAAWz8E,OAAQH,EAAIO,IAAQP,GAChDmuC,EAAOyuC,EAAW58E,KACNuF,GAAO4oC,GAAQ3oC,GACzBsD,EAAMpG,KAAKyrC,GAIf,GAAIrlC,EAAM3I,OAAS,EAEjB,MAAO,CACL,CAACw8E,KAAMp3E,EAAK2xB,IAAK,GACjB,CAACylD,KAAMn3E,EAAK0xB,IAAK,IAIrB,IAAKl3B,EAAI,EAAGO,EAAOuI,EAAM3I,OAAQH,EAAIO,IAAQP,EAC3C2zB,EAAO7qB,EAAM9I,EAAI,GACjBy1B,EAAO3sB,EAAM9I,EAAI,GACjBmuC,EAAOrlC,EAAM9I,GAGT2D,KAAKiB,OAAO+uB,EAAO8B,GAAQ,KAAO0Y,GACpCvmC,EAAMlF,KAAK,CAACi6E,KAAMxuC,EAAMjX,IAAKl3B,GAAKO,EAAO,KAG7C,OAAOqH,CACR,uCAODk4E,WACE,IAAIlD,EAAapgE,KAAK4xB,OAAOvL,KAAO,GAEpC,GAAI+5C,EAAWz8E,OACb,OAAOy8E,EAGT,IAAMz1D,EAAO3K,KAAK8hE,oBACZ1zC,EAAQpuB,KAAKkhE,qBAUnB,OANEd,EAHEz1D,EAAKhnB,QAAUyqC,EAAMzqC,OAGVqc,KAAKkf,UAAUvU,EAAKonB,OAAO3D,IAE3BzjB,EAAKhnB,OAASgnB,EAAOyjB,EAEpCgyC,EAAapgE,KAAK4xB,OAAOvL,IAAM+5C,CAGhC,mCAMDuB,SAAmBhgF,GACjB,OAAQif,GAAYZ,KAAKmjE,OAAQxhF,GAASqe,KAAKojE,SAAWpjE,KAAKqjE,WAChE,iCAMDv0B,SAAiBljC,GACf,IAAMw2D,EAAUpiE,KAAK2gE,SACf5xB,EAAU/uC,KAAKgvC,mBAAmBpjC,GAASw2D,EAAQz+C,OAASy+C,EAAQ13E,IAC1E,OAAOkW,GAAYZ,KAAKmjE,OAAQp0B,EAAU/uC,KAAKqjE,YAAcrjE,KAAKojE,SAAS,EAC5E,OAzHGF,CAAwB1C,YAAxB0C,GAAAA,KAEQ,sBAFRA,GAAAA,WAOc1C,GAAUl5D,2NC5BxBk8D,EAAsB,QAErB,SAASC,EAAgBC,EAAsB/hF,GACjC,oBAAR+hF,EACTA,EAAI/hF,GACK+hF,IACTA,EAAIt+E,QAAUzD,EAEjB,CAcM,SAASgiF,EAKdC,EACAC,GAEAD,EAAY92C,OAAS+2C,CACtB,CAEM,SAASC,EAKdF,EACAG,GACAC,IAAAA,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAeR,EAETS,EAA8C,GAEpDL,EAAYv/D,SAAW0/D,EAAaz/E,KAClC,SAAC4/E,GAEC,IAAMC,EAAiBP,EAAYv/D,SAAS+/D,MAC1C,SAAC95C,GAAD,OACEA,EAAQ05C,KAAkBE,EAAYF,EADxC,IAKF,OACGG,GACAD,EAAYv5D,OACbs5D,EAAc1gE,SAAS4gE,IAKzBF,EAAc/9E,KAAKi+E,GAEnBpiF,OAAO4M,OAAOw1E,EAAgBD,GAEvBC,IAPE,UAAKD,EAQhB,GAEH,CAEM,SAASG,EAId15D,GAAuCq5D,IAAAA,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAeR,EAChDc,EAA4C,CAChDx3C,OAAQ,GACRzoB,SAAU,IAMZ,OAHAs/D,EAAUW,EAAU35D,EAAKmiB,QACzBg3C,EAAYQ,EAAU35D,EAAKtG,SAAU2/D,GAE9BM,CACR,CCnFD,SAASC,EAKPC,EAaAd,GAbA,QACEt3D,OAAAA,OADF,MACW,IADX,MAEE5C,MAAAA,OAFF,MAEU,IAFV,MAGEi7D,OAAAA,OAHF,SAIET,EAJF,EAIEA,aACAliF,EALF,EAKEA,KACA6oB,EANF,EAMEA,KACA5lB,EAPF,EAOEA,QAPF,IAQE+gB,QAAAA,OARF,MAQY,GARZ,EASE4+D,EATF,EASEA,gBACAC,EAVF,EAUEA,WACGrzD,GAXL,YAiBMszD,GAAYC,EAAAA,EAAAA,QAA0B,MACtCC,GAAWD,EAAAA,EAAAA,UAEXE,EAAc,WACbH,EAAUx/E,UAEf0/E,EAAS1/E,QAAU,IAAI4/E,EAAAA,GAAQJ,EAAUx/E,QAAS,CAChDtD,KAAAA,EACA6oB,KAAM05D,EAAU15D,EAAMq5D,GACtBj/E,QAASA,IAAW,UAAKA,GACzB+gB,QAAAA,IAGF29D,EAAaC,EAAKoB,EAAS1/E,SAC7B,EAEM6/E,EAAe,WACnBxB,EAAaC,EAAK,MAEdoB,EAAS1/E,UACX0/E,EAAS1/E,QAAQy5D,UACjBimB,EAAS1/E,QAAU,KAEvB,EA4CA,OA1CA8/E,EAAAA,EAAAA,YAAU,YACHT,GAAUK,EAAS1/E,SAAWL,GDvChC,SAIL6d,EAAoCuiE,GACpC,IAAMpgF,EAAU6d,EAAM7d,QAElBA,GAAWogF,GACbpjF,OAAO4M,OAAO5J,EAASogF,EAE1B,CC8BKC,CAAWN,EAAS1/E,QAASL,EAE9B,IAAC0/E,EAAQ1/E,KAEZmgF,EAAAA,EAAAA,YAAU,YACHT,GAAUK,EAAS1/E,SACtBu+E,EAAUmB,EAAS1/E,QAAQmgC,OAAO5a,KAAMA,EAAKmiB,OAE9C,IAAC23C,EAAQ95D,EAAKmiB,UAEjBo4C,EAAAA,EAAAA,YAAU,YACHT,GAAUK,EAAS1/E,SAAWulB,EAAKtG,UACtCy/D,EAAYgB,EAAS1/E,QAAQmgC,OAAO5a,KAAMA,EAAKtG,SAAU2/D,EAE1D,IAACS,EAAQ95D,EAAKtG,YAEjB6gE,EAAAA,EAAAA,YAAU,WACHJ,EAAS1/E,UAEVq/E,GACFQ,IACA/pB,WAAW6pB,IAEXD,EAAS1/E,QAAQy/B,OAAO8/C,GAEzB,IAACF,EAAQ1/E,EAAS4lB,EAAKmiB,OAAQniB,EAAKtG,SAAUsgE,KAEjDO,EAAAA,EAAAA,YAAU,WACHJ,EAAS1/E,UAEd6/E,IACA/pB,WAAW6pB,GACV,IAACjjF,KAEJojF,EAAAA,EAAAA,YAAU,WAGR,OAFAH,IAEO,kBAAME,GAAN,CACT,GAAG,IAGDI,EAAAA,cAACr5D,SAAAA,OAAAA,OAAAA,CAAO03D,IAAKkB,EAAWU,KAAK,MAAMl5D,OAAQA,EAAQ5C,MAAOA,GAAW8H,GAClEozD,EAGP,CAEO,IAAM3qB,GAA6BwrB,EAAAA,EAAAA,YACxChB,GCzFF,SAASiB,EACP1jF,EACA2jF,GAIA,OAFAT,EAAAA,GAAAA,SAAiBS,IAEVF,EAAAA,EAAAA,aACJ,SAAAj0D,EAAOoyD,GAAR,OAAgB2B,EAAAA,cAACtrB,EAAUzoC,OAAAA,OAAAA,CAAAA,EAAAA,EAAAA,CAAOoyD,IAAKA,EAAK5hF,KAAMA,IAAlD,GAEJ,KAEa4jF,EAAuBF,EAAiB,OAAQprC,EAAAA,IAEFxG,EAAAA,GAEIqI,EAAAA,GAI7DpF,EAAAA,GAKAkE,EAAAA,GAKAnE,EAAAA,GAGyDoF,EAAAA,GAIzDK,EAAAA","sources":["../node_modules/chart.js/src/helpers/helpers.core.ts","../node_modules/chart.js/src/helpers/helpers.math.ts","../node_modules/chart.js/src/helpers/helpers.collection.ts","../node_modules/chart.js/src/helpers/helpers.extras.ts","../node_modules/chart.js/src/helpers/helpers.easing.ts","../node_modules/chart.js/node_modules/.pnpm/@kurkle+color@0.2.1/node_modules/@kurkle/color/dist/color.esm.js","../node_modules/chart.js/src/helpers/helpers.color.ts","../node_modules/chart.js/src/core/core.animations.defaults.js","../node_modules/chart.js/src/helpers/helpers.intl.ts","../node_modules/chart.js/src/core/core.ticks.js","../node_modules/chart.js/src/core/core.defaults.js","../node_modules/chart.js/src/core/core.layouts.defaults.js","../node_modules/chart.js/src/core/core.scale.defaults.js","../node_modules/chart.js/src/helpers/helpers.canvas.js","../node_modules/chart.js/src/helpers/helpers.options.ts","../node_modules/chart.js/src/helpers/helpers.config.js","../node_modules/chart.js/src/helpers/helpers.curve.ts","../node_modules/chart.js/src/helpers/helpers.dom.ts","../node_modules/chart.js/src/helpers/helpers.interpolation.ts","../node_modules/chart.js/src/helpers/helpers.rtl.ts","../node_modules/chart.js/src/helpers/helpers.segment.js","../node_modules/chart.js/src/core/core.animator.js","../node_modules/chart.js/src/core/core.animation.js","../node_modules/chart.js/src/core/core.animations.js","../node_modules/chart.js/src/core/core.datasetController.js","../node_modules/chart.js/src/controllers/controller.bar.js","../node_modules/chart.js/src/controllers/controller.bubble.js","../node_modules/chart.js/src/controllers/controller.doughnut.js","../node_modules/chart.js/src/controllers/controller.line.js","../node_modules/chart.js/src/controllers/controller.polarArea.js","../node_modules/chart.js/src/controllers/controller.pie.js","../node_modules/chart.js/src/controllers/controller.radar.js","../node_modules/chart.js/src/controllers/controller.scatter.js","../node_modules/chart.js/src/core/core.adapters.ts","../node_modules/chart.js/src/core/core.interaction.js","../node_modules/chart.js/src/core/core.layouts.js","../node_modules/chart.js/src/platform/platform.base.js","../node_modules/chart.js/src/platform/platform.basic.js","../node_modules/chart.js/src/platform/platform.dom.js","../node_modules/chart.js/src/core/core.element.ts","../node_modules/chart.js/src/core/core.scale.autoskip.js","../node_modules/chart.js/src/core/core.scale.js","../node_modules/chart.js/src/core/core.typedRegistry.js","../node_modules/chart.js/src/core/core.registry.js","../node_modules/chart.js/src/core/core.plugins.js","../node_modules/chart.js/src/core/core.config.js","../node_modules/chart.js/src/core/core.controller.js","../node_modules/chart.js/src/platform/index.js","../node_modules/chart.js/src/elements/element.arc.ts","../node_modules/chart.js/src/elements/element.line.js","../node_modules/chart.js/src/elements/element.point.ts","../node_modules/chart.js/src/elements/element.bar.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.segment.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.helper.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.options.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.target.stack.js","../node_modules/chart.js/src/plugins/plugin.filler/simpleArc.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.target.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.drawing.js","../node_modules/chart.js/src/plugins/plugin.filler/index.js","../node_modules/chart.js/src/plugins/plugin.legend.js","../node_modules/chart.js/src/plugins/plugin.title.js","../node_modules/chart.js/src/plugins/plugin.tooltip.js","../node_modules/chart.js/src/plugins/plugin.subtitle.js","../node_modules/chart.js/src/scales/scale.category.js","../node_modules/chart.js/src/scales/scale.linearbase.js","../node_modules/chart.js/src/scales/scale.linear.js","../node_modules/chart.js/src/scales/scale.logarithmic.js","../node_modules/chart.js/src/scales/scale.radialLinear.js","../node_modules/chart.js/src/scales/scale.time.js","../node_modules/chart.js/src/scales/scale.timeseries.js","../node_modules/react-chartjs-2/src/utils.ts","../node_modules/react-chartjs-2/src/chart.tsx","../node_modules/react-chartjs-2/src/typedCharts.tsx"],"sourcesContent":["/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../../types/basic';\nimport type {ActiveDataPoint, ChartEvent} from '../../types';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): AnyObject {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../../types/geometric';\nimport {isFinite as isFiniteNumber} from './helpers.core';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>();\n  let i: number, ilen: number;\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n\n  if (set.size === ilen) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import {type ChartMeta, type PointElement} from '../../types';\n\nimport {_limitValue} from './helpers.math';\nimport {_lookupByKey} from './helpers.collection';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply<any, TArgs, void>(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","import colorLib, {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : colorLib(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : colorLib(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core';\nimport {formatNumber} from '../helpers/helpers.intl';\nimport {log10} from '../helpers/helpers.math';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0); // toFixed has a max of 20 decimal places\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core';\nimport {applyAnimationsDefaults} from './core.animations.defaults';\nimport {applyLayoutsDefaults} from './core.layouts.defaults';\nimport {applyScaleDefaults} from './core.scale.defaults';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import {isArray, isNullOrUndef} from './helpers.core';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `canvas` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import(\"../core/core.controller\").default } canvas.Chart\n * @typedef { import(\"../../types\").Point } Point\n */\n\n/**\n * @namespace Chart.helpers.canvas\n */\n\n/**\n * Converts the given font object into a CSS font string.\n * @param {object} font - A font object.\n * @return {string|null} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\n/**\n * @private\n */\nexport function _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param {canvas.Chart} chart - The chart instance.\n * @param {number} pixel - A pixel value.\n * @param {number} width - The width of the element.\n * @returns {number} The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n * @param {HTMLCanvasElement} canvas\n * @param {CanvasRenderingContext2D} [ctx]\n */\nexport function clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport function drawPoint(ctx, options, x, y) {\n  drawPointLegend(ctx, options, x, y, null);\n}\n\nexport function drawPointLegend(ctx, options, x, y, w) {\n  let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n  default:\n    if (w) {\n      ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n    } else {\n      ctx.arc(x, y, radius, 0, TAU);\n    }\n    ctx.closePath();\n    break;\n  case 'triangle':\n    width = w ? w / 2 : radius;\n    ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n    ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      width = w ? w / 2 : size;\n      ctx.rect(x - width, y - size, 2 * width, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'rectRot':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'cross':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    break;\n  case 'star':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    rad += QUARTER_PI;\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    break;\n  case 'line':\n    xOffset = w ? w / 2 : Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n    break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param {Point} point - The point to test\n * @param {object} area - The rectangle\n * @param {number} [margin] - allowed margin\n * @returns {boolean}\n * @private\n */\nexport function _isPointInArea(point, area, margin) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += font.lineHeight;\n  }\n\n  ctx.restore();\n}\n\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx, opts) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nexport function addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core';\nimport {Point, toFontString} from './helpers.canvas';\nimport type {ChartArea, FontSpec} from '../../types';\nimport type {TRBL, TRBLCorners} from '../../types/geometric';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\nexport interface CanvasFontSpec extends FontSpec {\n  string: string;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<P extends T, T extends object>(parentContext: P, context: T): P extends null ? T : P & T {\n  return Object.assign(Object.create(parentContext), context);\n}\n","import {defined, isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param {object[]} scopes - The option scopes to look for values, in resolution order\n * @param {string[]} [prefixes] - The prefixes for values, in resolution order.\n * @param {object[]} [rootScopes] - The root option scopes\n * @param {string|boolean} [fallback] - Parent scopes fallback\n * @param {function} [getTarget] - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  });\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param {object} proxy - The Proxy returned by `_createResolver`\n * @param {object} context - Context object for scriptable/indexable options\n * @param {object} [subProxy] - The proxy provided for scriptable options\n * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults] - Defaults for descriptors\n * @private\n */\nexport function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  });\n}\n\n/**\n * @private\n */\nexport function _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    // @ts-ignore\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\n\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math';\nimport {_isPointInArea} from './helpers.canvas';\nimport {ChartArea} from '../../types';\n\nexport interface SplinePoint {\n  x: number;\n  y: number;\n  skip?: boolean;\n\n  // Both Bezier and monotone interpolations have these fields\n  // but they are added in different spots\n  cp1x?: number;\n  cp1y?: number;\n  cp2x?: number;\n  cp2y?: number;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import {ChartArea, Scale} from '../../types';\nimport Chart from '../core/core.controller';\nimport {ChartEvent} from '../types';\nimport {INFINITY} from './helpers.math';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import(\"../core/core.controller\").default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point} from '../../types/geometric';\nimport type {SplinePoint} from './helpers.curve';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math';\nimport {createContext} from './helpers.options';\n\n/**\n * @typedef { import(\"../elements/element.line\").default } LineElement\n * @typedef { import(\"../elements/element.point\").default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n","import {requestAnimFrame} from '../helpers/helpers.extras';\n\n/**\n * @typedef { import(\"./core.animation\").default } Animation\n * @typedef { import(\"./core.controller\").default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing';\nimport {resolve} from '../helpers/helpers.options';\nimport {color as helpersColor} from '../helpers/helpers.color';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator';\nimport Animation from './core.animation';\nimport defaults from './core.defaults';\nimport {isArray, isObject} from '../helpers/helpers.core';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations';\nimport defaults from './core.defaults';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection';\nimport {createContext, sign} from '../helpers';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"./core.scale\").default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (an thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal meta data accordingly.\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController';\nimport {valueOrDefault} from '../helpers/helpers.core';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core';\nimport {formatNumber} from '../helpers/helpers.intl';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math';\n\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing',\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {isNullOrUndef} from '../helpers';\nimport {isNumber} from '../helpers/helpers.math';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController';\nimport {_parseObjectDataRadialScale} from '../helpers/index';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {isNullOrUndef} from '../helpers';\nimport {isNumber} from '../helpers/helpers.math';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../../types/basic';\nimport type {ChartOptions} from '../../types';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection';\nimport {getRelativePosition} from '../helpers/helpers.dom';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math';\nimport {_isPointInArea} from '../helpers';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import(\"./core.element\").default}} InteractionItem\n * @typedef { import(\"../../types\").Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core';\nimport {toPadding} from '../helpers/helpers.options';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import(\"../core/core.config\").default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom';\nimport {throttled} from '../helpers/helpers.extras';\nimport {isNullOrUndef} from '../helpers/helpers.core';\n\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import type {AnyObject} from '../../types/basic';\nimport type {Point} from '../../types/geometric';\nimport type {Animation} from '../../types/animation';\nimport {isNumber} from '../helpers/helpers.math';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core';\nimport {_factorize} from '../helpers/helpers.math';\n\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options';\nimport {autoSkip} from './core.scale.autoskip';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers';\nimport defaults, {overrides} from './core.defaults';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController';\nimport Element from './core.element';\nimport Scale from './core.scale';\nimport TypedRegistry from './core.typedRegistry';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef { import(\"../plugins/plugin.tooltip\").default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import(\"./core.config\").default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n\n  id = scaleOptions.axis\n    || axisFromPosition(scaleOptions.position)\n    || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n\n  if (id) {\n    return id;\n  }\n\n  throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator';\nimport defaults, {overrides} from './core.defaults';\nimport Interaction from './core.interaction';\nimport layouts from './core.layouts';\nimport {_detectPlatform} from '../platform';\nimport PluginService from './core.plugins';\nimport registry from './core.registry';\nimport Config, {determineAxis, getIndexAxis} from './core.config';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras';\n\n/**\n * @typedef { import('../../types').ChartEvent } ChartEvent\n * @typedef { import(\"../../types\").Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getDatasetArea(meta) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: xScale.left,\n      right: xScale.right,\n      top: yScale.top,\n      bottom: yScale.bottom\n    };\n  }\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta) || this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../../types').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../../types').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import {_isDomSupported} from '../helpers';\nimport BasePlatform from './platform.base';\nimport BasicPlatform from './platform.basic';\nimport DomPlatform from './platform.dom';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import Element from '../core/core.element';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math';\nimport {_readValueToProps} from '../helpers/helpers.options';\nimport type {ArcOptions, Point} from '../../types';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve';\nimport {valueOrDefault} from '../helpers';\n\n/**\n * @typedef { import(\"./element.point\").default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas';\nimport {\n  type CartesianParsedData,\n  type ChartArea,\n  type Point,\n  type PointHoverOptions,\n  type PointOptions,\n} from '../../types';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element';\nimport {isObject, _isBetween, _limitValue} from '../helpers';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller').default } Chart\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.point').default } PointElement\n */\n\nimport {LineElement} from '../../elements';\nimport {isArray} from '../../helpers';\nimport {_pointsFromSegments} from './filler.segment';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core';\n\n/**\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.line').default } LineElement\n * @typedef { import('../../../types').FillTarget } FillTarget\n * @typedef { import('../../../types').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller').default } Chart\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.point').default } PointElement\n */\n\nimport {LineElement} from '../../elements';\nimport {_isBetween} from '../../helpers';\nimport {_createBoundaryLine} from './filler.helper';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers';\nimport {_createBoundaryLine} from './filler.helper';\nimport {_getTargetPixel, _getTargetValue} from './filler.options';\nimport {_buildStackLine} from './filler.target.stack';\nimport {simpleArc} from './simpleArc';\n\n/**\n * @typedef { import('../../core/core.controller').default } Chart\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.point').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment';\nimport {_getTarget} from './filler.target';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line';\nimport {_drawfill} from './filler.drawing';\nimport {_shouldApplyFill} from './filler.helper';\nimport {_decodeFill, _resolveTarget} from './filler.options';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults';\nimport Element from '../core/core.element';\nimport layouts from '../core/core.layouts';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras';\nimport {toTRBLCorners} from '../helpers/helpers.options';\n\n/**\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element';\nimport layouts from '../core/core.layouts';\nimport {PI, isArray, toPadding, toFont} from '../helpers';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras';\nimport {renderText} from '../helpers/helpers.canvas';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations';\nimport Element from '../core/core.element';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math';\nimport {createContext, drawPoint} from '../helpers';\n\n/**\n * @typedef { import(\"../platform/platform.base\").Chart } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef { import(\"../../types\").ActiveElement } ActiveElement\n * @typedef { import(\"../core/core.interaction\").InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import {Title} from './plugin.title';\nimport layouts from '../core/core.layouts';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Scale from '../core/core.scale';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport {formatNumber} from '../helpers/helpers.intl';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\nimport {toRadians} from '../helpers';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core';\nimport {formatNumber} from '../helpers/helpers.intl';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults';\nimport {_longestText, addRoundedRectPath, renderText} from '../helpers/helpers.canvas';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n\n    items.push({\n      // Text position\n      x: pointLabelPosition.x,\n      y,\n\n      // Text rendering data\n      textAlign,\n\n      // Bounding box\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection';\n\n/**\n * @typedef { import(\"../core/core.adapters\").TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import(\"../core/core.adapters\").DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if its not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @private\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guestimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time';\nimport {_lookupByKey} from '../helpers/helpers.collection';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","import type { MouseEvent } from 'react';\nimport type {\n  ChartType,\n  ChartData,\n  DefaultDataPoint,\n  ChartDataset,\n  ChartOptions,\n  Chart,\n} from 'chart.js';\n\nimport type { ForwardedRef } from './types.js';\n\nconst defaultDatasetIdKey = 'label';\n\nexport function reforwardRef<T>(ref: ForwardedRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\nexport function setOptions<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(chart: Chart<TType, TData, TLabel>, nextOptions: ChartOptions<TType>) {\n  const options = chart.options;\n\n  if (options && nextOptions) {\n    Object.assign(options, nextOptions);\n  }\n}\n\nexport function setLabels<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextLabels: TLabel[] | undefined\n) {\n  currentData.labels = nextLabels;\n}\n\nexport function setDatasets<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextDatasets: ChartDataset<TType, TData>[],\n  datasetIdKey = defaultDatasetIdKey\n) {\n  const addedDatasets: ChartDataset<TType, TData>[] = [];\n\n  currentData.datasets = nextDatasets.map(\n    (nextDataset: Record<string, unknown>) => {\n      // given the new set, find it's current match\n      const currentDataset = currentData.datasets.find(\n        (dataset: Record<string, unknown>) =>\n          dataset[datasetIdKey] === nextDataset[datasetIdKey]\n      );\n\n      // There is no original to update, so simply add new one\n      if (\n        !currentDataset ||\n        !nextDataset.data ||\n        addedDatasets.includes(currentDataset)\n      ) {\n        return { ...nextDataset } as ChartDataset<TType, TData>;\n      }\n\n      addedDatasets.push(currentDataset);\n\n      Object.assign(currentDataset, nextDataset);\n\n      return currentDataset;\n    }\n  );\n}\n\nexport function cloneData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(data: ChartData<TType, TData, TLabel>, datasetIdKey = defaultDatasetIdKey) {\n  const nextData: ChartData<TType, TData, TLabel> = {\n    labels: [],\n    datasets: [],\n  };\n\n  setLabels(nextData, data.labels);\n  setDatasets(nextData, data.datasets, datasetIdKey);\n\n  return nextData;\n}\n\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getDatasetAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'dataset',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'nearest',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementsAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'index',\n    { intersect: true },\n    false\n  );\n}\n","import React, { useEffect, useRef, forwardRef } from 'react';\nimport { Chart as ChartJS } from 'chart.js';\nimport type { ChartType, DefaultDataPoint } from 'chart.js';\n\nimport type { ForwardedRef, ChartProps, TypedChartComponent } from './types.js';\nimport {\n  reforwardRef,\n  cloneData,\n  setOptions,\n  setLabels,\n  setDatasets,\n} from './utils.js';\n\nfunction ChartComponent<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  {\n    height = 150,\n    width = 300,\n    redraw = false,\n    datasetIdKey,\n    type,\n    data,\n    options,\n    plugins = [],\n    fallbackContent,\n    updateMode,\n    ...props\n  }: ChartProps<TType, TData, TLabel>,\n  ref: ForwardedRef<ChartJS<TType, TData, TLabel>>\n) {\n  type TypedChartJS = ChartJS<TType, TData, TLabel>;\n\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const chartRef = useRef<TypedChartJS | null>();\n\n  const renderChart = () => {\n    if (!canvasRef.current) return;\n\n    chartRef.current = new ChartJS(canvasRef.current, {\n      type,\n      data: cloneData(data, datasetIdKey),\n      options: options && { ...options },\n      plugins,\n    });\n\n    reforwardRef(ref, chartRef.current);\n  };\n\n  const destroyChart = () => {\n    reforwardRef(ref, null);\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n      chartRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && options) {\n      setOptions(chartRef.current, options);\n    }\n  }, [redraw, options]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current) {\n      setLabels(chartRef.current.config.data, data.labels);\n    }\n  }, [redraw, data.labels]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && data.datasets) {\n      setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n    }\n  }, [redraw, data.datasets]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    if (redraw) {\n      destroyChart();\n      setTimeout(renderChart);\n    } else {\n      chartRef.current.update(updateMode);\n    }\n  }, [redraw, options, data.labels, data.datasets, updateMode]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    destroyChart();\n    setTimeout(renderChart);\n  }, [type]);\n\n  useEffect(() => {\n    renderChart();\n\n    return () => destroyChart();\n  }, []);\n\n  return (\n    <canvas ref={canvasRef} role='img' height={height} width={width} {...props}>\n      {fallbackContent}\n    </canvas>\n  );\n}\n\nexport const Chart: TypedChartComponent = forwardRef(\n  ChartComponent\n) as TypedChartComponent;\n","import React, { forwardRef } from 'react';\nimport {\n  Chart as ChartJS,\n  LineController,\n  BarController,\n  RadarController,\n  DoughnutController,\n  PolarAreaController,\n  BubbleController,\n  PieController,\n  ScatterController,\n} from 'chart.js';\nimport type { ChartType, ChartComponentLike } from 'chart.js';\n\nimport type {\n  ChartProps,\n  ChartJSOrUndefined,\n  TypedChartComponent,\n} from './types.js';\nimport { Chart } from './chart.js';\n\nfunction createTypedChart<T extends ChartType>(\n  type: T,\n  registerables: ChartComponentLike\n) {\n  ChartJS.register(registerables);\n\n  return forwardRef<ChartJSOrUndefined<T>, Omit<ChartProps<T>, 'type'>>(\n    (props, ref) => <Chart {...props} ref={ref} type={type} />\n  ) as TypedChartComponent<T, true>;\n}\n\nexport const Line = /* #__PURE__ */ createTypedChart('line', LineController);\n\nexport const Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\n\nexport const Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\n\nexport const Doughnut = /* #__PURE__ */ createTypedChart(\n  'doughnut',\n  DoughnutController\n);\n\nexport const PolarArea = /* #__PURE__ */ createTypedChart(\n  'polarArea',\n  PolarAreaController\n);\n\nexport const Bubble = /* #__PURE__ */ createTypedChart(\n  'bubble',\n  BubbleController\n);\n\nexport const Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\n\nexport const Scatter = /* #__PURE__ */ createTypedChart(\n  'scatter',\n  ScatterController\n);\n"],"names":["noop","uid","id","isNullOrUndef","value","isArray","Array","type","Object","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","i","len","keys","length","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone","source","map","target","create","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","current","merger","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","v","x","o","y","_getKeyResolver","parts","split","tmp","push","_splitKey","obj","resolveObjectKey","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","round","niceRange","pow","floor","fraction","isNumber","n","isNaN","_setMinAndMaxByKey","array","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","isFiniteNumber","e","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","add","from","requestAnimFrame","window","requestAnimationFrame","throttled","ticking","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","getUserBounds","minDefined","maxDefined","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","assign","atEdge","t","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","m","d","easeInOutBounce","lim","l","h","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","c","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","undefined","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","hsl2rgb","hue","hueParse","exec","p1","p2","hwb2rgb","hsv2rgb","names","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","nameParse","j","ok","nk","unpacked","tkeys","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","modHSL","ratio","proto","fromObject","input","functionParse","rgbParse","Color","ret","hexParse","this","_rgb","_valid","hslString","color","weight","w2","c1","c2","w1","rgb1","rgb2","interpolate","val","deg","rotate","index_esm","isPatternOrGradient","colorLib","getHoverColor","saturate","darken","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","notation","chart","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","overrides","descriptors","getScope","node","root","scope","Defaults","constructor","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","_scriptable","startsWith","_indexable","_fallback","defaults","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","Ticks","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","line","opts","lines","strokeWidth","strokeColor","setRenderOpts","backdrop","drawBackdrop","strokeStyle","strokeText","maxWidth","fillText","decorateText","translation","fillStyle","textAlign","textBaseline","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","oldColor","fillRect","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","Symbol","toStringTag","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","_scopes","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_cacheable","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","Error","join","delete","needsSubResolver","createSubResolver","_resolveScriptable","isIndexable","arr","filter","resolver","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","readKey","prefix","resolveFallback","parent","addScopes","parentScopes","parentFallback","_rootScopes","allScopes","addScopesFromKey","_getTarget","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointsLen","pointAfter","monotoneCompute","pointBefore","valueAxis","iPixel","vPixel","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","slopeDelta","splineCurveMonotone","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","event","borderBox","boxSizing","paddings","borders","touches","offsetX","offsetY","box","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","prevValue","startBound","endBound","getSegment","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","styleChanged","p0","p0DataIndex","p1DataIndex","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","interpolators","boolean","factor","c0","helpersColor","valid","mix","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","animator","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","otherValue","singleMode","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","curr","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","grouped","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","_index_","_value_","BubbleController","DoughnutController","innerRadius","outerRadius","getter","_getRotation","_getCircumference","circumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PolarAreaController","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","abstract","_date","DateAdapterBase","init","formats","diff","startOf","endOf","members","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","layout","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refit","refitBoxes","setBoxDims","placeBoxes","userPadding","_layers","z","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","maxLabelDiagonal","numTicks","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","tickFont","fontString","nestedLabel","caches","widths","heights","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","getValueForPixel","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","lineCount","textOffset","tickAndPadding","hTickAndPadding","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","getResolver","subPrefixes","needContext","subResolver","resolverCache","hasFunction","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","Interaction","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","detached","_remove","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","invalidatePlugins","parseBorderRadius","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","cursor","defaultColor","halfFontSize","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","titleBlock","createTitle","positioners","WeakMap","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","textColor","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","afterInit","afterDraw","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks","generationOptions","dataRange","niceMin","niceMax","numSpaces","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","minExp","exp","startExp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","gridLineOpts","drawRadiusLine","animate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","_parseOpts","parser","isoWeekday","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","adapters","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","defaultDatasetIdKey","reforwardRef","ref","setLabels","currentData","nextLabels","setDatasets","nextDatasets","datasetIdKey","addedDatasets","nextDataset","currentDataset","find","cloneData","nextData","ChartComponent","param","redraw","fallbackContent","updateMode","canvasRef","useRef","chartRef","renderChart","ChartJS","destroyChart","useEffect","nextOptions","setOptions","React","role","forwardRef","createTypedChart","registerables","Line"],"sourceRoot":""}