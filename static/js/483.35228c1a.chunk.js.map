{"version":3,"file":"static/js/483.35228c1a.chunk.js","mappings":"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","sources":["components/Animation/Sea/Sea.jsx","components/Button/Button/Button.jsx","components/FieldCustom/CustomSelect.jsx","pages/Payment/Payment.jsx","services/Authencation/PurchaseHistory.jsx","services/Authencation/User.jsx","utils/Format.js"],"sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport \"./Sea.scss\"\r\nconst Sea = props => {\r\n  return (\r\n    <div class=\"sea\">\r\n        <div class=\"circle-wrapper\">\r\n            <div class=\"bubble\"></div>\r\n            <div class=\"submarine-wrapper\">\r\n                <div class=\"submarine-body\">\r\n                    <div class=\"window\"></div>\r\n                    <div class=\"engine\"></div>\r\n                    <div class=\"light\"></div>\r\n                </div>\r\n                <div class=\"helix\"></div>\r\n                <div class=\"hat\">\r\n                <div class=\"leds-wrapper\">\r\n                    <div class=\"periscope\"></div>\r\n                    <div class=\"leds\"></div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nSea.propTypes = {}\r\n\r\nexport default Sea","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport \"./Button.scss\"\r\nconst Button = props => {\r\n  return (\r\n    <button class=\"Button\" \r\n        onClick={props.onClick ? (e) => props.onClick(e) : null}\r\n    >\r\n        {props.children}\r\n    </button>\r\n  )\r\n}\r\n\r\nButton.propTypes = {}\r\n\r\nexport default Button","import React from 'react';\r\nimport Select from 'react-select';\r\n\r\n\r\nexport default ({ onChange, options, value, className,placeholder }) => {\r\n\r\n    const defaultValue = (options, value) => {\r\n        return options ? options.find(option => option.value === value) : \"\";\r\n    };\r\n\r\n    return (\r\n        <div className={className}>\r\n            <Select\r\n                value={defaultValue(options, value)}\r\n                placeholder={placeholder}\r\n                onChange={value => {\r\n                    onChange(value)\r\n\r\n                }} options={options} />\r\n        </div>\r\n\r\n    )\r\n}","import React, { useContext } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from \"yup\"\r\nimport './Payment.scss'\r\nimport Section, { SectionBody, SectionTitle } from '../../components/Section/Section';\r\nimport CustomSelect from '../../components/FieldCustom/CustomSelect';\r\nimport { PaymentContext } from '../../contexts/PaymentContextProvider';\r\nimport { v4 } from 'uuid';\r\nimport Sea from '../../components/Animation/Sea/Sea'\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { formatNumber } from '../../utils/Format'\r\nimport Button from '../../components/Button/Button/Button';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useCallback } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { AuthContext } from '../../contexts/AuthContextProvider';\r\nimport { AddPurchaseHistoryForUser } from '../../services/Authencation/User';\r\nimport { CartContext } from '../../contexts/CartContextProvider';\r\nimport { CART__REMOVE } from '../../reducers/type';\r\nimport { CheckDiscount } from '../../services/Authencation/Discount';\r\n\r\nconst options = [\r\n  { value: 'advance', label: 'Thanh toán trước khi nhận hàng' },\r\n  { value: 'later', label: 'Thanh toán sau khi nhận hàng' },\r\n]\r\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\r\nconst Payment = props => {\r\n  const { Payment, Paymentdispatch } = useContext(PaymentContext);\r\n  const { Cart, Cartdispatch } = useContext(CartContext);\r\n  const { Authur, dispatch } = useContext(AuthContext);\r\n  const [Total, setTotal] = useState(0);\r\n  const history = useNavigate();\r\n\r\n\r\n  useEffect(() => {\r\n    if (Payment.success == true && Payment.payload.length > 0) {\r\n      let tmp = 0;\r\n      Payment.payload.map(item => {\r\n        const curTotal = Number(item.Price) * Number(item.Quantity);\r\n        tmp += curTotal;\r\n      })\r\n      setTotal(tmp);\r\n    }\r\n  }, [Payment])\r\n\r\n  console.log(\"\", Authur)\r\n  console.log(\"ssssssssssssss\", Payment)\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      emailOrPhoneNumber: Authur.success == true ? Authur.payload.user.Number : \"\",\r\n      address: Authur.success == true ? Authur.payload.user.Address : \"\",\r\n      delivery: \"\",\r\n      voucher: \"\",\r\n\r\n    },\r\n    validationSchema: Yup.object({\r\n      emailOrPhoneNumber: Yup.string()\r\n      .required(\"Vui lòng nhập số điện thoại\")\r\n      .matches(phoneRegExp, 'Vui lòng nhập số điện thoại')\r\n      .min(9, \"ít nhất là 10 số\")\r\n      .max(11, \"nhiều nhấp là 10 số \")\r\n      ,\r\n      address: Yup.string().required(\"Địa chỉ không được bỏ trống\"),\r\n      delivery: Yup.string().required(\"Phương thức thanh toán không được bỏ trống\")\r\n    }),\r\n\r\n    onSubmit: useCallback(\r\n      async (values) => {\r\n        try {\r\n          console.log(values.emailOrPhoneNumber, values.address, values.delivery)\r\n          // if( values.address.trim() ==\"\"){\r\n          //   toast.error('Vui lòng kiểm tra lại số điện thoại hoặc địa chỉ', {\r\n          //     position: \"top-right\",\r\n          //     autoClose: 5000,\r\n          //     hideProgressBar: false,\r\n          //     closeOnClick: true,\r\n          //     pauseOnHover: true,\r\n          //     draggable: true,\r\n          //     progress: undefined,\r\n          //     theme: \"light\",\r\n          //   });\r\n          //   return;\r\n          // }\r\n          let total = 0;\r\n          const initCart = Payment.payload.map(item => {\r\n            const tmp = Number(item.Price) * Number(item.Quantity)\r\n            total += tmp\r\n            const initItem = {\r\n              pid: item.Pid,\r\n              quantity: Number(item.Quantity)\r\n            }\r\n            return initItem\r\n          })\r\n          let discount = 0;\r\n          if (values.voucher.trim() != \"\") {\r\n            discount = await CheckDiscount(values.voucher.trim())\r\n            if (discount == 0) {\r\n              toast.error('Mã giảm giá không hợp lệ', {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: \"light\",\r\n              });\r\n              return;\r\n            }\r\n          }\r\n          total = total * (1 - discount);\r\n          // user login\r\n          if (Authur.success == true && Payment.success == true) {\r\n\r\n            console.log(\"s\", Authur.payload.uid, {\r\n              emailOrPhone: values.emailOrPhoneNumber,\r\n              Address: values.address,\r\n              Total: total,\r\n              PriceDiscount: discount,\r\n              FullName: Authur.payload.user.FullName,\r\n              Payments: values.delivery\r\n\r\n            }, initCart)\r\n            await AddPurchaseHistoryForUser(Authur.payload.uid, true, {\r\n              emailOrPhone: values.emailOrPhoneNumber,\r\n              Address: values.address,\r\n              Total: total,\r\n              PriceDiscount: discount,\r\n              FullName: Authur.payload.user.FullName,\r\n              Payments: values.delivery\r\n\r\n            }, initCart)\r\n\r\n          } else {\r\n            // authr false code here \r\n            const user = v4()\r\n            await AddPurchaseHistoryForUser(user, false, {\r\n              emailOrPhone: `${values.emailOrPhoneNumber}`,\r\n              Address: values.address,\r\n              Total: total,\r\n              PriceDiscount: discount,\r\n              FullName: user,\r\n              Payments: values.delivery\r\n\r\n            }, initCart)\r\n\r\n          }\r\n          // remove item in cart \r\n          Payment.payload.map(item => {\r\n            Cartdispatch({\r\n              type: CART__REMOVE,\r\n              payload: item.Pid,\r\n            })\r\n          })\r\n          toast.success('🦄 Mua hàng thành công!', {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n          });\r\n          history(\"/\");\r\n          // code here\r\n\r\n          console.log(Payment.payload)\r\n        } catch (e) {\r\n          console.log(e)\r\n          toast.error('Đã xảy ra lỗi vui lòng thử lại', {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n          });\r\n\r\n\r\n        }\r\n        // AddPurchaseHistoryForUser\r\n      }, [Payment]\r\n    )\r\n  });\r\n\r\n  return (\r\n    <div className='Payment'>\r\n      <div className=\"container Payment__container\">\r\n        <div className=\"Payment__infomation\">\r\n          <Section>\r\n            <SectionTitle>Thông tin khách hàng</SectionTitle>\r\n            <form action=\"\">\r\n              <div className=\"Payment__group input-container border--active\">\r\n                <input\r\n                  id=\"emailOrPhoneNumber\"\r\n                  name=\"emailOrPhoneNumber\"\r\n                  type=\"number\"\r\n                  max=\"999999999999\"\r\n                  // placeholder = \"Email / Số điện thoại\"\r\n                  onChange={formik.handleChange}\r\n                  onBlur={formik.handleBlur}\r\n                  value={formik.values.emailOrPhoneNumber}\r\n                  required\r\n                />\r\n                <label>Số điện thoại</label>\r\n                {formik.touched.emailOrPhoneNumber && formik.errors.emailOrPhoneNumber ? <p className=\"error-message\">{formik.errors.emailOrPhoneNumber}</p> : null}\r\n              </div>\r\n              <div className=\" Payment__group input-container border--active\">\r\n                <input\r\n                  id=\"address\"\r\n                  name=\"address\"\r\n                  type=\"text\"\r\n                  // placeholder = \"Email / Số điện thoại\"\r\n                  onChange={formik.handleChange}\r\n                  onBlur={formik.handleBlur}\r\n                  value={formik.values.address}\r\n                  required\r\n                />\r\n                <label>Địa Chỉ</label>\r\n                {formik.touched.address && formik.errors.address ? <p className=\"error-message\">{formik.errors.address}</p> : null}\r\n              </div>\r\n              <div className=\"Payment__group input-container\">\r\n                <CustomSelect\r\n                  className='input'\r\n                  onChange={value => formik.setFieldValue('delivery', value.value)}\r\n                  value={formik.values.delivery}\r\n                  options={options}\r\n                  placeholder={\"Hình thức thánh toán\"}\r\n\r\n                />\r\n                {formik.touched.delivery && formik.errors.delivery ? <p className=\"error-message active__error__xl\">{formik.errors.delivery}</p> : null}\r\n              </div>\r\n              {/* <button type=\"submit\" onClick={formik.handleSubmit}>Đăng Nhập</button> */}\r\n            </form>\r\n          </Section>\r\n          <Section>\r\n            <SectionTitle>Mã giảm giá </SectionTitle>\r\n            <div className=\"Payment__group input-container border--active\">\r\n              <input\r\n                id=\"voucher\"\r\n                name=\"voucher\"\r\n                type=\"text\"\r\n                // placeholder = \"Email / Số điện thoại\"\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                value={formik.values.voucher}\r\n                required\r\n              />\r\n              <label>Nhập mã giảm giá để được ưu đãi nhé </label>\r\n\r\n            </div>\r\n          </Section>\r\n        </div>\r\n        <div className=\"Payment__Product\">\r\n          <Section>\r\n            <SectionTitle> Hóa đơn sản phẩm</SectionTitle>\r\n            <SectionBody>\r\n              {\r\n                Payment.success == true && Payment.payload.length > 0\r\n                  ? <div className=\"Payment__Product__list\">\r\n\r\n                    {\r\n                      Payment.payload.map(item => {\r\n                        const total = formatNumber(Number(item.Price) * Number(item.Quantity))\r\n                        return (\r\n                          <div className=\"Payment__Product__item\">\r\n                            <div className=\"Payment__Product__wrapper\">\r\n                              <div className=\"Payment__Product__img\">\r\n                                <img src={item.Image[0]} alt=\"\" />\r\n                              </div>\r\n                              <div className=\"Payment__Product__content\">\r\n                                {/* <p>{item.Pid}</p> */}\r\n                                <h2>{item.NameProduct}</h2>\r\n                                <p>Số lượng: {item.Quantity}</p>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"Payment__Product__price\">\r\n\r\n                              <p>{formatNumber(total)}₫</p>\r\n                            </div>\r\n                          </div>\r\n                        )\r\n                      })\r\n                    }\r\n\r\n\r\n                  </div>\r\n                  : <div className='Payment__Product__404'>\r\n                    <Sea></Sea>\r\n                    <h2 >Rất tiếc bạn chưa chọn sản phẩm để thanh toán </h2>\r\n                    <Link to={\"/Account/Cart\"}>Cùng quay lại giỏ hàng nhé !</Link>\r\n                  </div>\r\n              }\r\n\r\n            </SectionBody>\r\n            <SectionTitle>\r\n              <div className=\"Payment__total\">\r\n                <div className=\"Payment__total__warpper\">\r\n                  <h2>Tổng tiền</h2>\r\n                  <span>{formatNumber(Total)}₫</span>\r\n                </div>\r\n\r\n                <div className=\"Payment__total__button\" onClick={formik.handleSubmit}>\r\n                  <Button>Mua Ngay</Button>\r\n                </div>\r\n              </div>\r\n            </SectionTitle>\r\n          </Section>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nPayment.propTypes = {}\r\n\r\nexport default Payment","import {db} from '../../Firebase__config'\r\nimport { addDoc, collection, doc, getDoc, getDocs, setDoc, updateDoc} from \"firebase/firestore\";\r\n\r\n\r\nconst CollectionName = \"PurchaseHistory\"\r\n\r\nexport const AddPurchaseHistory = async(uid,uPid,PurchaseHistory)=>{\r\n    const colRef = collection(db, CollectionName);\r\n    const PurDoc = await setDoc(doc(db,\"PurchaseHistory\",uPid),PurchaseHistory);\r\n    \r\n    await updateDoc(doc(db,\"PurchaseHistory\",uPid),{\r\n        Uid:uid,\r\n    })\r\n    \r\n    \r\n}\r\n\r\n//get PurchaseHistory by user\r\nexport const GetPurchaseHistoryByUser = async(uid)=>{\r\n    const colRef = collection(db, CollectionName);\r\n    const ListPur = [];\r\n    const ListPurUser = [];\r\n    const docsSnap = await getDocs(colRef)\r\n    docsSnap.forEach(doc=>{\r\n        ListPur.push({\r\n            PurID: doc.id,\r\n            Info:doc.data()\r\n        })\r\n    })\r\n    for(let i=0; i<ListPur.length; i++){\r\n        if(ListPur[i].Info.Uid ===uid){\r\n            ListPurUser.push(ListPur[i])\r\n        }\r\n    }\r\n    return{\r\n        success: true,\r\n        payload:ListPurUser,\r\n    }\r\n}","import {db} from '../../Firebase__config'\r\nimport { addDoc, arrayUnion, collection, deleteDoc, doc, getDoc, getDocs, query, serverTimestamp, setDoc, Timestamp, updateDoc } from \"firebase/firestore\";\r\nimport { async } from '@firebase/util';\r\nimport { set } from 'firebase/database';\r\nimport {AddBestSell, GetNameProduct, GetPriceProduct, GetQuantityProduct,} from '../Product/Product'\r\nimport { GetPercentDiscountByID } from './Discount';\r\nimport { AddPurchaseHistory } from './PurchaseHistory';\r\nconst CollectionName = \"User\"\r\n\r\n\r\nexport const AddUserCollection = async(uid,newUser)=>{\r\n    const {Email,firstname,lastname} = newUser;\r\n    const initUser = {\r\n        Email:Email,\r\n        Address:\"\",\r\n        Number:\"\",\r\n        ImgUser:\"https://mir-s3-cdn-cf.behance.net/project_modules/max_1200/36015793570193.5e6c1151cb04b.png\",\r\n        FullName:`${firstname} ${lastname}`,\r\n        Birthdate:\"\",\r\n        Role:\"user\",\r\n    }    \r\n    return await setDoc(doc(db, CollectionName, uid), initUser)\r\n    .then(e=>{\r\n        return {\r\n            success: true,\r\n            payload:null,\r\n        }\r\n    })\r\n    .catch((error) => {\r\n        return {\r\n            success: false,\r\n            payload:error,\r\n        }\r\n    })\r\n\r\n}\r\n\r\nexport const GetUserCollection = async(uid)=>{\r\n    \r\n    const docRef = doc(db, CollectionName, uid);   \r\n    const docSnap = await getDoc(docRef);\r\n    if (docSnap.exists()) {\r\n        return {\r\n            success: true,\r\n            payload:docSnap.data(),\r\n        }\r\n    } else {\r\n        // doc.data() will be undefined in this case\r\n        return {\r\n            success: false,\r\n            payload:\"No such document!\",\r\n        }\r\n    }\r\n}\r\n\r\nexport const UpdateUser = async(uid,updateUser)=>{\r\n    const {\r\n        Email,\r\n        Address,\r\n        Number,\r\n        ImgUser,\r\n        FullName,\r\n        Birthdate, \r\n        \r\n    } = updateUser;\r\n    console.log(Email)\r\n    const docRef = doc(db, CollectionName,uid);\r\n    return await updateDoc(docRef,{\r\n        Email:Email,\r\n        Address:Address,\r\n        Number:Number,\r\n        ImgUser:ImgUser,\r\n        FullName:FullName,\r\n        Birthdate:Timestamp.fromDate(new Date(Birthdate)) ,\r\n        Role: \"User\"\r\n    })\r\n    .then(docRef =>{\r\n        return{\r\n            success: true,\r\n            payload:updateUser\r\n        }\r\n    })\r\n    .catch(e=>{\r\n        return{\r\n            success: false,\r\n            payload:e\r\n        }\r\n    })\r\n\r\n\r\n}\r\n\r\nexport const AddToCart = async(value)=>{\r\n    const {uid,Pid,Number} = value;\r\n    const washingtonRef = doc(db,CollectionName, uid);\r\n    //const docRef = await doc(db, `${CollectionName}/${uid}/Cart/`);\r\n\r\n    // add new user \r\n    await updateDoc(washingtonRef, {\r\n        Cart: arrayUnion({\r\n            Pid:Pid,\r\n            Number:Number,\r\n        })\r\n    });\r\n \r\n}\r\nexport const GetToCart = async(uid)=>{\r\n    // const docRef = doc(db,CollectionName,`${uid}/Cart/`);\r\n    const washingtonRef = doc(db,CollectionName, uid,\"Cart\");\r\n    await getDoc(washingtonRef)\r\n    .then((e)=>{\r\n        return {\r\n            success: true,\r\n            payload:e,\r\n        }\r\n    })\r\n    .catch(e=>{\r\n        return {\r\n            success: false,\r\n            payload:e,\r\n        }\r\n    })\r\n    \r\n}\r\nexport const setNewCart = async(uid,listProduct)=>{\r\n    \r\n    const washingtonRef = doc(db,CollectionName, uid);\r\n    \r\n    // add new user \r\n    await updateDoc(washingtonRef, {\r\n        Cart: listProduct\r\n    })\r\n    .then(()=>{\r\n        return {\r\n            success: true,\r\n            payload:null,\r\n        }\r\n    })\r\n    .catch(e=>{\r\n        return {\r\n            success: false,\r\n            payload:e,\r\n        }\r\n    })\r\n}\r\n\r\n//PurchaseHistory\r\nexport const AddPurchaseHistoryForUser = async(uid,status,Cart,ListProduct=[{pid:\"\",quantity:\"\"}]) =>{ \r\n    const {emailOrPhone,Address,Payments,Total,PriceDiscount,\r\n        FullName\r\n    } = Cart;\r\n        const initPur = {\r\n            Item:ListProduct,\r\n            Discount:PriceDiscount,\r\n            Total:Total,\r\n            DayPurchased:serverTimestamp(),\r\n            Address:Address,\r\n            Payments:Payments,\r\n            FullName:FullName,\r\n            Email:emailOrPhone,\r\n            Status:\"Pending\",\r\n        }\r\n        if(status===true){\r\n            \r\n            const docRef = doc(db, CollectionName, uid);\r\n            const colRef = collection(docRef, \"PurchaseHistoryForUser\");\r\n            const PurDoc = await addDoc(colRef,initPur);\r\n            for(let i=0;i<ListProduct.length;i++){\r\n                const docRefP = doc(db,\"Product\",ListProduct[i].pid);\r\n                const QuantityProduct = await GetQuantityProduct(ListProduct[i].pid);\r\n                await updateDoc(docRefP,{\r\n                    Quantity:(QuantityProduct-ListProduct[i].quantity).toString()})\r\n                await AddBestSell(ListProduct[i].pid,ListProduct[i].quantity);\r\n                \r\n            }\r\n            await AddPurchaseHistory(uid,PurDoc.id,initPur);\r\n        }\r\n        else{\r\n            const colRef = collection(db,\"PurchaseHistory\");\r\n            const PurDoc = await addDoc(colRef,initPur);\r\n            const docPur = await doc(db,\"PurchaseHistory\",PurDoc.id);\r\n            for(let i=0;i<ListProduct.length;i++){\r\n                const docRefP = doc(db,\"Product\",ListProduct[i].pid);\r\n                const QuantityProduct = await GetQuantityProduct(ListProduct[i].pid);\r\n                await updateDoc(docRefP,{\r\n                    Quantity:(QuantityProduct-ListProduct[i].quantity).toString()\r\n                                     })\r\n                await AddBestSell(ListProduct[i].pid,ListProduct[i].quantity);\r\n                \r\n            }\r\n            await updateDoc(docPur,{\r\n                    Uid:uid,\r\n        })\r\n        }\r\n       \r\n    }\r\n    export const GetPurchaseHistoryByUser=async(uid,uPid)=>{\r\n        const docRef = doc(db, CollectionName,uid,\"PurchaseHistoryForUser\",uPid);\r\n        const docSnap = await getDoc(docRef);\r\n        if(docSnap.exists())\r\n            return await docSnap.data();\r\n        return{\r\n            success: false,\r\n            payload:\"No Purchase History\"\r\n        }\r\n    }\r\n    \r\n    //Get quantity product\r\n    export const GetQuantity=async(uid,uPid)=>{\r\n        const docRef = doc(db, CollectionName,uid,\"PurchaseHistoryForUser\",uPid);\r\n        const docSnap = await getDoc(docRef);\r\n        if(docSnap.exists())\r\n            return await docSnap.data().Item;\r\n        return{\r\n            success: false,\r\n            payload:\"No Purchase History\"\r\n        }\r\n    }","export  function formatNumber(num) {\r\n    return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\r\n}\r\n\r\nexport function formatTimestamptoDate(initdate){\r\n    let date = JSON.stringify(initdate)\r\n    return date.slice(1,11)\r\n}\r\n"],"names":["props","class","onClick","e","children","onChange","options","value","className","placeholder","find","option","defaultValue","label","phoneRegExp","useContext","PaymentContext","Payment","Paymentdispatch","CartContext","Cartdispatch","Cart","AuthContext","Authur","dispatch","useState","Total","setTotal","history","useNavigate","useEffect","success","payload","length","tmp","map","item","curTotal","Number","Price","Quantity","console","log","formik","useFormik","enableReinitialize","initialValues","emailOrPhoneNumber","user","address","Address","delivery","voucher","validationSchema","Yup","required","matches","min","max","onSubmit","useCallback","values","total","initCart","pid","Pid","quantity","discount","trim","CheckDiscount","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","uid","emailOrPhone","PriceDiscount","FullName","Payments","AddPurchaseHistoryForUser","v4","type","CART__REMOVE","Section","action","id","name","handleChange","onBlur","handleBlur","touched","errors","CustomSelect","setFieldValue","formatNumber","src","Image","alt","NameProduct","Sea","to","handleSubmit","Button","CollectionName","AddPurchaseHistory","uPid","PurchaseHistory","collection","db","setDoc","doc","updateDoc","Uid","AddUserCollection","newUser","Email","firstname","lastname","initUser","ImgUser","Birthdate","Role","then","catch","error","GetUserCollection","docRef","getDoc","docSnap","exists","data","UpdateUser","updateUser","Timestamp","Date","status","ListProduct","initPur","Item","Discount","DayPurchased","serverTimestamp","Status","colRef","addDoc","PurDoc","i","docRefP","GetQuantityProduct","QuantityProduct","toString","AddBestSell","docPur","num","replace","formatTimestamptoDate","initdate","JSON","stringify","slice"],"sourceRoot":""}