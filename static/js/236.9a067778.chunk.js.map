{"version":3,"file":"static/js/236.9a067778.chunk.js","mappings":"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","sources":["components/Chart/Charts.jsx"],"sourcesContent":["import React, { useCallback, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  CategoryScale,\r\n  Chart,\r\n  Filler,\r\n  Legend,\r\n  LinearScale,\r\n  LineElement,\r\n  PointElement,\r\n  Title,\r\n  Tooltip\r\n} from \"chart.js\";\r\n\r\nimport { Line } from \"react-chartjs-2\";\r\nimport Section, { SectionBody, SectionTitle } from '../Section/Section';\r\nimport \"./Chart.scss\"\r\nimport { useEffect } from 'react';\r\nimport { GetAllProduct } from '../../services/Product/Product';\r\nimport { GetQuantitySoldProductOrMonth, GetTotalQuantitySoldOrMonth } from '../../services/Authencation/Report';\r\nconst chartData =(listData = [0,0,0,0,0,0,0,0,0,0,0,0])=>{\r\n  return {\r\n    labels: [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\"\r\n    ],\r\n    datasets: [\r\n      {\r\n        data: listData,\r\n        label: \"Total\",\r\n        fill: false,\r\n        borderColor: \"#FFC888\",\r\n        backgroundColor: \"#FF8B04\",\r\n        radius: 4,\r\n        hoverRadius: 5,\r\n        tension: 0.1\r\n      },\r\n  \r\n    ],\r\n  \r\n  };\r\n} \r\nconst listMonth = [1,2,3,4,5,6,7,8,9,10,11,12]\r\nconst options = {\r\n  responsive: true,\r\n  interaction: {\r\n    intersect: false,\r\n    mode: \"x\"\r\n  },\r\n  hover: {\r\n    mode: \"index\",\r\n    interactive: false\r\n  },\r\n  plugins: {\r\n    legend: {\r\n      position: \"top\"\r\n    },\r\n    title: {\r\n      display: true,\r\n      text: \"total\"\r\n    },\r\n    tooltip: {\r\n      mode: \"x\",\r\n      yAlign: \"bottom\"\r\n    }\r\n  },\r\n  options: {\r\n    responsive: true,\r\n    maintainAspectRatio: false\r\n\r\n    /*, your other options*/\r\n\r\n  }\r\n\r\n};\r\nconst Charts = props => {\r\n  const [Product, setProduct] = useState([])\r\n  const [active, SetActive] = useState(null)\r\n  const [chart,setChart] = useState(chartData())\r\n  Chart.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Legend,\r\n    Tooltip,\r\n    Filler\r\n  );\r\n  // get all total in years\r\n  const getAllTotal = async()=>{\r\n      const date = new Date().getFullYear();\r\n      const listTotal = listMonth.map(async(item)=>{\r\n        const data =  await GetTotalQuantitySoldOrMonth(item,date);\r\n        return data;\r\n      })\r\n      const data = await Promise.all(listTotal)\r\n      \r\n      const initListMonth = data.map(item=>{\r\n        return item.payload;\r\n      })\r\n      setChart(chartData(initListMonth))\r\n      console.log(\"a\")\r\n  }\r\n\r\n  const getPidTotal = useCallback(async(Pid)=>{\r\n    try{\r\n      const date = new Date().getFullYear();\r\n      const listTotal = listMonth.map(async(item)=>{\r\n        const data =  await GetQuantitySoldProductOrMonth(Pid,item,date);\r\n        return data;\r\n      })\r\n      const data = await Promise.all(listTotal)\r\n      const initListMonth = data.map(item=>{\r\n        return item.payload;\r\n      })\r\n     \r\n      setChart(chartData(initListMonth))\r\n     \r\n    }catch(e){\r\n      console.log(e)\r\n    }\r\n  },[active]) \r\n   // get All product\r\n   useEffect(() => {\r\n    const getProduct = async () => {\r\n      const data = await GetAllProduct();\r\n      if (data.success == true) {\r\n        setProduct(data.payload)\r\n      }\r\n      \r\n    }\r\n    const data = GetQuantitySoldProductOrMonth(\"6idh8CgVd3QNPgaeFzop\",3,2022)\r\n    getProduct()\r\n    // getPidTotal(\"6lyk7W5ubcLF4DRu2hlR\")\r\n  }, [])\r\n  \r\n  useEffect(()=>{\r\n    getAllTotal()\r\n  },[])\r\n\r\n  // checked active product\r\n  const handleActive = useCallback((Pid) => {\r\n    SetActive(Pid)\r\n    getPidTotal(Pid)\r\n  }, [active])\r\n\r\n  const handleRemoveActive = useCallback(() => {\r\n    SetActive(null)\r\n    getAllTotal()\r\n  },[])\r\n\r\n  return (\r\n    <div className='Chart'>\r\n      <div className='Colection__chart'>\r\n        <>\r\n          <SectionTitle>\r\n            <div className={`Chart__title ${active == null ? \"active\" : \"\"}`} onClick={(e)=>handleRemoveActive()}>\r\n              <span>\r\n                Colection\r\n              </span>\r\n              <i class={`bx bx-home `} ></i>\r\n            </div>\r\n          </SectionTitle>\r\n          <SectionBody>\r\n            <div className=\"Colection__chart__list\">\r\n              {\r\n                Product && Product.map((item) => {\r\n                  return (\r\n                    <div className={`Colection__chart__item ${item.Pid.includes(active) ? \"active\" : \"\"}`} onClick={(e) => handleActive(item.Pid)} >\r\n                      <p>{item.Pid}</p>\r\n                      <h2>{item.Info.NameProduct}</h2>\r\n                    </div>\r\n                  )\r\n                })\r\n              }\r\n\r\n            </div>\r\n          </SectionBody>\r\n        </>\r\n      </div>\r\n      <div className=\"Chart__view\">\r\n        <Section>\r\n\r\n          <Line data={chart} options={options} />\r\n        </Section>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nCharts.propTypes = {}\r\n\r\nexport default Charts"],"names":["chartData","listData","labels","datasets","data","label","fill","borderColor","backgroundColor","radius","hoverRadius","tension","listMonth","options","responsive","interaction","intersect","mode","hover","interactive","plugins","legend","position","title","display","text","tooltip","yAlign","maintainAspectRatio","props","useState","Product","setProduct","active","SetActive","chart","setChart","Chart","CategoryScale","LinearScale","PointElement","LineElement","Title","Legend","Tooltip","Filler","getAllTotal","date","Date","getFullYear","listTotal","map","item","GetTotalQuantitySoldOrMonth","Promise","all","initListMonth","payload","console","log","getPidTotal","useCallback","Pid","GetQuantitySoldProductOrMonth","useEffect","getProduct","GetAllProduct","success","handleActive","handleRemoveActive","className","Section","onClick","e","class","includes","Info","NameProduct"],"sourceRoot":""}