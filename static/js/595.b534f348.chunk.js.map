{"version":3,"file":"static/js/595.b534f348.chunk.js","mappings":"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","sources":["components/AddProduct/AddProduct.jsx","components/Button/Button/Button.jsx","components/FieldCustom/CustomSelect.jsx","services/Cloud/Cloud.jsx","utils/Format.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport \"./AddProduct.scss\"\r\nimport Section, { SectionBody, SectionTitle } from '../Section/Section'\r\nimport { AddNewProduct, deleteProduct, GetAllProduct, GetProductById, updateProduct } from '../../services/Product/Product'\r\nimport { useCallback } from 'react'\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from \"yup\"\r\nimport Button from '../Button/Button/Button'\r\nimport CustomSelect from '../FieldCustom/CustomSelect'\r\nimport { formatTimestamptoDate } from '../../utils/Format'\r\nimport { UploadImagetoCloud } from '../../services/Cloud/Cloud'\r\nimport { toast } from 'react-toastify'\r\nconst initProduct = {\r\n  Info: {\r\n    Classify: \"\",\r\n    DayProduce: \"\",\r\n    Ingerdient: \"\",\r\n    NameProduct: \"\",\r\n    Price: 0,\r\n    Image: [],\r\n    PriceDiscount: \"\",\r\n    Quantity: 0,\r\n    DescriptionProduct: \"\",\r\n    exp: \"\",\r\n    mfg: \"\",\r\n  },\r\n  Pid: \"\"\r\n}\r\n\r\nconst options = [\r\n  { value: 'Candy', label: 'Candy' },\r\n  { value: 'Pastry', label: 'Pastry' },\r\n  { value: 'Chocolate', label: 'Chocolate' },\r\n  { value: 'Salty cake', label: 'Salty cake' },\r\n  { value: 'Holiday cake', label: 'Holiday cake' },\r\n]\r\nconst AddProduct = props => {\r\n  const [Product, setProduct] = useState([]);\r\n  const [active, setActive] = useState(null);\r\n  const [formProduct, setFormProduct] = useState(initProduct);\r\n  const [status, setStatus] = useState(true);\r\n  const getProduct = async () => {\r\n    const data = await GetAllProduct();\r\n    if (data.success == true) {\r\n      setProduct(data.payload)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    getProduct()\r\n  }, [])\r\n  // find curreent item in Product\r\n  useEffect(() => {\r\n    if (Product.length > 0 && active) {\r\n      const data = Product.find(item => {\r\n        return item.Pid.includes(active);\r\n      })\r\n      setFormProduct(data);\r\n    }\r\n\r\n  }, [active])\r\n\r\n  // checked active \r\n  const handleActive = useCallback((Pid) => {\r\n    setActive(Pid)\r\n    setStatus(true)\r\n  }, [active])\r\n\r\n  // check edit = \r\n  const handleStatus = useCallback(() => {\r\n    setStatus(false)\r\n  }, [active])\r\n\r\n  const handleRemoveImage = useCallback((Image) => {\r\n    if (formProduct.Info.Image.length > 1) {\r\n      const initNewProduct = {\r\n        ...formProduct,\r\n        Info: {\r\n          ...formProduct.Info,\r\n          Image: formProduct.Info.Image.filter(image => { return image !== Image })\r\n        }\r\n      }\r\n      setFormProduct(initNewProduct)\r\n    } else {\r\n\r\n    }\r\n  }, [formProduct])\r\n\r\n  const handleUploadImage = useCallback(async (Avatar) => {\r\n    try {\r\n      const initImage = await UploadImagetoCloud(Avatar);\r\n      console.log(initImage)\r\n      const initNewProduct = {\r\n        ...formProduct,\r\n        Info: {\r\n          ...formProduct.Info,\r\n          Image: [...formProduct.Info.Image, initImage.payload]\r\n        }\r\n      }\r\n      setFormProduct(initNewProduct)\r\n\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n\r\n  })\r\n\r\n\r\n  const editProduct = useCallback(() => {\r\n    setActive(null);\r\n    setFormProduct(initProduct);\r\n  }, [active, formProduct]);\r\n\r\n  const handleRemoveProduct = async(e, Pid) => {\r\n    e.preventDefault()\r\n    console.log(e,Pid)\r\n    await deleteProduct(Pid)\r\n    await getProduct()\r\n    await editProduct()\r\n\r\n    toast.success(`🦄 delete complete ${Pid}`, {\r\n      position: \"top-right\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      theme: \"light\",\r\n    });\r\n  }\r\n\r\n  const handleBackupProduct = useCallback(\r\n    async(product)=>{\r\n      console.log(\"s\",product)\r\n      formik.setFieldValue(\"NameProduct\",product.Info.NameProduct)\r\n      formik.setFieldValue(\"Pid\",product.Pid)\r\n      formik.setFieldValue(\"Classify\",product.Info.Classify)\r\n      formik.setFieldValue(\"DescriptionProduct\",product.Info.DescriptionProduct)\r\n      formik.setFieldValue(\"DayProduce\",product.Info.DayProduce)\r\n      formik.setFieldValue(\"Ingerdient\",product.Info.Ingerdient)\r\n      formik.setFieldValue(\"Price\",product.Info.Price)\r\n      formik.setFieldValue(\"Quantity\",product.Info.Quantity)\r\n      formik.setFieldValue(\"exp\",formatTimestamptoDate(product.Info.exp != \"\" ? product.Info.exp.toDate() : \"\"))\r\n      formik.setFieldValue(\"mfg\",formatTimestamptoDate(product.Info.mfg != \"\" ? product.Info.mfg.toDate() : \"\"))\r\n      setStatus(true)\r\n    },[formProduct]\r\n  ) \r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      Classify: formProduct.Info.Classify,\r\n      DescriptionProduct: formProduct.Info.DescriptionProduct,\r\n      DayProduce: formProduct.Info.DayProduce,\r\n      Ingerdient: formProduct.Info.Ingerdient,\r\n      NameProduct: formProduct.Info.NameProduct,\r\n      Price: formProduct.Info.Price,\r\n      Quantity: formProduct.Info.Quantity,\r\n      exp: formatTimestamptoDate(formProduct.Info.exp != \"\" ? formProduct.Info.exp.toDate() : \"\"),\r\n      mfg: formatTimestamptoDate(formProduct.Info.mfg != \"\" ? formProduct.Info.mfg.toDate() : \"\"),\r\n      Pid: formProduct.Pid,\r\n    },\r\n\r\n    // validationSchema: Yup.object({\r\n    //   Classify: Yup.string().required(\"Vui lòng nhập loại\"),\r\n    //   DescriptionProduct: Yup.string().required(\"Vui lòng nhập Mô tả\"),\r\n    //   Ingerdient: Yup.string().required(\"Vui lòng nhập nguyên liệu\"),\r\n    //   NameProduct: Yup.string().required(\"Vui lòng nhập tên\"),\r\n    //   Price: Yup.number().required(\"Vui lòng nhập giá\"),\r\n    //   Quantity: Yup.number().required(\"Vui lòng nhập số lượng\"),\r\n    //   exp: Yup.string().required(\"Vui lòng nhập thời gian sử dụng\"),\r\n    //   mfg: Yup.string().required(\"Vui lòng nhập thời gian sử dụng\"),\r\n    // }),\r\n    onSubmit: async (values) => {\r\n      try {\r\n        console.log(\"value\", values)\r\n\r\n        if (active == null) {\r\n          console.log(\"new product\")\r\n          if (formProduct.Info.Image.length === 0) {\r\n            toast.error('Please select at least 1 photo !', {\r\n              position: \"top-right\",\r\n              autoClose: 5000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: \"light\",\r\n            });\r\n            return;\r\n          }\r\n          // add new product\r\n          const initNewProduct = await AddNewProduct({\r\n            NameProduct: values.NameProduct,\r\n            DescriptionProduct: values.DescriptionProduct,\r\n            Ingerdient: values.Ingerdient,\r\n            Price: values.Price,\r\n            Quantity: values.Quantity,\r\n            ImageIdProduct: formProduct.Info.Image,\r\n            exp: values.exp,\r\n            mfg: values.mfg,\r\n            Classify: values.Classify,\r\n          })\r\n          toast.success(`🦄 add complete ${values.NameProduct}`, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n          });\r\n          // reset ui \r\n          editProduct()\r\n          formik.values.NameProduct = \"\"\r\n          formik.values.DescriptionProduct = \"\"\r\n          formik.values.Ingerdient = \"\"\r\n          formik.values.NameProduct = \"\"\r\n          formik.values.Classify = \"\"\r\n          formik.values.Price = 1\r\n          formik.values.Quantity = 1\r\n          formik.values.exp = \"\"\r\n          formik.values.mfg = \"\"\r\n\r\n        } else {\r\n          console.log(\"updata ui\")\r\n          const initNewProduct = await updateProduct(`${values.Pid}`, {\r\n            NameProduct: values.NameProduct,\r\n            DescriptionProduct: values.DescriptionProduct,\r\n            Ingerdient: values.Ingerdient,\r\n            Price: values.Price,\r\n            Quantity: values.Quantity,\r\n            ImageIdProduct: formProduct.Info.Image,\r\n            exp: values.exp,\r\n            mfg: values.mfg,\r\n            Classify: values.Classify,\r\n          },)\r\n          console.log(initNewProduct)\r\n          toast.success(`🦄 updata complete ${values.NameProduct}`, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n          });\r\n        }\r\n\r\n      } catch (err) {\r\n        console.log(err);\r\n      } finally {\r\n\r\n        getProduct();\r\n        setStatus(true)\r\n      }\r\n\r\n      // addNewProduct()\r\n\r\n    },\r\n    \r\n  })\r\n\r\n  console.log(\"dtas\", formProduct)\r\n  return (\r\n    <div className='AddProduct'>\r\n      <div className='Colection AddProduct__list'>\r\n        <>\r\n          <SectionTitle>\r\n            <div className='AddProduct__title'>\r\n              <span>\r\n                Colection\r\n              </span>\r\n              <i className={`bx bx-plus ${active == null ? \"active\" : \"\"}`} onClick={(e) => editProduct()} ></i>\r\n            </div>\r\n\r\n\r\n          </SectionTitle>\r\n          <SectionBody>\r\n            <div className=\"Colection__list\">\r\n              {\r\n                Product && Product.map((item) => {\r\n                  return (\r\n                    <div className={`Colection__item ${item.Pid.includes(active) ? \"active\" : \"\"}`}\r\n                      onClick={(e) => handleActive(item.Pid)}\r\n                      key={item.Pid}\r\n                    >\r\n                      <div className=\"Colection__item__warpper\">\r\n                        <p>{item.Pid}</p>\r\n                        <h2>{item.Info.NameProduct}</h2>\r\n                      </div>\r\n                      <div className=\"Colection__item__remove\" onClick={(e)=>handleRemoveProduct(e,item.Pid)}>\r\n                        <i class='bx bx-minus'></i>\r\n                      </div>\r\n                    </div>\r\n                  )\r\n                })\r\n              }\r\n\r\n            </div>\r\n          </SectionBody>\r\n        </>\r\n      </div>\r\n      <div className=\"AddProduct__From\">\r\n\r\n        <SectionTitle>\r\n          <div className='AddProduct__title'>\r\n\r\n            <span>\r\n              ID\r\n            </span>\r\n            {\r\n              status\r\n                ? <div className=\"AddProduct__btn\" onClick={() => handleStatus()}\r\n                >\r\n                  <Button>Edit</Button>\r\n                </div>\r\n                : \r\n                  <div className=\"AddProduct__warpper__btn\">\r\n                    <div className=\"AddProduct__btn\" onClick={()=>handleBackupProduct(formProduct)}>\r\n                      <Button>Close</Button>\r\n                    </div>\r\n                    <div className=\"AddProduct__btn\" onClick={formik.submitForm}>\r\n                      <Button>Save</Button>\r\n                    </div>\r\n                    \r\n                  </div>\r\n            }\r\n          </div>\r\n        </SectionTitle>\r\n        <SectionBody>\r\n          <div className=\"AddProduct__warpper\">\r\n            <form action=\"\" className='AddProduct__infomation'>\r\n              <div className=\"input-container border--active input-container__center \">\r\n                <label>Pid</label>\r\n                <input\r\n                  id=\"\"\r\n                  name=\"Pid\"\r\n                  type=\"text\"\r\n                  placeholder=\"Pid....\"\r\n                  onChange={formik.handleChange}\r\n                  onBlur={formik.handleBlur}\r\n                  value={formik.values.Pid}\r\n                  required=\"false\"\r\n                  disabled={true}\r\n                />\r\n\r\n                {formik.touched.Pid && formik.errors.Pid\r\n                  ? <p className=\"error-message\">{formik.errors.Pid}</p> : null}\r\n\r\n              </div>\r\n              <div className=\"input-container border--active input-container__center\">\r\n                <label>NameProduct</label>\r\n                <input\r\n                  id=\"NameProduct\"\r\n                  name=\"NameProduct\"\r\n                  type=\"text\"\r\n                  placeholder=\"NameProduct\"\r\n                  onChange={formik.handleChange}\r\n                  onBlur={formik.handleBlur}\r\n                  value={formik.values.NameProduct}\r\n                  disabled={status ? true : false}\r\n                />\r\n\r\n                {formik.touched.NameProduct && formik.errors.NameProduct\r\n                  ? <p className=\"error-message\">{formik.errors.NameProduct}</p> : null}\r\n\r\n              </div>\r\n              <fieldset>\r\n                <legend>Expiry date</legend>\r\n                <div className=\"AddProduct__fieldset__warpper\">\r\n                  <div className=\"input-container border--active\">\r\n                    <label>exp</label>\r\n                    <input\r\n                      id=\"exp\"\r\n                      name=\"exp\"\r\n                      type=\"date\"\r\n                      placeholder=\"NameProduct\"\r\n                      onChange={formik.handleChange}\r\n                      onBlur={formik.handleBlur}\r\n                      value={formik.values.exp}\r\n                      disabled={status ? true : false}\r\n                    />\r\n\r\n                    {formik.touched.exp && formik.errors.exp\r\n                      ? <p className=\"error-message\">{formik.errors.exp}</p> : null}\r\n\r\n                  </div>\r\n                  <div className=\"input-container border--active\">\r\n                    <label>mfg</label>\r\n                    <input\r\n                      id=\"mfg\"\r\n                      name=\"mfg\"\r\n                      type=\"date\"\r\n                      placeholder=\"NameProduct\"\r\n                      onChange={formik.handleChange}\r\n                      onBlur={formik.handleBlur}\r\n                      value={formik.values.mfg}\r\n                      disabled={status ? true : false}\r\n                    />\r\n\r\n                    {formik.touched.mfg && formik.errors.mfg\r\n                      ? <p className=\"error-message\">{formik.errors.mfg}</p> : null}\r\n\r\n                  </div>\r\n                </div>\r\n\r\n              </fieldset>\r\n              <fieldset>\r\n                <legend>Number</legend>\r\n                <div className=\"AddProduct__fieldset__warpper\">\r\n                  <div className=\"input-container border--active input-container__center\">\r\n                    <label>Price</label>\r\n                    <input\r\n                      id=\"Price\"\r\n                      name=\"Price\"\r\n                      type=\"number\"\r\n                      placeholder=\"Price\"\r\n                      onChange={formik.handleChange}\r\n                      onBlur={formik.handleBlur}\r\n                      value={formik.values.Price}\r\n                      disabled={status ? true : false}\r\n                      max=\"9999\"\r\n                      min=\"1\"\r\n                    />\r\n\r\n                    {formik.touched.Price && formik.errors.Price\r\n                      ? <p className=\"error-message\">{formik.errors.Price}</p> : null}\r\n\r\n                  </div>\r\n                  <div className=\"input-container border--active input-container__center\">\r\n                    <label>Quantity</label>\r\n                    <input\r\n                      id=\"Quantity\"\r\n                      name=\"Quantity\"\r\n                      type=\"number\"\r\n                      placeholder=\"Quantity\"\r\n                      onChange={formik.handleChange}\r\n                      onBlur={formik.handleBlur}\r\n                      value={formik.values.Quantity}\r\n                      disabled={status ? true : false}\r\n                      max=\"9999\"\r\n                      min=\"1\"\r\n                    />\r\n\r\n                    {formik.touched.Quantity && formik.errors.Quantity\r\n                      ? <p className=\"error-message\">{formik.errors.Quantity}</p> : null}\r\n\r\n                  </div>\r\n                </div>\r\n\r\n\r\n              </fieldset>\r\n              <fieldset>\r\n                <legend>Chart</legend>\r\n                <div className=\"input-container input-container__center\">\r\n                  <label> Classify</label>\r\n                  <CustomSelect\r\n                    className='input'\r\n                    onChange={value => formik.setFieldValue('Classify', value.value)}\r\n                    value={formik.values.Classify}\r\n                    options={options}\r\n                    placeholder={\" Classify\"}\r\n                    disabled={status ? true : false}\r\n\r\n                  />\r\n                  {formik.touched.Classify && formik.errors.Classify ? <p className=\"error-message active__error\">{formik.errors.Classify}</p> : null}\r\n                </div>\r\n                <div className=\"input-container \">\r\n                  <label> Ingerdient</label>\r\n                  <textarea\r\n                    id=\"Ingerdient\"\r\n                    name=\"Ingerdient\"\r\n                    type=\"text\"\r\n                    placeholder=\"Ingerdient\"\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                    value={formik.values.Ingerdient}\r\n                    disabled={status ? true : false}\r\n                  />\r\n\r\n                  {formik.touched.Ingerdient && formik.errors.Ingerdient\r\n                    ? <p className=\"error-message\">{formik.errors.Ingerdient}</p> : null}\r\n\r\n                </div>\r\n\r\n                <div className=\"input-container \">\r\n                  <label>Description</label>\r\n                  <textarea\r\n                    id=\"DescriptionProduct\"\r\n                    name=\"DescriptionProduct\"\r\n                    className='xxl'\r\n                    type=\"text\"\r\n                    placeholder=\"DescriptionProduct\"\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                    value={formik.values.DescriptionProduct}\r\n                    disabled={status ? true : false}\r\n                  />\r\n\r\n                  {formik.touched.DescriptionProduct && formik.errors.DescriptionProduct\r\n                    ? <p className=\"error-message\">{formik.errors.DescriptionProduct}</p> : null}\r\n\r\n                </div>\r\n\r\n              </fieldset>\r\n\r\n            </form>\r\n            <div className=\"AddProduct__list__img\">\r\n              <ul>\r\n                {\r\n                  formProduct && formProduct.Info.Image.map((item, index) => {\r\n                    return (\r\n                      <li className='AddProduct__item' key={`${index}__img`} >\r\n                        <img\r\n                          src={item}\r\n                          alt=\"IMG\" />\r\n                        {\r\n                          status == false && <div className=\"AddProduct__item__remove\" onClick={() => handleRemoveImage(item)}>\r\n                            <i class='bx bxs-minus-circle'></i>\r\n                          </div>\r\n                        }\r\n\r\n                      </li>\r\n                    )\r\n                  })\r\n                }\r\n               \r\n\r\n\r\n\r\n              </ul>\r\n              <label className=\"AddProduct__item AddProduct__item__input\" htmlFor={`input__image`} >\r\n                  <i class='bx bxs-add-to-queue'></i>\r\n                  <input\r\n                    type=\"file\"\r\n                    name='input__image'\r\n                    id='input__image'\r\n                    disabled={status ? true : false}\r\n                    onChange={(e) => handleUploadImage(e.target.files[0])}\r\n\r\n                  />\r\n\r\n                </label>\r\n            </div>\r\n          </div>\r\n\r\n        </SectionBody>\r\n\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nAddProduct.propTypes = {}\r\n\r\nexport default AddProduct\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport \"./Button.scss\"\r\nconst Button = props => {\r\n  return (\r\n    <button class=\"Button\" \r\n        onClick={props.onClick ? (e) => props.onClick(e) : null}\r\n    >\r\n        {props.children}\r\n    </button>\r\n  )\r\n}\r\n\r\nButton.propTypes = {}\r\n\r\nexport default Button","import React from 'react';\r\nimport Select from 'react-select';\r\n\r\n\r\nexport default ({ onChange, options, value, className,placeholder }) => {\r\n\r\n    const defaultValue = (options, value) => {\r\n        return options ? options.find(option => option.value === value) : \"\";\r\n    };\r\n\r\n    return (\r\n        <div className={className}>\r\n            <Select\r\n                value={defaultValue(options, value)}\r\n                placeholder={placeholder}\r\n                onChange={value => {\r\n                    onChange(value)\r\n\r\n                }} options={options} />\r\n        </div>\r\n\r\n    )\r\n}","import {\r\n    ref,\r\n    uploadBytes,\r\n    getDownloadURL,\r\n    listAll,\r\n    list,\r\n  } from \"firebase/storage\";\r\n  import { v4 } from \"uuid\";\r\n  import { storage } from \"../../Firebase__config\";\r\n\r\n\r\n\r\nexport const UploadImagetoCloud = async(Avatar)=>{\r\n    try {\r\n        return new Promise(async(Resolve, Reject)=>{\r\n            try{\r\n                if (Avatar == null) Reject(false);\r\n                \r\n                const imageRef = ref(storage, `images/${Avatar.name + v4()}`);\r\n                console.log('Uploading avatar',imageRef)\r\n                uploadBytes(imageRef, Avatar).then((snapshot) => {\r\n                     getDownloadURL(snapshot.ref).then((url) => {\r\n                        Resolve({\r\n                            success: true,\r\n                            payload: url,\r\n                        });\r\n                    });\r\n                });\r\n            }catch(error) {\r\n                console.log(\"falseUpload\");\r\n                console.log(error);\r\n                Reject(false);\r\n            }\r\n        })\r\n    } catch (error) {\r\n        return {\r\n            success: false,\r\n            payload: null,\r\n        }\r\n    }\r\n}\r\n","export  function formatNumber(num) {\r\n    return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\r\n}\r\n\r\nexport function formatTimestamptoDate(initdate){\r\n    let date = JSON.stringify(initdate)\r\n    return date.slice(1,11)\r\n}\r\n"],"names":["initProduct","Info","Classify","DayProduce","Ingerdient","NameProduct","Price","Image","PriceDiscount","Quantity","DescriptionProduct","exp","mfg","Pid","options","value","label","props","useState","Product","setProduct","active","setActive","formProduct","setFormProduct","status","setStatus","getProduct","GetAllProduct","data","success","payload","useEffect","length","find","item","includes","handleActive","useCallback","handleStatus","handleRemoveImage","initNewProduct","filter","image","handleUploadImage","Avatar","UploadImagetoCloud","initImage","console","log","editProduct","handleRemoveProduct","e","preventDefault","deleteProduct","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","handleBackupProduct","product","formik","setFieldValue","formatTimestamptoDate","toDate","useFormik","enableReinitialize","initialValues","onSubmit","values","AddNewProduct","ImageIdProduct","updateProduct","className","Section","onClick","map","class","Button","submitForm","action","id","name","type","placeholder","onChange","handleChange","onBlur","handleBlur","required","disabled","touched","errors","max","min","CustomSelect","index","src","alt","htmlFor","target","files","children","option","defaultValue","Promise","Resolve","Reject","imageRef","ref","storage","v4","uploadBytes","then","snapshot","getDownloadURL","url","error","formatNumber","num","toString","replace","initdate","JSON","stringify","slice"],"sourceRoot":""}