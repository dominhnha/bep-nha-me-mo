{"version":3,"file":"static/js/162.facf973a.chunk.js","mappings":"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","sources":["components/Button/Button/Button.jsx","components/UserProfile/UserProfile.jsx","services/Authencation/Authencation.jsx","services/Authencation/PurchaseHistory.jsx","services/Authencation/User.jsx","services/Cloud/Cloud.jsx","utils/Format.js","../node_modules/uuid/dist/esm-browser/native.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/v4.js"],"sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport \"./Button.scss\"\r\nconst Button = props => {\r\n  return (\r\n    <button class=\"Button\" \r\n        onClick={props.onClick ? (e) => props.onClick(e) : null}\r\n    >\r\n        {props.children}\r\n    </button>\r\n  )\r\n}\r\n\r\nButton.propTypes = {}\r\n\r\nexport default Button","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './UserProfile.scss'\r\nimport { Outlet, useNavigate } from 'react-router'\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from \"yup\"\r\nimport { SectionBody, SectionTitle } from '../Section/Section';\r\nimport Button from '../Button/Button/Button';\r\nimport { useState } from 'react';\r\nimport { useCallback } from 'react';\r\nimport { AuthContext } from '../../contexts/AuthContextProvider';\r\nimport { useContext } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { UploadImagetoCloud } from '../../services/Cloud/Cloud';\r\nimport { formatTimestamptoDate } from '../../utils/Format';\r\nimport { GetUserCollection, UpdateUser } from '../../services/Authencation/User';\r\nimport { AUTH__REMOVE, AUTH__SET } from '../../reducers/type';\r\nimport { toast } from 'react-toastify';\r\nimport { SignOut } from '../../services/Authencation/Authencation';\r\n\r\nconst initUser = {\r\n    uid: \"\",\r\n    user: {\r\n        Address: \"\",\r\n        Birthdate: \"\",\r\n        Email: \"\",\r\n        FullName: \"\",\r\n        ImgUser: \"\",\r\n        Number: \"\",\r\n        Role: \"user\"\r\n    }\r\n}\r\nconst UserProfile = props => {\r\n    const [active, setActive] = useState(null);\r\n    const [formUser, setFormUser] = useState(initUser);\r\n    const [image,setImage] = useState(\"\")\r\n    const [status, setStatus] = useState(true);\r\n    // load auth\r\n    const { Authur,dispatch } = useContext(AuthContext);\r\n   \r\n    // set top 0 \r\n  useEffect(()=>{\r\n    window.scrollTo(0,0);\r\n   },[])\r\n   // get data by user\r\n    useEffect(() => {\r\n        const getUser = async () => {\r\n            if (Authur.success == true) {\r\n                const newUser = await GetUserCollection(Authur.payload.uid)\r\n                if(newUser.success == true){\r\n                    const initUser = {\r\n                        uid: Authur.payload.uid,\r\n                        user: newUser.payload\r\n    \r\n                    }\r\n                    console.log(\"init user\",initUser)\r\n\r\n                    setFormUser(initUser)\r\n                    setImage(initUser.user.ImgUser)\r\n                }\r\n              \r\n            }\r\n        }\r\n        getUser()\r\n    }, [Authur])\r\n    // logout\r\n   \r\n\r\n    // view control status\r\n    const handleStatus = useCallback(() => {\r\n        setStatus(false)\r\n    }, [active])\r\n    \r\n    const editProduct = useCallback(() => {\r\n        setActive(null);\r\n\r\n    }, [active, formUser]);\r\n    // backup current user\r\n    const handleBackupProduct = useCallback(\r\n        async (product) => {\r\n            console.log(\"Product\", product)\r\n            formik.setFieldValue(\"Email\", product.user.Email)\r\n            formik.setFieldValue(\"Address\", product.user.Address)\r\n            formik.setFieldValue(\"Number\", product.user.Number)\r\n            formik.setFieldValue(\"Fullname\", `${product.user.FullName}`)\r\n            formik.setFieldValue(\"Birthdate\", formatTimestamptoDate(formUser.user.Birthdate))\r\n            setImage(Authur.payload.user.ImgUser)\r\n            setStatus(true)\r\n        }, [formUser]\r\n    )\r\n    // upload img for cloud\r\n    const handleUploadImage = useCallback(async (Avatar) => {\r\n        const initImage = await UploadImagetoCloud(Avatar);\r\n        setImage(initImage.payload)\r\n\r\n    }, [])\r\n    // init formik\r\n    const formik = useFormik({\r\n        enableReinitialize: true,\r\n        initialValues: {\r\n            Email: formUser.user.Email,\r\n            Address: formUser.user.Address,\r\n            Number: formUser.user.Number,\r\n            ImgUser: \"\",\r\n            Fullname: formUser.user.FullName,\r\n            Birthdate:formUser.user.Birthdate != \"\" ? formatTimestamptoDate(formUser.user.Birthdate.toDate()) :\"0-0-0\",\r\n        },\r\n        validationSchema: Yup.object({\r\n\r\n        }),\r\n        onSubmit: async (values) => {\r\n            try {\r\n                console.log(\"S\",values)\r\n                console.log(\"s\",Authur)\r\n               \r\n                // action in provider\r\n                dispatch({\r\n                    type:AUTH__SET,\r\n                    payload:  {\r\n                        user:{\r\n                            uid:Authur.payload.uid,\r\n                            user:{\r\n                                Address: values.Address,\r\n                                Birthdate: values.Birthdate,\r\n                                Email: values.Email,\r\n                                FullName: values.Fullname,\r\n                                ImgUser: image,\r\n                                Number: values.Number,\r\n                                Role: \"User\"\r\n                            }       \r\n                        }\r\n                    }      \r\n                })\r\n                console.log(Authur)\r\n                await UpdateUser(Authur.payload.uid,{\r\n                    Email:values.Email,\r\n                    Address: values.Address,\r\n                    Number: values.Number,\r\n                    ImgUser:image,\r\n                    FullName:values.Fullname,\r\n                    Birthdate:values.Birthdate,\r\n                    \r\n                })\r\n                toast.success(`🦄 cập nhập thành công`, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: \"light\",\r\n                  });\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n            setStatus(true)\r\n        },\r\n    })\r\n    console.log(\"img\",image)\r\n    return (\r\n        <div className=\"UserProfile__From\">\r\n\r\n            <SectionTitle>\r\n                <div className='UserProfile__title'>\r\n\r\n                    <span>\r\n\r\n                    </span>\r\n                    {\r\n                        status\r\n                            ? <div className=\"UserProfile__btn\" onClick={() => handleStatus()}\r\n                            >\r\n                                <Button>Edit</Button>\r\n                            </div>\r\n                            :\r\n                            <div className=\"UserProfile__warpper__btn\">\r\n                                <div className=\"UserProfile__btn\" onClick={() => handleBackupProduct(formUser)}>\r\n                                    <Button>Close</Button>\r\n                                </div>\r\n                                <div className=\"UserProfile__btn\" onClick={formik.submitForm}>\r\n                                    <Button>Save</Button>\r\n                                </div>\r\n\r\n                            </div>\r\n                    }\r\n                </div>\r\n            </SectionTitle>\r\n            <SectionBody>\r\n                <div className=\"UserProfile__warpper\">\r\n                    <form action=\"\" className='UserProfile__infomation'>\r\n                        <fieldset>\r\n                            <legend>Thông tin khách hàng</legend>\r\n                            <div className=\"input-container border--active input-container__center \">\r\n                                <label className='active'>Họ và tên</label>\r\n                                <input\r\n                                    id=\"Fullname\"\r\n                                    name=\"Fullname\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Vui lòng nhập họ và tên...\"\r\n                                    onChange={formik.handleChange}\r\n                                    onBlur={formik.handleBlur}\r\n                                    value={formik.values.Fullname}\r\n                                    required=\"false\"\r\n                                    disabled={status ? \"active\" : \"\"}\r\n                                />\r\n\r\n                                {formik.touched.Fullname && formik.errors.Fullname\r\n                                    ? <p className=\"error-message\">{formik.errors.Fullname}</p> : null}\r\n\r\n                            </div>\r\n                            <div className=\"input-container border--active input-container__center \">\r\n                                <label className='active'>Email</label>\r\n                                <input\r\n                                    id=\"Email\"\r\n                                    name=\"Email\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Email....\"\r\n                                    onChange={formik.handleChange}\r\n                                    onBlur={formik.handleBlur}\r\n                                    value={formik.values.Email}\r\n                                    required=\"false\"\r\n                                    disabled={status ? \"active\" : \"\"}\r\n                                />\r\n\r\n                                {formik.touched.Email && formik.errors.Email\r\n                                    ? <p className=\"error-message\">{formik.errors.Email}</p> : null}\r\n\r\n                            </div>\r\n                            <div className=\"input-container border--active input-container__center \">\r\n                                <label className='active'>Số điện thoại</label>\r\n                                <input\r\n                                    id=\"Number\"\r\n                                    name=\"Number\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Vui lòng nhập số điện thoại...\"\r\n                                    onChange={formik.handleChange}\r\n                                    onBlur={formik.handleBlur}\r\n                                    value={formik.values.Number}\r\n                                    required=\"false\"\r\n                                    disabled={status ? \"active\" : \"\"}\r\n                                />\r\n\r\n                                {formik.touched.Number && formik.errors.Number\r\n                                    ? <p className=\"error-message\">{formik.errors.Number}</p> : null}\r\n\r\n                            </div>\r\n                            <div className=\"input-container border--active input-container__center \">\r\n                                <label className='active'>Địa chỉ</label>\r\n                                <input\r\n                                    id=\"Address\"\r\n                                    name=\"Address\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Vui lòng nhập địa chỉ...\"\r\n                                    onChange={formik.handleChange}\r\n                                    onBlur={formik.handleBlur}\r\n                                    value={formik.values.Address}\r\n                                    required=\"false\"\r\n                                    disabled={status ? \"active\" : \"\"}\r\n                                />\r\n\r\n                                {formik.touched.Address && formik.errors.Address\r\n                                    ? <p className=\"error-message\">{formik.errors.Address}</p> : null}\r\n\r\n                            </div>\r\n                            <div className=\"input-container border--active\">\r\n                                <label className='active'>Ngày sinh</label>\r\n                                <input\r\n                                    id=\"Birthdate\"\r\n                                    name=\"Birthdate\"\r\n                                    type=\"date\"\r\n                                    placeholder=\"Vui lòng nhập ngày sinh...\"\r\n                                    onChange={formik.handleChange}\r\n                                    onBlur={formik.handleBlur}\r\n                                    value={formik.values.Birthdate}\r\n                                    disabled={status ? true : false}\r\n                                />\r\n\r\n                                {formik.touched.Birthdate && formik.errors.Birthdate\r\n                                    ? <p className=\"error-message\">{formik.errors.Birthdate}</p> : null}\r\n\r\n                            </div>\r\n                        </fieldset>\r\n                        <fieldset>\r\n                            <legend>Thay đổi ảnh đại diện</legend>\r\n                            <div className=\"input__warpper\">\r\n                                <div className=\" input__avatar\">\r\n                                    <img src={image == \"\"\r\n                                        ? \"https://mir-s3-cdn-cf.behance.net/project_modules/max_1200/36015793570193.5e6c1151cb04b.png\"\r\n                                        : image\r\n                                    } alt=\"\" />\r\n                                </div>\r\n                                <label className={`input__newAvatar ${status ? \"\" : \"active\"}`} htmlFor={`input__image`}>\r\n                                    <div className=\"input__newAvatar__content\">\r\n                                        <i class='bx bx-folder-plus' ></i>\r\n                                        <span>Chọn ảnh mới</span>\r\n                                    </div>\r\n\r\n                                    <input\r\n                                        type=\"file\"\r\n                                        name='input__image'\r\n                                        id='input__image'\r\n                                        disabled={status ? true : false}\r\n                                        onChange={(e) => handleUploadImage(e.target.files[0])}\r\n                                    />\r\n                                </label>\r\n                            </div>\r\n                        </fieldset>\r\n\r\n\r\n\r\n                    </form>\r\n\r\n                </div>\r\n\r\n            </SectionBody>\r\n        </div>\r\n    )\r\n}\r\n\r\nUserProfile.propTypes = {}\r\n\r\nexport default UserProfile","import {\r\n    createUserWithEmailAndPassword, \r\n    getAuth, \r\n    signInWithEmailAndPassword, \r\n    signOut \r\n   } from \"firebase/auth\";\r\n\r\nimport {auth} from '../../Firebase__config' \r\n\r\n// Sign Up website by email and password\r\nexport const AddUserAuthencation = async(user) =>{\r\n    try{\r\n        const {email, password} = user; // \r\n        const data = await createUserWithEmailAndPassword( auth, email, password) .then((userCredential) => {\r\n            // Signed in \r\n            const user = userCredential.user.uid;\r\n            return {\r\n                success: true,\r\n                payload:user,\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            return {\r\n                success: false,\r\n                payload:error,\r\n            }\r\n          });\r\n          return data;\r\n        \r\n    }catch(errors){\r\n        return {\r\n            success: false,\r\n            payload:errors,\r\n        }\r\n    }\r\n}\r\n// Sign Ip website by email and password\r\n export const SiginUserAuthencation = async(user)=>{\r\n    const {email, password} = user;\r\n    const data = await signInWithEmailAndPassword( auth, email, password) .then((userCredential) => { \r\n        const user = userCredential.user;\r\n        return {\r\n            success: true,\r\n            payload:user,\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        return {\r\n            success: false,\r\n            payload:error,\r\n        }\r\n      });\r\n      return data;\r\n}\r\n\r\nexport const SignOut = async()=>{\r\n    signOut(auth).then(() => {\r\n        return {\r\n            success: true,\r\n            payload:\"Sign-out successful\",\r\n        }\r\n      // Sign-out successful.\r\n    }).catch((error) => {\r\n      // An error happened.\r\n      return {\r\n        success: false,\r\n        payload:error,\r\n    }\r\n    });\r\n}","import {db} from '../../Firebase__config'\r\nimport { addDoc, collection, doc, getDoc, getDocs, setDoc, updateDoc} from \"firebase/firestore\";\r\n\r\n\r\nconst CollectionName = \"PurchaseHistory\"\r\n\r\nexport const AddPurchaseHistory = async(uid,uPid,PurchaseHistory)=>{\r\n    const colRef = collection(db, CollectionName);\r\n    const PurDoc = await setDoc(doc(db,\"PurchaseHistory\",uPid),PurchaseHistory);\r\n    \r\n    await updateDoc(doc(db,\"PurchaseHistory\",uPid),{\r\n        Uid:uid,\r\n    })\r\n    \r\n    \r\n}\r\n\r\n//get PurchaseHistory by user\r\nexport const GetPurchaseHistoryByUser = async(uid)=>{\r\n    const colRef = collection(db, CollectionName);\r\n    const ListPur = [];\r\n    const ListPurUser = [];\r\n    const docsSnap = await getDocs(colRef)\r\n    docsSnap.forEach(doc=>{\r\n        ListPur.push({\r\n            PurID: doc.id,\r\n            Info:doc.data()\r\n        })\r\n    })\r\n    for(let i=0; i<ListPur.length; i++){\r\n        if(ListPur[i].Info.Uid ===uid){\r\n            ListPurUser.push(ListPur[i])\r\n        }\r\n    }\r\n    return{\r\n        success: true,\r\n        payload:ListPurUser,\r\n    }\r\n}","import {db} from '../../Firebase__config'\r\nimport { addDoc, arrayUnion, collection, deleteDoc, doc, getDoc, getDocs, query, serverTimestamp, setDoc, Timestamp, updateDoc } from \"firebase/firestore\";\r\nimport { async } from '@firebase/util';\r\nimport { set } from 'firebase/database';\r\nimport {AddBestSell, GetNameProduct, GetPriceProduct, GetQuantityProduct,} from '../Product/Product'\r\nimport { GetPercentDiscountByID } from './Discount';\r\nimport { AddPurchaseHistory } from './PurchaseHistory';\r\nconst CollectionName = \"User\"\r\n\r\n\r\nexport const AddUserCollection = async(uid,newUser)=>{\r\n    const {Email,firstname,lastname} = newUser;\r\n    const initUser = {\r\n        Email:Email,\r\n        Address:\"\",\r\n        Number:\"\",\r\n        ImgUser:\"https://mir-s3-cdn-cf.behance.net/project_modules/max_1200/36015793570193.5e6c1151cb04b.png\",\r\n        FullName:`${firstname} ${lastname}`,\r\n        Birthdate:\"\",\r\n        Role:\"user\",\r\n    }    \r\n    return await setDoc(doc(db, CollectionName, uid), initUser)\r\n    .then(e=>{\r\n        return {\r\n            success: true,\r\n            payload:null,\r\n        }\r\n    })\r\n    .catch((error) => {\r\n        return {\r\n            success: false,\r\n            payload:error,\r\n        }\r\n    })\r\n\r\n}\r\n\r\nexport const GetUserCollection = async(uid)=>{\r\n    \r\n    const docRef = doc(db, CollectionName, uid);   \r\n    const docSnap = await getDoc(docRef);\r\n    if (docSnap.exists()) {\r\n        return {\r\n            success: true,\r\n            payload:docSnap.data(),\r\n        }\r\n    } else {\r\n        // doc.data() will be undefined in this case\r\n        return {\r\n            success: false,\r\n            payload:\"No such document!\",\r\n        }\r\n    }\r\n}\r\n\r\nexport const UpdateUser = async(uid,updateUser)=>{\r\n    const {\r\n        Email,\r\n        Address,\r\n        Number,\r\n        ImgUser,\r\n        FullName,\r\n        Birthdate, \r\n        \r\n    } = updateUser;\r\n    console.log(Email)\r\n    const docRef = doc(db, CollectionName,uid);\r\n    return await updateDoc(docRef,{\r\n        Email:Email,\r\n        Address:Address,\r\n        Number:Number,\r\n        ImgUser:ImgUser,\r\n        FullName:FullName,\r\n        Birthdate:Timestamp.fromDate(new Date(Birthdate)) ,\r\n        Role: \"User\"\r\n    })\r\n    .then(docRef =>{\r\n        return{\r\n            success: true,\r\n            payload:updateUser\r\n        }\r\n    })\r\n    .catch(e=>{\r\n        return{\r\n            success: false,\r\n            payload:e\r\n        }\r\n    })\r\n\r\n\r\n}\r\n\r\nexport const AddToCart = async(value)=>{\r\n    const {uid,Pid,Number} = value;\r\n    const washingtonRef = doc(db,CollectionName, uid);\r\n    //const docRef = await doc(db, `${CollectionName}/${uid}/Cart/`);\r\n\r\n    // add new user \r\n    await updateDoc(washingtonRef, {\r\n        Cart: arrayUnion({\r\n            Pid:Pid,\r\n            Number:Number,\r\n        })\r\n    });\r\n \r\n}\r\nexport const GetToCart = async(uid)=>{\r\n    // const docRef = doc(db,CollectionName,`${uid}/Cart/`);\r\n    const washingtonRef = doc(db,CollectionName, uid,\"Cart\");\r\n    await getDoc(washingtonRef)\r\n    .then((e)=>{\r\n        return {\r\n            success: true,\r\n            payload:e,\r\n        }\r\n    })\r\n    .catch(e=>{\r\n        return {\r\n            success: false,\r\n            payload:e,\r\n        }\r\n    })\r\n    \r\n}\r\nexport const setNewCart = async(uid,listProduct)=>{\r\n    \r\n    const washingtonRef = doc(db,CollectionName, uid);\r\n    \r\n    // add new user \r\n    await updateDoc(washingtonRef, {\r\n        Cart: listProduct\r\n    })\r\n    .then(()=>{\r\n        return {\r\n            success: true,\r\n            payload:null,\r\n        }\r\n    })\r\n    .catch(e=>{\r\n        return {\r\n            success: false,\r\n            payload:e,\r\n        }\r\n    })\r\n}\r\n\r\n//PurchaseHistory\r\nexport const AddPurchaseHistoryForUser = async(uid,status,Cart,ListProduct=[{pid:\"\",quantity:\"\"}]) =>{ \r\n    const {emailOrPhone,Address,Payments,Total,PriceDiscount,\r\n        FullName\r\n    } = Cart;\r\n        const initPur = {\r\n            Item:ListProduct,\r\n            Discount:PriceDiscount,\r\n            Total:Total,\r\n            DayPurchased:serverTimestamp(),\r\n            Address:Address,\r\n            Payments:Payments,\r\n            FullName:FullName,\r\n            Email:emailOrPhone,\r\n            Status:\"Pending\",\r\n        }\r\n        if(status===true){\r\n            \r\n            const docRef = doc(db, CollectionName, uid);\r\n            const colRef = collection(docRef, \"PurchaseHistoryForUser\");\r\n            const PurDoc = await addDoc(colRef,initPur);\r\n            for(let i=0;i<ListProduct.length;i++){\r\n                const docRefP = doc(db,\"Product\",ListProduct[i].pid);\r\n                const QuantityProduct = await GetQuantityProduct(ListProduct[i].pid);\r\n                await updateDoc(docRefP,{\r\n                    Quantity:(QuantityProduct-ListProduct[i].quantity).toString()})\r\n                await AddBestSell(ListProduct[i].pid,ListProduct[i].quantity);\r\n                \r\n            }\r\n            await AddPurchaseHistory(uid,PurDoc.id,initPur);\r\n        }\r\n        else{\r\n            const colRef = collection(db,\"PurchaseHistory\");\r\n            const PurDoc = await addDoc(colRef,initPur);\r\n            const docPur = await doc(db,\"PurchaseHistory\",PurDoc.id);\r\n            for(let i=0;i<ListProduct.length;i++){\r\n                const docRefP = doc(db,\"Product\",ListProduct[i].pid);\r\n                const QuantityProduct = await GetQuantityProduct(ListProduct[i].pid);\r\n                await updateDoc(docRefP,{\r\n                    Quantity:(QuantityProduct-ListProduct[i].quantity).toString()\r\n                                     })\r\n                await AddBestSell(ListProduct[i].pid,ListProduct[i].quantity);\r\n                \r\n            }\r\n            await updateDoc(docPur,{\r\n                    Uid:uid,\r\n        })\r\n        }\r\n       \r\n    }\r\n    export const GetPurchaseHistoryByUser=async(uid,uPid)=>{\r\n        const docRef = doc(db, CollectionName,uid,\"PurchaseHistoryForUser\",uPid);\r\n        const docSnap = await getDoc(docRef);\r\n        if(docSnap.exists())\r\n            return await docSnap.data();\r\n        return{\r\n            success: false,\r\n            payload:\"No Purchase History\"\r\n        }\r\n    }\r\n    \r\n    //Get quantity product\r\n    export const GetQuantity=async(uid,uPid)=>{\r\n        const docRef = doc(db, CollectionName,uid,\"PurchaseHistoryForUser\",uPid);\r\n        const docSnap = await getDoc(docRef);\r\n        if(docSnap.exists())\r\n            return await docSnap.data().Item;\r\n        return{\r\n            success: false,\r\n            payload:\"No Purchase History\"\r\n        }\r\n    }","import {\r\n    ref,\r\n    uploadBytes,\r\n    getDownloadURL,\r\n    listAll,\r\n    list,\r\n  } from \"firebase/storage\";\r\n  import { v4 } from \"uuid\";\r\n  import { storage } from \"../../Firebase__config\";\r\n\r\n\r\n\r\nexport const UploadImagetoCloud = async(Avatar)=>{\r\n    try {\r\n        return new Promise(async(Resolve, Reject)=>{\r\n            try{\r\n                if (Avatar == null) Reject(false);\r\n                \r\n                const imageRef = ref(storage, `images/${Avatar.name + v4()}`);\r\n                console.log('Uploading avatar',imageRef)\r\n                uploadBytes(imageRef, Avatar).then((snapshot) => {\r\n                     getDownloadURL(snapshot.ref).then((url) => {\r\n                        Resolve({\r\n                            success: true,\r\n                            payload: url,\r\n                        });\r\n                    });\r\n                });\r\n            }catch(error) {\r\n                console.log(\"falseUpload\");\r\n                console.log(error);\r\n                Reject(false);\r\n            }\r\n        })\r\n    } catch (error) {\r\n        return {\r\n            success: false,\r\n            payload: null,\r\n        }\r\n    }\r\n}\r\n","export  function formatNumber(num) {\r\n    return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\r\n}\r\n\r\nexport function formatTimestamptoDate(initdate){\r\n    let date = JSON.stringify(initdate)\r\n    return date.slice(1,11)\r\n}\r\n","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;"],"names":["props","class","onClick","e","children","initUser","uid","user","Address","Birthdate","Email","FullName","ImgUser","Number","Role","useState","active","setActive","formUser","setFormUser","image","setImage","status","setStatus","useContext","AuthContext","Authur","dispatch","useEffect","window","scrollTo","getUser","success","GetUserCollection","payload","newUser","console","log","handleStatus","useCallback","handleBackupProduct","product","formik","setFieldValue","formatTimestamptoDate","handleUploadImage","Avatar","UploadImagetoCloud","initImage","useFormik","enableReinitialize","initialValues","Fullname","toDate","validationSchema","Yup","onSubmit","values","type","AUTH__SET","UpdateUser","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","className","Section","Button","submitForm","action","id","name","placeholder","onChange","handleChange","onBlur","handleBlur","value","required","disabled","touched","errors","src","alt","htmlFor","target","files","AddUserAuthencation","email","password","createUserWithEmailAndPassword","auth","then","userCredential","catch","error","data","SiginUserAuthencation","signInWithEmailAndPassword","SignOut","signOut","CollectionName","AddPurchaseHistory","uPid","PurchaseHistory","collection","db","setDoc","doc","updateDoc","Uid","AddUserCollection","firstname","lastname","docRef","getDoc","docSnap","exists","updateUser","Timestamp","Date","AddPurchaseHistoryForUser","Cart","ListProduct","pid","quantity","emailOrPhone","Payments","Total","PriceDiscount","initPur","Item","Discount","DayPurchased","serverTimestamp","Status","colRef","addDoc","PurDoc","i","length","docRefP","GetQuantityProduct","QuantityProduct","Quantity","toString","AddBestSell","docPur","Promise","Resolve","Reject","imageRef","ref","storage","v4","uploadBytes","snapshot","getDownloadURL","url","formatNumber","num","replace","initdate","JSON","stringify","slice","getRandomValues","randomUUID","crypto","bind","rnds8","Uint8Array","rng","Error","byteToHex","push","unsafeStringify","arr","offset","toLowerCase","options","buf","native","rnds","random"],"sourceRoot":""}