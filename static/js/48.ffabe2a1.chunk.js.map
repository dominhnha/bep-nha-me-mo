{"version":3,"file":"static/js/48.ffabe2a1.chunk.js","mappings":"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","sources":["pages/SignUp/SignUp.jsx","services/Authencation/Authencation.jsx","services/Authencation/PurchaseHistory.jsx","services/Authencation/User.jsx"],"sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from \"yup\"\r\n\r\nimport './SignUp.scss'\r\nimport { Link,useNavigate } from 'react-router-dom';\r\n\r\nimport { AddUserAuthencation } from '../../services/Authencation/Authencation';\r\nimport { AddUserCollection } from '../../services/Authencation/User';\r\nconst SignUp = props => {\r\n  const history = useNavigate();\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      firstname: \"\",\r\n      lastname: \"\",\r\n      emailOrPhoneNumber: \"\",\r\n      password: \"\",\r\n      reEnterPassword: \"\",\r\n    },\r\n    validationSchema: Yup.object({\r\n      firstname: Yup.string()\r\n        .max(30, \"Họ đệm bạn nhập không vượt quá 30 ký tự\")\r\n        .required(\"Họ đệm không được bỏ trống\"),\r\n      lastname: Yup.string()\r\n        .max(30, \"Tên bạn nhập không vượt quá 30 ký tự\")\r\n        .required(\"Tên không được bỏ trống\"),\r\n      emailOrPhoneNumber: Yup.string()\r\n        .max(254, \"Email hoặc số điện thoại bạn nhập phải ít hơn 254 kí tự\")\r\n        .required(\"Email / Số điện thoại không được bỏ trống\"),\r\n      password: Yup.string().required(\"Mật khẩu không được bỏ trống\"),\r\n      reEnterPassword: Yup.string().required(\"Mật khẩu không được bỏ trống\")\r\n    }),\r\n    onSubmit: async(values) => {\r\n      try{\r\n        const {emailOrPhoneNumber,firstname,lastname,password} = values;\r\n        const uid =  await AddUserAuthencation({\r\n          email:emailOrPhoneNumber,\r\n          password:password,\r\n        })\r\n        console.log(uid)\r\n        if(uid.success){\r\n          console.log(uid.payload)\r\n          const initUser = await AddUserCollection(uid.payload,{\r\n            Email:emailOrPhoneNumber,\r\n            firstname:firstname,\r\n            lastname:lastname,\r\n          })\r\n          if(initUser.success){\r\n            history(\"/Account/SignIn\")\r\n          }else{\r\n            history(\"/404\")\r\n          }\r\n        }\r\n      }catch{\r\n        history(\"/404\")\r\n      }\r\n      \r\n      \r\n    }\r\n  });\r\n  return (\r\n    \r\n    <div className=\"center\">\r\n      <form className=\"sign-in-form\" onSubmit={formik.handleSubmit}>\r\n        <h1>Đăng Ký</h1>\r\n        <div class=\"tabs\">\r\n          <Link to={\"/Account/SignIn\"} className=\"tab-item\">\r\n            Đăng nhập\r\n          </Link>\r\n          <div class=\"tab-item active\">Đăng ký</div>\r\n        </div>\r\n        <div className=\"input-container\">\r\n            <input \r\n              id = \"firstname\"\r\n              name = \"firstname\"\r\n              type=\"text\"\r\n              onChange = {formik.handleChange}\r\n              onBlur = {formik.handleBlur}\r\n              value={formik.values.firstname}\r\n              required\r\n            />\r\n            <label className='border-null'>Họ Đệm</label>\r\n           {formik.touched.firstname && formik.errors.firstname ?  <p className=\"error-message active\">{formik.errors.firstname}</p> : null}   \r\n        </div>\r\n        <div className=\"input-container\">\r\n          <input \r\n              id = \"lastname\"\r\n              name = \"lastname\"\r\n              type=\"text\"\r\n              onChange = {formik.handleChange}\r\n              onBlur = {formik.handleBlur}\r\n              value={formik.values.lastname}\r\n              required\r\n            />\r\n            <label className='border-null'>Tên</label>\r\n           {formik.touched.lastname && formik.errors.lastname ?  <p className=\"error-message active\">{formik.errors.lastname}</p> : null}\r\n        </div>\r\n        \r\n        <div className=\"input-container\">\r\n          <input \r\n            id = \"emailOrPhoneNumber\"\r\n            name = \"emailOrPhoneNumber\"\r\n            type=\"text\"\r\n            onChange = {formik.handleChange}\r\n            onBlur = {formik.handleBlur}\r\n            value={formik.values.emailOrPhoneNumber}\r\n            required\r\n          />\r\n          <label className='border-null'>Email / Số điện thoại</label>\r\n          {formik.touched.emailOrPhoneNumber && formik.errors.emailOrPhoneNumber ?  <p className=\"error-message active\">{formik.errors.emailOrPhoneNumber}</p> : null}\r\n        </div>\r\n        <div className=\"input-container\">\r\n          <input \r\n            id = \"password\"\r\n            name = \"password\"\r\n            type=\"password\"\r\n            onChange = {formik.handleChange}\r\n            onBlur = {formik.handleBlur}\r\n            value={formik.values.password}\r\n            required\r\n          />\r\n          <label className='border-null'>Mật Khẩu</label>\r\n          {formik.touched.password && formik.errors.password ?  <p className=\"error-message active\">{formik.errors.password}</p> : null}\r\n        </div>\r\n        <div className=\"input-container\">\r\n          <input \r\n            id = \"reEnterPassword\"\r\n            name = \"reEnterPassword\"\r\n            type=\"password\"\r\n            onChange = {formik.handleChange}\r\n            onBlur = {formik.handleBlur}\r\n            value={formik.values.reEnterPassword}\r\n            required\r\n          />\r\n          <label className='border-null'>Nhập lại mật khẩu</label>\r\n          {formik.touched.reEnterPassword && formik.errors.reEnterPassword ?  <p className=\"error-message active\">{formik.errors.reEnterPassword}</p> : null}\r\n        </div>\r\n        <button type=\"submit\">Đăng Ký</button>\r\n        <div className=\"forget-password\">\r\n          <a href=\"#\">Bạn quên mật khẩu?</a>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nSignUp.propTypes = {};\r\n\r\nexport default SignUp;","import {\r\n    createUserWithEmailAndPassword, \r\n    getAuth, \r\n    signInWithEmailAndPassword, \r\n    signOut \r\n   } from \"firebase/auth\";\r\n\r\nimport {auth} from '../../Firebase__config' \r\n\r\n// Sign Up website by email and password\r\nexport const AddUserAuthencation = async(user) =>{\r\n    try{\r\n        const {email, password} = user; // \r\n        const data = await createUserWithEmailAndPassword( auth, email, password) .then((userCredential) => {\r\n            // Signed in \r\n            const user = userCredential.user.uid;\r\n            return {\r\n                success: true,\r\n                payload:user,\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            return {\r\n                success: false,\r\n                payload:error,\r\n            }\r\n          });\r\n          return data;\r\n        \r\n    }catch(errors){\r\n        return {\r\n            success: false,\r\n            payload:errors,\r\n        }\r\n    }\r\n}\r\n// Sign Ip website by email and password\r\n export const SiginUserAuthencation = async(user)=>{\r\n    const {email, password} = user;\r\n    const data = await signInWithEmailAndPassword( auth, email, password) .then((userCredential) => { \r\n        const user = userCredential.user;\r\n        return {\r\n            success: true,\r\n            payload:user,\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        return {\r\n            success: false,\r\n            payload:error,\r\n        }\r\n      });\r\n      return data;\r\n}\r\n\r\nexport const SignOut = async()=>{\r\n    signOut(auth).then(() => {\r\n        return {\r\n            success: true,\r\n            payload:\"Sign-out successful\",\r\n        }\r\n      // Sign-out successful.\r\n    }).catch((error) => {\r\n      // An error happened.\r\n      return {\r\n        success: false,\r\n        payload:error,\r\n    }\r\n    });\r\n}","import {db} from '../../Firebase__config'\r\nimport { addDoc, collection, doc, getDoc, updateDoc} from \"firebase/firestore\";\r\n\r\n\r\nconst CollectionName = \"PurchaseHistory\"\r\n\r\nexport const AddPurchaseHistory = async(uid,uPid,PurchaseHistory)=>{\r\n    const colRef = collection(db, CollectionName);\r\n    const PurDoc = await addDoc(colRef,PurchaseHistory);\r\n    const docPur = await doc(db,\"PurchaseHistory\",PurDoc.id);\r\n    \r\n    await updateDoc(docPur,{\r\n        Uid:uid,\r\n    })\r\n    \r\n    \r\n}\r\n\r\n//get PurchaseHistory by user\r\nexport const GetPurchaseHistoryByUser = async(uid)=>{\r\n\r\n}","import {db} from '../../Firebase__config'\r\nimport { addDoc, arrayUnion, collection, deleteDoc, doc, getDoc, getDocs, query, serverTimestamp, setDoc, Timestamp, updateDoc } from \"firebase/firestore\";\r\nimport { async } from '@firebase/util';\r\nimport { set } from 'firebase/database';\r\nimport {AddBestSell, GetNameProduct, GetPriceProduct, GetQuantityProduct,} from '../Product/Product'\r\nimport { GetPercentDiscountByID } from './Discount';\r\nimport { AddPurchaseHistory } from './PurchaseHistory';\r\nconst CollectionName = \"User\"\r\n\r\n\r\nexport const AddUserCollection = async(uid,newUser)=>{\r\n    const {Email,firstname,lastname} = newUser;\r\n    const initUser = {\r\n        Email:Email,\r\n        Address:\"\",\r\n        Number:\"\",\r\n        ImgUser:\"https://mir-s3-cdn-cf.behance.net/project_modules/max_1200/36015793570193.5e6c1151cb04b.png\",\r\n        FullName:`${firstname} ${lastname}`,\r\n        Birthdate:\"\",\r\n        Role:\"user\",\r\n    }    \r\n    return await setDoc(doc(db, CollectionName, uid), initUser)\r\n    .then(e=>{\r\n        return {\r\n            success: true,\r\n            payload:null,\r\n        }\r\n    })\r\n    .catch((error) => {\r\n        return {\r\n            success: false,\r\n            payload:error,\r\n        }\r\n    })\r\n\r\n}\r\n\r\nexport const GetUserCollection = async(uid)=>{\r\n    \r\n    const docRef = doc(db, CollectionName, uid);   \r\n    const docSnap = await getDoc(docRef);\r\n    if (docSnap.exists()) {\r\n        return {\r\n            success: true,\r\n            payload:docSnap.data(),\r\n        }\r\n    } else {\r\n        // doc.data() will be undefined in this case\r\n        return {\r\n            success: false,\r\n            payload:\"No such document!\",\r\n        }\r\n    }\r\n}\r\n\r\nexport const UpdateUser = async(uid,updateUser)=>{\r\n    const {\r\n        Email,\r\n        Address,\r\n        Number,\r\n        ImgUser,\r\n        FullName,\r\n        Birthdate, \r\n        \r\n    } = updateUser;\r\n    console.log(Email)\r\n    const docRef = doc(db, CollectionName,uid);\r\n    return await updateDoc(docRef,{\r\n        Email:Email,\r\n        Address:Address,\r\n        Number:Number,\r\n        ImgUser:ImgUser,\r\n        FullName:FullName,\r\n        Birthdate:Timestamp.fromDate(new Date(Birthdate)) ,\r\n        Role: \"User\"\r\n    })\r\n    .then(docRef =>{\r\n        return{\r\n            success: true,\r\n            payload:updateUser\r\n        }\r\n    })\r\n    .catch(e=>{\r\n        return{\r\n            success: false,\r\n            payload:e\r\n        }\r\n    })\r\n\r\n\r\n}\r\n\r\nexport const AddToCart = async(value)=>{\r\n    const {uid,Pid,Number} = value;\r\n    const washingtonRef = doc(db,CollectionName, uid);\r\n    //const docRef = await doc(db, `${CollectionName}/${uid}/Cart/`);\r\n\r\n    // add new user \r\n    await updateDoc(washingtonRef, {\r\n        Cart: arrayUnion({\r\n            Pid:Pid,\r\n            Number:Number,\r\n        })\r\n    });\r\n \r\n}\r\nexport const GetToCart = async(uid)=>{\r\n    // const docRef = doc(db,CollectionName,`${uid}/Cart/`);\r\n    const washingtonRef = doc(db,CollectionName, uid,\"Cart\");\r\n    await getDoc(washingtonRef)\r\n    .then((e)=>{\r\n        return {\r\n            success: true,\r\n            payload:e,\r\n        }\r\n    })\r\n    .catch(e=>{\r\n        return {\r\n            success: false,\r\n            payload:e,\r\n        }\r\n    })\r\n    \r\n}\r\nexport const setNewCart = async(uid,listProduct)=>{\r\n    \r\n    const washingtonRef = doc(db,CollectionName, uid);\r\n    \r\n    // add new user \r\n    await updateDoc(washingtonRef, {\r\n        Cart: listProduct\r\n    })\r\n    .then(()=>{\r\n        return {\r\n            success: true,\r\n            payload:null,\r\n        }\r\n    })\r\n    .catch(e=>{\r\n        return {\r\n            success: false,\r\n            payload:e,\r\n        }\r\n    })\r\n}\r\n\r\n//PurchaseHistory\r\nexport const AddPurchaseHistoryForUser = async(uid,status,Cart,ListProduct=[{pid:\"\",quantity:\"\"}]) =>{ \r\n    const {emailOrPhone,Address,Payments,Total,PriceDiscount,\r\n        FullName\r\n    } = Cart;\r\n        const initPur = {\r\n            Item:ListProduct,\r\n            Discount:PriceDiscount,\r\n            Total:Total,\r\n            DayPurchased:serverTimestamp(),\r\n            Address:Address,\r\n            Payments:Payments,\r\n            FullName:FullName,\r\n            Email:emailOrPhone,\r\n        }\r\n        if(status===true){\r\n            \r\n            const docRef = doc(db, CollectionName, uid);\r\n            const colRef = collection(docRef, \"PurchaseHistoryForUser\");\r\n            const PurDoc = await addDoc(colRef,initPur);\r\n            for(let i=0;i<ListProduct.length;i++){\r\n                const docRefP = doc(db,\"Product\",ListProduct[i].pid);\r\n                const QuantityProduct = await GetQuantityProduct(ListProduct[i].pid);\r\n                await updateDoc(docRefP,{\r\n                    Quantity:(QuantityProduct-ListProduct[i].quantity).toString()})\r\n                await AddBestSell(ListProduct[i].pid,ListProduct[i].quantity);\r\n                \r\n            }\r\n            await AddPurchaseHistory(uid,PurDoc.id,initPur);\r\n        }\r\n        else{\r\n            const colRef = collection(db,\"PurchaseHistory\");\r\n            const PurDoc = await addDoc(colRef,initPur);\r\n            const docPur = await doc(db,\"PurchaseHistory\",PurDoc.id);\r\n            for(let i=0;i<ListProduct.length;i++){\r\n                const docRefP = doc(db,\"Product\",ListProduct[i].pid);\r\n                const QuantityProduct = await GetQuantityProduct(ListProduct[i].pid);\r\n                await updateDoc(docRefP,{\r\n                    Quantity:(QuantityProduct-ListProduct[i].quantity).toString()\r\n                                     })\r\n                await AddBestSell(ListProduct[i].pid,ListProduct[i].quantity);\r\n                \r\n            }\r\n            await updateDoc(docPur,{\r\n                    Uid:uid,\r\n        })\r\n        }\r\n       \r\n    }\r\n    export const GetPurchaseHistoryByUser=async(uid,uPid)=>{\r\n        const docRef = doc(db, CollectionName,uid,\"PurchaseHistoryForUser\",uPid);\r\n        const docSnap = await getDoc(docRef);\r\n        if(docSnap.exists())\r\n            return await docSnap.data();\r\n        return{\r\n            success: false,\r\n            payload:\"No Purchase History\"\r\n        }\r\n    }\r\n    \r\n    //Get quantity product\r\n    export const GetQuantity=async(uid,uPid)=>{\r\n        const docRef = doc(db, CollectionName,uid,\"PurchaseHistoryForUser\",uPid);\r\n        const docSnap = await getDoc(docRef);\r\n        if(docSnap.exists())\r\n            return await docSnap.data().Item;\r\n        return{\r\n            success: false,\r\n            payload:\"No Purchase History\"\r\n        }\r\n    }"],"names":["props","history","useNavigate","formik","useFormik","initialValues","firstname","lastname","emailOrPhoneNumber","password","reEnterPassword","validationSchema","Yup","max","required","onSubmit","values","AddUserAuthencation","email","uid","console","log","success","payload","AddUserCollection","Email","className","handleSubmit","class","to","id","name","type","onChange","handleChange","onBlur","handleBlur","value","touched","errors","href","user","createUserWithEmailAndPassword","auth","then","userCredential","catch","error","data","SiginUserAuthencation","signInWithEmailAndPassword","SignOut","signOut","AddPurchaseHistory","uPid","PurchaseHistory","colRef","collection","db","addDoc","PurDoc","doc","docPur","updateDoc","Uid","CollectionName","newUser","initUser","Address","Number","ImgUser","FullName","Birthdate","Role","setDoc","e","GetUserCollection","docRef","getDoc","docSnap","exists","UpdateUser","updateUser","Timestamp","Date","AddPurchaseHistoryForUser","status","Cart","ListProduct","pid","quantity","emailOrPhone","Payments","Total","PriceDiscount","initPur","Item","Discount","DayPurchased","serverTimestamp","i","length","docRefP","GetQuantityProduct","QuantityProduct","Quantity","toString","AddBestSell"],"sourceRoot":""}